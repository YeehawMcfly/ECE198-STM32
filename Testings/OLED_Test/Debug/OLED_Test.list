
OLED_Test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003014  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002100  080031d8  080031d8  000041d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080052d8  080052d8  0000701c  2**0
                  CONTENTS
  4 .ARM          00000008  080052d8  080052d8  000062d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080052e0  080052e0  0000701c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080052e0  080052e0  000062e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080052e4  080052e4  000062e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000001c  20000000  080052e8  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000047c  2000001c  08005304  0000701c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000498  08005304  00007498  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000701c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000084ec  00000000  00000000  0000704c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000018c6  00000000  00000000  0000f538  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000868  00000000  00000000  00010e00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000672  00000000  00000000  00011668  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00021180  00000000  00000000  00011cda  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000bb30  00000000  00000000  00032e5a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000c820d  00000000  00000000  0003e98a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00106b97  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002274  00000000  00000000  00106bdc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000066  00000000  00000000  00108e50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	2000001c 	.word	0x2000001c
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080031c0 	.word	0x080031c0

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000020 	.word	0x20000020
 8000200:	080031c0 	.word	0x080031c0

08000204 <__aeabi_uldivmod>:
 8000204:	b953      	cbnz	r3, 800021c <__aeabi_uldivmod+0x18>
 8000206:	b94a      	cbnz	r2, 800021c <__aeabi_uldivmod+0x18>
 8000208:	2900      	cmp	r1, #0
 800020a:	bf08      	it	eq
 800020c:	2800      	cmpeq	r0, #0
 800020e:	bf1c      	itt	ne
 8000210:	f04f 31ff 	movne.w	r1, #4294967295
 8000214:	f04f 30ff 	movne.w	r0, #4294967295
 8000218:	f000 b96a 	b.w	80004f0 <__aeabi_idiv0>
 800021c:	f1ad 0c08 	sub.w	ip, sp, #8
 8000220:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000224:	f000 f806 	bl	8000234 <__udivmoddi4>
 8000228:	f8dd e004 	ldr.w	lr, [sp, #4]
 800022c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000230:	b004      	add	sp, #16
 8000232:	4770      	bx	lr

08000234 <__udivmoddi4>:
 8000234:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000238:	9d08      	ldr	r5, [sp, #32]
 800023a:	460c      	mov	r4, r1
 800023c:	2b00      	cmp	r3, #0
 800023e:	d14e      	bne.n	80002de <__udivmoddi4+0xaa>
 8000240:	4694      	mov	ip, r2
 8000242:	458c      	cmp	ip, r1
 8000244:	4686      	mov	lr, r0
 8000246:	fab2 f282 	clz	r2, r2
 800024a:	d962      	bls.n	8000312 <__udivmoddi4+0xde>
 800024c:	b14a      	cbz	r2, 8000262 <__udivmoddi4+0x2e>
 800024e:	f1c2 0320 	rsb	r3, r2, #32
 8000252:	4091      	lsls	r1, r2
 8000254:	fa20 f303 	lsr.w	r3, r0, r3
 8000258:	fa0c fc02 	lsl.w	ip, ip, r2
 800025c:	4319      	orrs	r1, r3
 800025e:	fa00 fe02 	lsl.w	lr, r0, r2
 8000262:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000266:	fa1f f68c 	uxth.w	r6, ip
 800026a:	fbb1 f4f7 	udiv	r4, r1, r7
 800026e:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000272:	fb07 1114 	mls	r1, r7, r4, r1
 8000276:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800027a:	fb04 f106 	mul.w	r1, r4, r6
 800027e:	4299      	cmp	r1, r3
 8000280:	d90a      	bls.n	8000298 <__udivmoddi4+0x64>
 8000282:	eb1c 0303 	adds.w	r3, ip, r3
 8000286:	f104 30ff 	add.w	r0, r4, #4294967295
 800028a:	f080 8112 	bcs.w	80004b2 <__udivmoddi4+0x27e>
 800028e:	4299      	cmp	r1, r3
 8000290:	f240 810f 	bls.w	80004b2 <__udivmoddi4+0x27e>
 8000294:	3c02      	subs	r4, #2
 8000296:	4463      	add	r3, ip
 8000298:	1a59      	subs	r1, r3, r1
 800029a:	fa1f f38e 	uxth.w	r3, lr
 800029e:	fbb1 f0f7 	udiv	r0, r1, r7
 80002a2:	fb07 1110 	mls	r1, r7, r0, r1
 80002a6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80002aa:	fb00 f606 	mul.w	r6, r0, r6
 80002ae:	429e      	cmp	r6, r3
 80002b0:	d90a      	bls.n	80002c8 <__udivmoddi4+0x94>
 80002b2:	eb1c 0303 	adds.w	r3, ip, r3
 80002b6:	f100 31ff 	add.w	r1, r0, #4294967295
 80002ba:	f080 80fc 	bcs.w	80004b6 <__udivmoddi4+0x282>
 80002be:	429e      	cmp	r6, r3
 80002c0:	f240 80f9 	bls.w	80004b6 <__udivmoddi4+0x282>
 80002c4:	4463      	add	r3, ip
 80002c6:	3802      	subs	r0, #2
 80002c8:	1b9b      	subs	r3, r3, r6
 80002ca:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 80002ce:	2100      	movs	r1, #0
 80002d0:	b11d      	cbz	r5, 80002da <__udivmoddi4+0xa6>
 80002d2:	40d3      	lsrs	r3, r2
 80002d4:	2200      	movs	r2, #0
 80002d6:	e9c5 3200 	strd	r3, r2, [r5]
 80002da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002de:	428b      	cmp	r3, r1
 80002e0:	d905      	bls.n	80002ee <__udivmoddi4+0xba>
 80002e2:	b10d      	cbz	r5, 80002e8 <__udivmoddi4+0xb4>
 80002e4:	e9c5 0100 	strd	r0, r1, [r5]
 80002e8:	2100      	movs	r1, #0
 80002ea:	4608      	mov	r0, r1
 80002ec:	e7f5      	b.n	80002da <__udivmoddi4+0xa6>
 80002ee:	fab3 f183 	clz	r1, r3
 80002f2:	2900      	cmp	r1, #0
 80002f4:	d146      	bne.n	8000384 <__udivmoddi4+0x150>
 80002f6:	42a3      	cmp	r3, r4
 80002f8:	d302      	bcc.n	8000300 <__udivmoddi4+0xcc>
 80002fa:	4290      	cmp	r0, r2
 80002fc:	f0c0 80f0 	bcc.w	80004e0 <__udivmoddi4+0x2ac>
 8000300:	1a86      	subs	r6, r0, r2
 8000302:	eb64 0303 	sbc.w	r3, r4, r3
 8000306:	2001      	movs	r0, #1
 8000308:	2d00      	cmp	r5, #0
 800030a:	d0e6      	beq.n	80002da <__udivmoddi4+0xa6>
 800030c:	e9c5 6300 	strd	r6, r3, [r5]
 8000310:	e7e3      	b.n	80002da <__udivmoddi4+0xa6>
 8000312:	2a00      	cmp	r2, #0
 8000314:	f040 8090 	bne.w	8000438 <__udivmoddi4+0x204>
 8000318:	eba1 040c 	sub.w	r4, r1, ip
 800031c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000320:	fa1f f78c 	uxth.w	r7, ip
 8000324:	2101      	movs	r1, #1
 8000326:	fbb4 f6f8 	udiv	r6, r4, r8
 800032a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800032e:	fb08 4416 	mls	r4, r8, r6, r4
 8000332:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000336:	fb07 f006 	mul.w	r0, r7, r6
 800033a:	4298      	cmp	r0, r3
 800033c:	d908      	bls.n	8000350 <__udivmoddi4+0x11c>
 800033e:	eb1c 0303 	adds.w	r3, ip, r3
 8000342:	f106 34ff 	add.w	r4, r6, #4294967295
 8000346:	d202      	bcs.n	800034e <__udivmoddi4+0x11a>
 8000348:	4298      	cmp	r0, r3
 800034a:	f200 80cd 	bhi.w	80004e8 <__udivmoddi4+0x2b4>
 800034e:	4626      	mov	r6, r4
 8000350:	1a1c      	subs	r4, r3, r0
 8000352:	fa1f f38e 	uxth.w	r3, lr
 8000356:	fbb4 f0f8 	udiv	r0, r4, r8
 800035a:	fb08 4410 	mls	r4, r8, r0, r4
 800035e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000362:	fb00 f707 	mul.w	r7, r0, r7
 8000366:	429f      	cmp	r7, r3
 8000368:	d908      	bls.n	800037c <__udivmoddi4+0x148>
 800036a:	eb1c 0303 	adds.w	r3, ip, r3
 800036e:	f100 34ff 	add.w	r4, r0, #4294967295
 8000372:	d202      	bcs.n	800037a <__udivmoddi4+0x146>
 8000374:	429f      	cmp	r7, r3
 8000376:	f200 80b0 	bhi.w	80004da <__udivmoddi4+0x2a6>
 800037a:	4620      	mov	r0, r4
 800037c:	1bdb      	subs	r3, r3, r7
 800037e:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000382:	e7a5      	b.n	80002d0 <__udivmoddi4+0x9c>
 8000384:	f1c1 0620 	rsb	r6, r1, #32
 8000388:	408b      	lsls	r3, r1
 800038a:	fa22 f706 	lsr.w	r7, r2, r6
 800038e:	431f      	orrs	r7, r3
 8000390:	fa20 fc06 	lsr.w	ip, r0, r6
 8000394:	fa04 f301 	lsl.w	r3, r4, r1
 8000398:	ea43 030c 	orr.w	r3, r3, ip
 800039c:	40f4      	lsrs	r4, r6
 800039e:	fa00 f801 	lsl.w	r8, r0, r1
 80003a2:	0c38      	lsrs	r0, r7, #16
 80003a4:	ea4f 4913 	mov.w	r9, r3, lsr #16
 80003a8:	fbb4 fef0 	udiv	lr, r4, r0
 80003ac:	fa1f fc87 	uxth.w	ip, r7
 80003b0:	fb00 441e 	mls	r4, r0, lr, r4
 80003b4:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80003b8:	fb0e f90c 	mul.w	r9, lr, ip
 80003bc:	45a1      	cmp	r9, r4
 80003be:	fa02 f201 	lsl.w	r2, r2, r1
 80003c2:	d90a      	bls.n	80003da <__udivmoddi4+0x1a6>
 80003c4:	193c      	adds	r4, r7, r4
 80003c6:	f10e 3aff 	add.w	sl, lr, #4294967295
 80003ca:	f080 8084 	bcs.w	80004d6 <__udivmoddi4+0x2a2>
 80003ce:	45a1      	cmp	r9, r4
 80003d0:	f240 8081 	bls.w	80004d6 <__udivmoddi4+0x2a2>
 80003d4:	f1ae 0e02 	sub.w	lr, lr, #2
 80003d8:	443c      	add	r4, r7
 80003da:	eba4 0409 	sub.w	r4, r4, r9
 80003de:	fa1f f983 	uxth.w	r9, r3
 80003e2:	fbb4 f3f0 	udiv	r3, r4, r0
 80003e6:	fb00 4413 	mls	r4, r0, r3, r4
 80003ea:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 80003ee:	fb03 fc0c 	mul.w	ip, r3, ip
 80003f2:	45a4      	cmp	ip, r4
 80003f4:	d907      	bls.n	8000406 <__udivmoddi4+0x1d2>
 80003f6:	193c      	adds	r4, r7, r4
 80003f8:	f103 30ff 	add.w	r0, r3, #4294967295
 80003fc:	d267      	bcs.n	80004ce <__udivmoddi4+0x29a>
 80003fe:	45a4      	cmp	ip, r4
 8000400:	d965      	bls.n	80004ce <__udivmoddi4+0x29a>
 8000402:	3b02      	subs	r3, #2
 8000404:	443c      	add	r4, r7
 8000406:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 800040a:	fba0 9302 	umull	r9, r3, r0, r2
 800040e:	eba4 040c 	sub.w	r4, r4, ip
 8000412:	429c      	cmp	r4, r3
 8000414:	46ce      	mov	lr, r9
 8000416:	469c      	mov	ip, r3
 8000418:	d351      	bcc.n	80004be <__udivmoddi4+0x28a>
 800041a:	d04e      	beq.n	80004ba <__udivmoddi4+0x286>
 800041c:	b155      	cbz	r5, 8000434 <__udivmoddi4+0x200>
 800041e:	ebb8 030e 	subs.w	r3, r8, lr
 8000422:	eb64 040c 	sbc.w	r4, r4, ip
 8000426:	fa04 f606 	lsl.w	r6, r4, r6
 800042a:	40cb      	lsrs	r3, r1
 800042c:	431e      	orrs	r6, r3
 800042e:	40cc      	lsrs	r4, r1
 8000430:	e9c5 6400 	strd	r6, r4, [r5]
 8000434:	2100      	movs	r1, #0
 8000436:	e750      	b.n	80002da <__udivmoddi4+0xa6>
 8000438:	f1c2 0320 	rsb	r3, r2, #32
 800043c:	fa20 f103 	lsr.w	r1, r0, r3
 8000440:	fa0c fc02 	lsl.w	ip, ip, r2
 8000444:	fa24 f303 	lsr.w	r3, r4, r3
 8000448:	4094      	lsls	r4, r2
 800044a:	430c      	orrs	r4, r1
 800044c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000450:	fa00 fe02 	lsl.w	lr, r0, r2
 8000454:	fa1f f78c 	uxth.w	r7, ip
 8000458:	fbb3 f0f8 	udiv	r0, r3, r8
 800045c:	fb08 3110 	mls	r1, r8, r0, r3
 8000460:	0c23      	lsrs	r3, r4, #16
 8000462:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000466:	fb00 f107 	mul.w	r1, r0, r7
 800046a:	4299      	cmp	r1, r3
 800046c:	d908      	bls.n	8000480 <__udivmoddi4+0x24c>
 800046e:	eb1c 0303 	adds.w	r3, ip, r3
 8000472:	f100 36ff 	add.w	r6, r0, #4294967295
 8000476:	d22c      	bcs.n	80004d2 <__udivmoddi4+0x29e>
 8000478:	4299      	cmp	r1, r3
 800047a:	d92a      	bls.n	80004d2 <__udivmoddi4+0x29e>
 800047c:	3802      	subs	r0, #2
 800047e:	4463      	add	r3, ip
 8000480:	1a5b      	subs	r3, r3, r1
 8000482:	b2a4      	uxth	r4, r4
 8000484:	fbb3 f1f8 	udiv	r1, r3, r8
 8000488:	fb08 3311 	mls	r3, r8, r1, r3
 800048c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000490:	fb01 f307 	mul.w	r3, r1, r7
 8000494:	42a3      	cmp	r3, r4
 8000496:	d908      	bls.n	80004aa <__udivmoddi4+0x276>
 8000498:	eb1c 0404 	adds.w	r4, ip, r4
 800049c:	f101 36ff 	add.w	r6, r1, #4294967295
 80004a0:	d213      	bcs.n	80004ca <__udivmoddi4+0x296>
 80004a2:	42a3      	cmp	r3, r4
 80004a4:	d911      	bls.n	80004ca <__udivmoddi4+0x296>
 80004a6:	3902      	subs	r1, #2
 80004a8:	4464      	add	r4, ip
 80004aa:	1ae4      	subs	r4, r4, r3
 80004ac:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80004b0:	e739      	b.n	8000326 <__udivmoddi4+0xf2>
 80004b2:	4604      	mov	r4, r0
 80004b4:	e6f0      	b.n	8000298 <__udivmoddi4+0x64>
 80004b6:	4608      	mov	r0, r1
 80004b8:	e706      	b.n	80002c8 <__udivmoddi4+0x94>
 80004ba:	45c8      	cmp	r8, r9
 80004bc:	d2ae      	bcs.n	800041c <__udivmoddi4+0x1e8>
 80004be:	ebb9 0e02 	subs.w	lr, r9, r2
 80004c2:	eb63 0c07 	sbc.w	ip, r3, r7
 80004c6:	3801      	subs	r0, #1
 80004c8:	e7a8      	b.n	800041c <__udivmoddi4+0x1e8>
 80004ca:	4631      	mov	r1, r6
 80004cc:	e7ed      	b.n	80004aa <__udivmoddi4+0x276>
 80004ce:	4603      	mov	r3, r0
 80004d0:	e799      	b.n	8000406 <__udivmoddi4+0x1d2>
 80004d2:	4630      	mov	r0, r6
 80004d4:	e7d4      	b.n	8000480 <__udivmoddi4+0x24c>
 80004d6:	46d6      	mov	lr, sl
 80004d8:	e77f      	b.n	80003da <__udivmoddi4+0x1a6>
 80004da:	4463      	add	r3, ip
 80004dc:	3802      	subs	r0, #2
 80004de:	e74d      	b.n	800037c <__udivmoddi4+0x148>
 80004e0:	4606      	mov	r6, r0
 80004e2:	4623      	mov	r3, r4
 80004e4:	4608      	mov	r0, r1
 80004e6:	e70f      	b.n	8000308 <__udivmoddi4+0xd4>
 80004e8:	3e02      	subs	r6, #2
 80004ea:	4463      	add	r3, ip
 80004ec:	e730      	b.n	8000350 <__udivmoddi4+0x11c>
 80004ee:	bf00      	nop

080004f0 <__aeabi_idiv0>:
 80004f0:	4770      	bx	lr
 80004f2:	bf00      	nop

080004f4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80004f4:	b580      	push	{r7, lr}
 80004f6:	b088      	sub	sp, #32
 80004f8:	af04      	add	r7, sp, #16
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80004fa:	f000 ffaf 	bl	800145c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80004fe:	f000 f87d 	bl	80005fc <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000502:	f000 f909 	bl	8000718 <MX_GPIO_Init>
  MX_I2C1_Init();
 8000506:	f000 f8d9 	bl	80006bc <MX_I2C1_Init>
  /* USER CODE BEGIN 2 */
  SSD1306_Init();
 800050a:	f000 f99b 	bl	8000844 <SSD1306_Init>
  SSD1306_GotoXY (0,0);
 800050e:	2100      	movs	r1, #0
 8000510:	2000      	movs	r0, #0
 8000512:	f000 fb01 	bl	8000b18 <SSD1306_GotoXY>
  SSD1306_Puts ("MICROPETA", &Font_11x18, 1);
 8000516:	2201      	movs	r2, #1
 8000518:	4934      	ldr	r1, [pc, #208]	@ (80005ec <main+0xf8>)
 800051a:	4835      	ldr	r0, [pc, #212]	@ (80005f0 <main+0xfc>)
 800051c:	f000 fb90 	bl	8000c40 <SSD1306_Puts>
  SSD1306_GotoXY (0, 30);
 8000520:	211e      	movs	r1, #30
 8000522:	2000      	movs	r0, #0
 8000524:	f000 faf8 	bl	8000b18 <SSD1306_GotoXY>
  SSD1306_Puts ("BY NIZAR", &Font_11x18, 1);
 8000528:	2201      	movs	r2, #1
 800052a:	4930      	ldr	r1, [pc, #192]	@ (80005ec <main+0xf8>)
 800052c:	4831      	ldr	r0, [pc, #196]	@ (80005f4 <main+0x100>)
 800052e:	f000 fb87 	bl	8000c40 <SSD1306_Puts>
  SSD1306_UpdateScreen();
 8000532:	f000 fa4b 	bl	80009cc <SSD1306_UpdateScreen>
  HAL_Delay (1000);
 8000536:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 800053a:	f001 f801 	bl	8001540 <HAL_Delay>
  SSD1306_ScrollRight(0,7);
 800053e:	2107      	movs	r1, #7
 8000540:	2000      	movs	r0, #0
 8000542:	f000 f909 	bl	8000758 <SSD1306_ScrollRight>
  HAL_Delay(3000);
 8000546:	f640 30b8 	movw	r0, #3000	@ 0xbb8
 800054a:	f000 fff9 	bl	8001540 <HAL_Delay>
  SSD1306_ScrollLeft(0,7);
 800054e:	2107      	movs	r1, #7
 8000550:	2000      	movs	r0, #0
 8000552:	f000 f937 	bl	80007c4 <SSD1306_ScrollLeft>
  HAL_Delay(3000);
 8000556:	f640 30b8 	movw	r0, #3000	@ 0xbb8
 800055a:	f000 fff1 	bl	8001540 <HAL_Delay>
  SSD1306_Stopscroll();
 800055e:	f000 f967 	bl	8000830 <SSD1306_Stopscroll>
  SSD1306_Clear();
 8000562:	f000 fdfc 	bl	800115e <SSD1306_Clear>

  int num=2024;
 8000566:	f44f 63fd 	mov.w	r3, #2024	@ 0x7e8
 800056a:	60fb      	str	r3, [r7, #12]
  char snum[5];
  SSD1306_GotoXY (30,20);
 800056c:	2114      	movs	r1, #20
 800056e:	201e      	movs	r0, #30
 8000570:	f000 fad2 	bl	8000b18 <SSD1306_GotoXY>
  itoa(num, snum, 10);
 8000574:	1d3b      	adds	r3, r7, #4
 8000576:	220a      	movs	r2, #10
 8000578:	4619      	mov	r1, r3
 800057a:	68f8      	ldr	r0, [r7, #12]
 800057c:	f002 fdb0 	bl	80030e0 <itoa>
  SSD1306_Puts (snum, &Font_16x26, 1);
 8000580:	1d3b      	adds	r3, r7, #4
 8000582:	2201      	movs	r2, #1
 8000584:	491c      	ldr	r1, [pc, #112]	@ (80005f8 <main+0x104>)
 8000586:	4618      	mov	r0, r3
 8000588:	f000 fb5a 	bl	8000c40 <SSD1306_Puts>
  SSD1306_UpdateScreen();
 800058c:	f000 fa1e 	bl	80009cc <SSD1306_UpdateScreen>

  //SSD1306_DrawLine(POINT1 X, POINT1 Y, POINT2 X, POINT2 Y, 1);
  SSD1306_DrawLine(1,54,126,54,1);
 8000590:	2301      	movs	r3, #1
 8000592:	9300      	str	r3, [sp, #0]
 8000594:	2336      	movs	r3, #54	@ 0x36
 8000596:	227e      	movs	r2, #126	@ 0x7e
 8000598:	2136      	movs	r1, #54	@ 0x36
 800059a:	2001      	movs	r0, #1
 800059c:	f000 fb75 	bl	8000c8a <SSD1306_DrawLine>
  SSD1306_UpdateScreen();
 80005a0:	f000 fa14 	bl	80009cc <SSD1306_UpdateScreen>
  HAL_Delay (5000);
 80005a4:	f241 3088 	movw	r0, #5000	@ 0x1388
 80005a8:	f000 ffca 	bl	8001540 <HAL_Delay>
  SSD1306_Clear();
 80005ac:	f000 fdd7 	bl	800115e <SSD1306_Clear>

  // For Rectangle, we need to use two corner points
  // SSD1306_DrawRectangle(POINT1 X, POINT1 Y, POINT2 X, POINT2 Y, 1);
  SSD1306_DrawRectangle(17,1,115,14,1);
 80005b0:	2301      	movs	r3, #1
 80005b2:	9300      	str	r3, [sp, #0]
 80005b4:	230e      	movs	r3, #14
 80005b6:	2273      	movs	r2, #115	@ 0x73
 80005b8:	2101      	movs	r1, #1
 80005ba:	2011      	movs	r0, #17
 80005bc:	f000 fc60 	bl	8000e80 <SSD1306_DrawRectangle>
  // SSD1306_DrawTriangle(POINT1X, POINT1Y, POINT2X, POINT2Y, POINT3X, POINT3Y, 1);
  SSD1306_DrawTriangle(73,22,124,62,74,54,1);
 80005c0:	2301      	movs	r3, #1
 80005c2:	9302      	str	r3, [sp, #8]
 80005c4:	2336      	movs	r3, #54	@ 0x36
 80005c6:	9301      	str	r3, [sp, #4]
 80005c8:	234a      	movs	r3, #74	@ 0x4a
 80005ca:	9300      	str	r3, [sp, #0]
 80005cc:	233e      	movs	r3, #62	@ 0x3e
 80005ce:	227c      	movs	r2, #124	@ 0x7c
 80005d0:	2116      	movs	r1, #22
 80005d2:	2049      	movs	r0, #73	@ 0x49
 80005d4:	f000 fcbe 	bl	8000f54 <SSD1306_DrawTriangle>
  // SSD1306_DrawCircle(CENTER POINT X, CENTER POINT Y, RADIUS, 1);
  SSD1306_DrawCircle(34,50,13,1);
 80005d8:	2301      	movs	r3, #1
 80005da:	220d      	movs	r2, #13
 80005dc:	2132      	movs	r1, #50	@ 0x32
 80005de:	2022      	movs	r0, #34	@ 0x22
 80005e0:	f000 fce9 	bl	8000fb6 <SSD1306_DrawCircle>
  SSD1306_UpdateScreen();
 80005e4:	f000 f9f2 	bl	80009cc <SSD1306_UpdateScreen>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 80005e8:	bf00      	nop
 80005ea:	e7fd      	b.n	80005e8 <main+0xf4>
 80005ec:	20000000 	.word	0x20000000
 80005f0:	080031d8 	.word	0x080031d8
 80005f4:	080031e4 	.word	0x080031e4
 80005f8:	20000008 	.word	0x20000008

080005fc <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80005fc:	b580      	push	{r7, lr}
 80005fe:	b094      	sub	sp, #80	@ 0x50
 8000600:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000602:	f107 031c 	add.w	r3, r7, #28
 8000606:	2234      	movs	r2, #52	@ 0x34
 8000608:	2100      	movs	r1, #0
 800060a:	4618      	mov	r0, r3
 800060c:	f002 fdac 	bl	8003168 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000610:	f107 0308 	add.w	r3, r7, #8
 8000614:	2200      	movs	r2, #0
 8000616:	601a      	str	r2, [r3, #0]
 8000618:	605a      	str	r2, [r3, #4]
 800061a:	609a      	str	r2, [r3, #8]
 800061c:	60da      	str	r2, [r3, #12]
 800061e:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000620:	2300      	movs	r3, #0
 8000622:	607b      	str	r3, [r7, #4]
 8000624:	4b23      	ldr	r3, [pc, #140]	@ (80006b4 <SystemClock_Config+0xb8>)
 8000626:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000628:	4a22      	ldr	r2, [pc, #136]	@ (80006b4 <SystemClock_Config+0xb8>)
 800062a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800062e:	6413      	str	r3, [r2, #64]	@ 0x40
 8000630:	4b20      	ldr	r3, [pc, #128]	@ (80006b4 <SystemClock_Config+0xb8>)
 8000632:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000634:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000638:	607b      	str	r3, [r7, #4]
 800063a:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 800063c:	2300      	movs	r3, #0
 800063e:	603b      	str	r3, [r7, #0]
 8000640:	4b1d      	ldr	r3, [pc, #116]	@ (80006b8 <SystemClock_Config+0xbc>)
 8000642:	681b      	ldr	r3, [r3, #0]
 8000644:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8000648:	4a1b      	ldr	r2, [pc, #108]	@ (80006b8 <SystemClock_Config+0xbc>)
 800064a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800064e:	6013      	str	r3, [r2, #0]
 8000650:	4b19      	ldr	r3, [pc, #100]	@ (80006b8 <SystemClock_Config+0xbc>)
 8000652:	681b      	ldr	r3, [r3, #0]
 8000654:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000658:	603b      	str	r3, [r7, #0]
 800065a:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800065c:	2302      	movs	r3, #2
 800065e:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000660:	2301      	movs	r3, #1
 8000662:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000664:	2310      	movs	r3, #16
 8000666:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8000668:	2300      	movs	r3, #0
 800066a:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800066c:	f107 031c 	add.w	r3, r7, #28
 8000670:	4618      	mov	r0, r3
 8000672:	f002 fa7f 	bl	8002b74 <HAL_RCC_OscConfig>
 8000676:	4603      	mov	r3, r0
 8000678:	2b00      	cmp	r3, #0
 800067a:	d001      	beq.n	8000680 <SystemClock_Config+0x84>
  {
    Error_Handler();
 800067c:	f000 f866 	bl	800074c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000680:	230f      	movs	r3, #15
 8000682:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000684:	2300      	movs	r3, #0
 8000686:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000688:	2300      	movs	r3, #0
 800068a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800068c:	2300      	movs	r3, #0
 800068e:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000690:	2300      	movs	r3, #0
 8000692:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000694:	f107 0308 	add.w	r3, r7, #8
 8000698:	2100      	movs	r1, #0
 800069a:	4618      	mov	r0, r3
 800069c:	f001 ffba 	bl	8002614 <HAL_RCC_ClockConfig>
 80006a0:	4603      	mov	r3, r0
 80006a2:	2b00      	cmp	r3, #0
 80006a4:	d001      	beq.n	80006aa <SystemClock_Config+0xae>
  {
    Error_Handler();
 80006a6:	f000 f851 	bl	800074c <Error_Handler>
  }
}
 80006aa:	bf00      	nop
 80006ac:	3750      	adds	r7, #80	@ 0x50
 80006ae:	46bd      	mov	sp, r7
 80006b0:	bd80      	pop	{r7, pc}
 80006b2:	bf00      	nop
 80006b4:	40023800 	.word	0x40023800
 80006b8:	40007000 	.word	0x40007000

080006bc <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 80006bc:	b580      	push	{r7, lr}
 80006be:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 80006c0:	4b12      	ldr	r3, [pc, #72]	@ (800070c <MX_I2C1_Init+0x50>)
 80006c2:	4a13      	ldr	r2, [pc, #76]	@ (8000710 <MX_I2C1_Init+0x54>)
 80006c4:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 400000;
 80006c6:	4b11      	ldr	r3, [pc, #68]	@ (800070c <MX_I2C1_Init+0x50>)
 80006c8:	4a12      	ldr	r2, [pc, #72]	@ (8000714 <MX_I2C1_Init+0x58>)
 80006ca:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80006cc:	4b0f      	ldr	r3, [pc, #60]	@ (800070c <MX_I2C1_Init+0x50>)
 80006ce:	2200      	movs	r2, #0
 80006d0:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 80006d2:	4b0e      	ldr	r3, [pc, #56]	@ (800070c <MX_I2C1_Init+0x50>)
 80006d4:	2200      	movs	r2, #0
 80006d6:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80006d8:	4b0c      	ldr	r3, [pc, #48]	@ (800070c <MX_I2C1_Init+0x50>)
 80006da:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80006de:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80006e0:	4b0a      	ldr	r3, [pc, #40]	@ (800070c <MX_I2C1_Init+0x50>)
 80006e2:	2200      	movs	r2, #0
 80006e4:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 80006e6:	4b09      	ldr	r3, [pc, #36]	@ (800070c <MX_I2C1_Init+0x50>)
 80006e8:	2200      	movs	r2, #0
 80006ea:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80006ec:	4b07      	ldr	r3, [pc, #28]	@ (800070c <MX_I2C1_Init+0x50>)
 80006ee:	2200      	movs	r2, #0
 80006f0:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80006f2:	4b06      	ldr	r3, [pc, #24]	@ (800070c <MX_I2C1_Init+0x50>)
 80006f4:	2200      	movs	r2, #0
 80006f6:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80006f8:	4804      	ldr	r0, [pc, #16]	@ (800070c <MX_I2C1_Init+0x50>)
 80006fa:	f001 f9bf 	bl	8001a7c <HAL_I2C_Init>
 80006fe:	4603      	mov	r3, r0
 8000700:	2b00      	cmp	r3, #0
 8000702:	d001      	beq.n	8000708 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8000704:	f000 f822 	bl	800074c <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8000708:	bf00      	nop
 800070a:	bd80      	pop	{r7, pc}
 800070c:	20000038 	.word	0x20000038
 8000710:	40005400 	.word	0x40005400
 8000714:	00061a80 	.word	0x00061a80

08000718 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000718:	b480      	push	{r7}
 800071a:	b083      	sub	sp, #12
 800071c:	af00      	add	r7, sp, #0
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800071e:	2300      	movs	r3, #0
 8000720:	607b      	str	r3, [r7, #4]
 8000722:	4b09      	ldr	r3, [pc, #36]	@ (8000748 <MX_GPIO_Init+0x30>)
 8000724:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000726:	4a08      	ldr	r2, [pc, #32]	@ (8000748 <MX_GPIO_Init+0x30>)
 8000728:	f043 0302 	orr.w	r3, r3, #2
 800072c:	6313      	str	r3, [r2, #48]	@ 0x30
 800072e:	4b06      	ldr	r3, [pc, #24]	@ (8000748 <MX_GPIO_Init+0x30>)
 8000730:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000732:	f003 0302 	and.w	r3, r3, #2
 8000736:	607b      	str	r3, [r7, #4]
 8000738:	687b      	ldr	r3, [r7, #4]

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 800073a:	bf00      	nop
 800073c:	370c      	adds	r7, #12
 800073e:	46bd      	mov	sp, r7
 8000740:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000744:	4770      	bx	lr
 8000746:	bf00      	nop
 8000748:	40023800 	.word	0x40023800

0800074c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800074c:	b480      	push	{r7}
 800074e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000750:	b672      	cpsid	i
}
 8000752:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000754:	bf00      	nop
 8000756:	e7fd      	b.n	8000754 <Error_Handler+0x8>

08000758 <SSD1306_ScrollRight>:
#define SSD1306_NORMALDISPLAY       0xA6
#define SSD1306_INVERTDISPLAY       0xA7


void SSD1306_ScrollRight(uint8_t start_row, uint8_t end_row)
{
 8000758:	b580      	push	{r7, lr}
 800075a:	b082      	sub	sp, #8
 800075c:	af00      	add	r7, sp, #0
 800075e:	4603      	mov	r3, r0
 8000760:	460a      	mov	r2, r1
 8000762:	71fb      	strb	r3, [r7, #7]
 8000764:	4613      	mov	r3, r2
 8000766:	71bb      	strb	r3, [r7, #6]
  SSD1306_WRITECOMMAND (SSD1306_RIGHT_HORIZONTAL_SCROLL);  // send 0x26
 8000768:	2226      	movs	r2, #38	@ 0x26
 800076a:	2100      	movs	r1, #0
 800076c:	2078      	movs	r0, #120	@ 0x78
 800076e:	f000 fd7b 	bl	8001268 <ssd1306_I2C_Write>
  SSD1306_WRITECOMMAND (0x00);  // send dummy
 8000772:	2200      	movs	r2, #0
 8000774:	2100      	movs	r1, #0
 8000776:	2078      	movs	r0, #120	@ 0x78
 8000778:	f000 fd76 	bl	8001268 <ssd1306_I2C_Write>
  SSD1306_WRITECOMMAND(start_row);  // start page address
 800077c:	79fb      	ldrb	r3, [r7, #7]
 800077e:	461a      	mov	r2, r3
 8000780:	2100      	movs	r1, #0
 8000782:	2078      	movs	r0, #120	@ 0x78
 8000784:	f000 fd70 	bl	8001268 <ssd1306_I2C_Write>
  SSD1306_WRITECOMMAND(0X00);  // time interval 5 frames
 8000788:	2200      	movs	r2, #0
 800078a:	2100      	movs	r1, #0
 800078c:	2078      	movs	r0, #120	@ 0x78
 800078e:	f000 fd6b 	bl	8001268 <ssd1306_I2C_Write>
  SSD1306_WRITECOMMAND(end_row);  // end page address
 8000792:	79bb      	ldrb	r3, [r7, #6]
 8000794:	461a      	mov	r2, r3
 8000796:	2100      	movs	r1, #0
 8000798:	2078      	movs	r0, #120	@ 0x78
 800079a:	f000 fd65 	bl	8001268 <ssd1306_I2C_Write>
  SSD1306_WRITECOMMAND(0X00);
 800079e:	2200      	movs	r2, #0
 80007a0:	2100      	movs	r1, #0
 80007a2:	2078      	movs	r0, #120	@ 0x78
 80007a4:	f000 fd60 	bl	8001268 <ssd1306_I2C_Write>
  SSD1306_WRITECOMMAND(0XFF);
 80007a8:	22ff      	movs	r2, #255	@ 0xff
 80007aa:	2100      	movs	r1, #0
 80007ac:	2078      	movs	r0, #120	@ 0x78
 80007ae:	f000 fd5b 	bl	8001268 <ssd1306_I2C_Write>
  SSD1306_WRITECOMMAND (SSD1306_ACTIVATE_SCROLL); // start scroll
 80007b2:	222f      	movs	r2, #47	@ 0x2f
 80007b4:	2100      	movs	r1, #0
 80007b6:	2078      	movs	r0, #120	@ 0x78
 80007b8:	f000 fd56 	bl	8001268 <ssd1306_I2C_Write>
}
 80007bc:	bf00      	nop
 80007be:	3708      	adds	r7, #8
 80007c0:	46bd      	mov	sp, r7
 80007c2:	bd80      	pop	{r7, pc}

080007c4 <SSD1306_ScrollLeft>:


void SSD1306_ScrollLeft(uint8_t start_row, uint8_t end_row)
{
 80007c4:	b580      	push	{r7, lr}
 80007c6:	b082      	sub	sp, #8
 80007c8:	af00      	add	r7, sp, #0
 80007ca:	4603      	mov	r3, r0
 80007cc:	460a      	mov	r2, r1
 80007ce:	71fb      	strb	r3, [r7, #7]
 80007d0:	4613      	mov	r3, r2
 80007d2:	71bb      	strb	r3, [r7, #6]
  SSD1306_WRITECOMMAND (SSD1306_LEFT_HORIZONTAL_SCROLL);  // send 0x26
 80007d4:	2227      	movs	r2, #39	@ 0x27
 80007d6:	2100      	movs	r1, #0
 80007d8:	2078      	movs	r0, #120	@ 0x78
 80007da:	f000 fd45 	bl	8001268 <ssd1306_I2C_Write>
  SSD1306_WRITECOMMAND (0x00);  // send dummy
 80007de:	2200      	movs	r2, #0
 80007e0:	2100      	movs	r1, #0
 80007e2:	2078      	movs	r0, #120	@ 0x78
 80007e4:	f000 fd40 	bl	8001268 <ssd1306_I2C_Write>
  SSD1306_WRITECOMMAND(start_row);  // start page address
 80007e8:	79fb      	ldrb	r3, [r7, #7]
 80007ea:	461a      	mov	r2, r3
 80007ec:	2100      	movs	r1, #0
 80007ee:	2078      	movs	r0, #120	@ 0x78
 80007f0:	f000 fd3a 	bl	8001268 <ssd1306_I2C_Write>
  SSD1306_WRITECOMMAND(0X00);  // time interval 5 frames
 80007f4:	2200      	movs	r2, #0
 80007f6:	2100      	movs	r1, #0
 80007f8:	2078      	movs	r0, #120	@ 0x78
 80007fa:	f000 fd35 	bl	8001268 <ssd1306_I2C_Write>
  SSD1306_WRITECOMMAND(end_row);  // end page address
 80007fe:	79bb      	ldrb	r3, [r7, #6]
 8000800:	461a      	mov	r2, r3
 8000802:	2100      	movs	r1, #0
 8000804:	2078      	movs	r0, #120	@ 0x78
 8000806:	f000 fd2f 	bl	8001268 <ssd1306_I2C_Write>
  SSD1306_WRITECOMMAND(0X00);
 800080a:	2200      	movs	r2, #0
 800080c:	2100      	movs	r1, #0
 800080e:	2078      	movs	r0, #120	@ 0x78
 8000810:	f000 fd2a 	bl	8001268 <ssd1306_I2C_Write>
  SSD1306_WRITECOMMAND(0XFF);
 8000814:	22ff      	movs	r2, #255	@ 0xff
 8000816:	2100      	movs	r1, #0
 8000818:	2078      	movs	r0, #120	@ 0x78
 800081a:	f000 fd25 	bl	8001268 <ssd1306_I2C_Write>
  SSD1306_WRITECOMMAND (SSD1306_ACTIVATE_SCROLL); // start scroll
 800081e:	222f      	movs	r2, #47	@ 0x2f
 8000820:	2100      	movs	r1, #0
 8000822:	2078      	movs	r0, #120	@ 0x78
 8000824:	f000 fd20 	bl	8001268 <ssd1306_I2C_Write>
}
 8000828:	bf00      	nop
 800082a:	3708      	adds	r7, #8
 800082c:	46bd      	mov	sp, r7
 800082e:	bd80      	pop	{r7, pc}

08000830 <SSD1306_Stopscroll>:
  SSD1306_WRITECOMMAND (SSD1306_ACTIVATE_SCROLL);
}


void SSD1306_Stopscroll(void)
{
 8000830:	b580      	push	{r7, lr}
 8000832:	af00      	add	r7, sp, #0
	SSD1306_WRITECOMMAND(SSD1306_DEACTIVATE_SCROLL);
 8000834:	222e      	movs	r2, #46	@ 0x2e
 8000836:	2100      	movs	r1, #0
 8000838:	2078      	movs	r0, #120	@ 0x78
 800083a:	f000 fd15 	bl	8001268 <ssd1306_I2C_Write>
}
 800083e:	bf00      	nop
 8000840:	bd80      	pop	{r7, pc}
	...

08000844 <SSD1306_Init>:





uint8_t SSD1306_Init(void) {
 8000844:	b580      	push	{r7, lr}
 8000846:	b082      	sub	sp, #8
 8000848:	af00      	add	r7, sp, #0

	/* Init I2C */
	ssd1306_I2C_Init();
 800084a:	f000 fc91 	bl	8001170 <ssd1306_I2C_Init>

	/* Check if LCD connected to I2C */
	if (HAL_I2C_IsDeviceReady(&hi2c1, SSD1306_I2C_ADDR, 1, 20000) != HAL_OK) {
 800084e:	f644 6320 	movw	r3, #20000	@ 0x4e20
 8000852:	2201      	movs	r2, #1
 8000854:	2178      	movs	r1, #120	@ 0x78
 8000856:	485b      	ldr	r0, [pc, #364]	@ (80009c4 <SSD1306_Init+0x180>)
 8000858:	f001 fb52 	bl	8001f00 <HAL_I2C_IsDeviceReady>
 800085c:	4603      	mov	r3, r0
 800085e:	2b00      	cmp	r3, #0
 8000860:	d001      	beq.n	8000866 <SSD1306_Init+0x22>
		/* Return false */
		return 0;
 8000862:	2300      	movs	r3, #0
 8000864:	e0a9      	b.n	80009ba <SSD1306_Init+0x176>
	}

	/* A little delay */
	uint32_t p = 2500;
 8000866:	f640 13c4 	movw	r3, #2500	@ 0x9c4
 800086a:	607b      	str	r3, [r7, #4]
	while(p>0)
 800086c:	e002      	b.n	8000874 <SSD1306_Init+0x30>
		p--;
 800086e:	687b      	ldr	r3, [r7, #4]
 8000870:	3b01      	subs	r3, #1
 8000872:	607b      	str	r3, [r7, #4]
	while(p>0)
 8000874:	687b      	ldr	r3, [r7, #4]
 8000876:	2b00      	cmp	r3, #0
 8000878:	d1f9      	bne.n	800086e <SSD1306_Init+0x2a>

	/* Init LCD */
	SSD1306_WRITECOMMAND(0xAE); //display off
 800087a:	22ae      	movs	r2, #174	@ 0xae
 800087c:	2100      	movs	r1, #0
 800087e:	2078      	movs	r0, #120	@ 0x78
 8000880:	f000 fcf2 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0x20); //Set Memory Addressing Mode
 8000884:	2220      	movs	r2, #32
 8000886:	2100      	movs	r1, #0
 8000888:	2078      	movs	r0, #120	@ 0x78
 800088a:	f000 fced 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0x10); //00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addressing Mode (RESET);11,Invalid
 800088e:	2210      	movs	r2, #16
 8000890:	2100      	movs	r1, #0
 8000892:	2078      	movs	r0, #120	@ 0x78
 8000894:	f000 fce8 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 8000898:	22b0      	movs	r2, #176	@ 0xb0
 800089a:	2100      	movs	r1, #0
 800089c:	2078      	movs	r0, #120	@ 0x78
 800089e:	f000 fce3 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0xC8); //Set COM Output Scan Direction
 80008a2:	22c8      	movs	r2, #200	@ 0xc8
 80008a4:	2100      	movs	r1, #0
 80008a6:	2078      	movs	r0, #120	@ 0x78
 80008a8:	f000 fcde 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0x00); //---set low column address
 80008ac:	2200      	movs	r2, #0
 80008ae:	2100      	movs	r1, #0
 80008b0:	2078      	movs	r0, #120	@ 0x78
 80008b2:	f000 fcd9 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0x10); //---set high column address
 80008b6:	2210      	movs	r2, #16
 80008b8:	2100      	movs	r1, #0
 80008ba:	2078      	movs	r0, #120	@ 0x78
 80008bc:	f000 fcd4 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0x40); //--set start line address
 80008c0:	2240      	movs	r2, #64	@ 0x40
 80008c2:	2100      	movs	r1, #0
 80008c4:	2078      	movs	r0, #120	@ 0x78
 80008c6:	f000 fccf 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0x81); //--set contrast control register
 80008ca:	2281      	movs	r2, #129	@ 0x81
 80008cc:	2100      	movs	r1, #0
 80008ce:	2078      	movs	r0, #120	@ 0x78
 80008d0:	f000 fcca 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0xFF);
 80008d4:	22ff      	movs	r2, #255	@ 0xff
 80008d6:	2100      	movs	r1, #0
 80008d8:	2078      	movs	r0, #120	@ 0x78
 80008da:	f000 fcc5 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0xA1); //--set segment re-map 0 to 127
 80008de:	22a1      	movs	r2, #161	@ 0xa1
 80008e0:	2100      	movs	r1, #0
 80008e2:	2078      	movs	r0, #120	@ 0x78
 80008e4:	f000 fcc0 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0xA6); //--set normal display
 80008e8:	22a6      	movs	r2, #166	@ 0xa6
 80008ea:	2100      	movs	r1, #0
 80008ec:	2078      	movs	r0, #120	@ 0x78
 80008ee:	f000 fcbb 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0xA8); //--set multiplex ratio(1 to 64)
 80008f2:	22a8      	movs	r2, #168	@ 0xa8
 80008f4:	2100      	movs	r1, #0
 80008f6:	2078      	movs	r0, #120	@ 0x78
 80008f8:	f000 fcb6 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0x3F); //
 80008fc:	223f      	movs	r2, #63	@ 0x3f
 80008fe:	2100      	movs	r1, #0
 8000900:	2078      	movs	r0, #120	@ 0x78
 8000902:	f000 fcb1 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 8000906:	22a4      	movs	r2, #164	@ 0xa4
 8000908:	2100      	movs	r1, #0
 800090a:	2078      	movs	r0, #120	@ 0x78
 800090c:	f000 fcac 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0xD3); //-set display offset
 8000910:	22d3      	movs	r2, #211	@ 0xd3
 8000912:	2100      	movs	r1, #0
 8000914:	2078      	movs	r0, #120	@ 0x78
 8000916:	f000 fca7 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0x00); //-not offset
 800091a:	2200      	movs	r2, #0
 800091c:	2100      	movs	r1, #0
 800091e:	2078      	movs	r0, #120	@ 0x78
 8000920:	f000 fca2 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0xD5); //--set display clock divide ratio/oscillator frequency
 8000924:	22d5      	movs	r2, #213	@ 0xd5
 8000926:	2100      	movs	r1, #0
 8000928:	2078      	movs	r0, #120	@ 0x78
 800092a:	f000 fc9d 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0xF0); //--set divide ratio
 800092e:	22f0      	movs	r2, #240	@ 0xf0
 8000930:	2100      	movs	r1, #0
 8000932:	2078      	movs	r0, #120	@ 0x78
 8000934:	f000 fc98 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0xD9); //--set pre-charge period
 8000938:	22d9      	movs	r2, #217	@ 0xd9
 800093a:	2100      	movs	r1, #0
 800093c:	2078      	movs	r0, #120	@ 0x78
 800093e:	f000 fc93 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0x22); //
 8000942:	2222      	movs	r2, #34	@ 0x22
 8000944:	2100      	movs	r1, #0
 8000946:	2078      	movs	r0, #120	@ 0x78
 8000948:	f000 fc8e 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0xDA); //--set com pins hardware configuration
 800094c:	22da      	movs	r2, #218	@ 0xda
 800094e:	2100      	movs	r1, #0
 8000950:	2078      	movs	r0, #120	@ 0x78
 8000952:	f000 fc89 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0x12);
 8000956:	2212      	movs	r2, #18
 8000958:	2100      	movs	r1, #0
 800095a:	2078      	movs	r0, #120	@ 0x78
 800095c:	f000 fc84 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0xDB); //--set vcomh
 8000960:	22db      	movs	r2, #219	@ 0xdb
 8000962:	2100      	movs	r1, #0
 8000964:	2078      	movs	r0, #120	@ 0x78
 8000966:	f000 fc7f 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0x20); //0x20,0.77xVcc
 800096a:	2220      	movs	r2, #32
 800096c:	2100      	movs	r1, #0
 800096e:	2078      	movs	r0, #120	@ 0x78
 8000970:	f000 fc7a 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0x8D); //--set DC-DC enable
 8000974:	228d      	movs	r2, #141	@ 0x8d
 8000976:	2100      	movs	r1, #0
 8000978:	2078      	movs	r0, #120	@ 0x78
 800097a:	f000 fc75 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0x14); //
 800097e:	2214      	movs	r2, #20
 8000980:	2100      	movs	r1, #0
 8000982:	2078      	movs	r0, #120	@ 0x78
 8000984:	f000 fc70 	bl	8001268 <ssd1306_I2C_Write>
	SSD1306_WRITECOMMAND(0xAF); //--turn on SSD1306 panel
 8000988:	22af      	movs	r2, #175	@ 0xaf
 800098a:	2100      	movs	r1, #0
 800098c:	2078      	movs	r0, #120	@ 0x78
 800098e:	f000 fc6b 	bl	8001268 <ssd1306_I2C_Write>


	SSD1306_WRITECOMMAND(SSD1306_DEACTIVATE_SCROLL);
 8000992:	222e      	movs	r2, #46	@ 0x2e
 8000994:	2100      	movs	r1, #0
 8000996:	2078      	movs	r0, #120	@ 0x78
 8000998:	f000 fc66 	bl	8001268 <ssd1306_I2C_Write>

	/* Clear screen */
	SSD1306_Fill(SSD1306_COLOR_BLACK);
 800099c:	2000      	movs	r0, #0
 800099e:	f000 f843 	bl	8000a28 <SSD1306_Fill>

	/* Update screen */
	SSD1306_UpdateScreen();
 80009a2:	f000 f813 	bl	80009cc <SSD1306_UpdateScreen>

	/* Set default values */
	SSD1306.CurrentX = 0;
 80009a6:	4b08      	ldr	r3, [pc, #32]	@ (80009c8 <SSD1306_Init+0x184>)
 80009a8:	2200      	movs	r2, #0
 80009aa:	801a      	strh	r2, [r3, #0]
	SSD1306.CurrentY = 0;
 80009ac:	4b06      	ldr	r3, [pc, #24]	@ (80009c8 <SSD1306_Init+0x184>)
 80009ae:	2200      	movs	r2, #0
 80009b0:	805a      	strh	r2, [r3, #2]

	/* Initialized OK */
	SSD1306.Initialized = 1;
 80009b2:	4b05      	ldr	r3, [pc, #20]	@ (80009c8 <SSD1306_Init+0x184>)
 80009b4:	2201      	movs	r2, #1
 80009b6:	715a      	strb	r2, [r3, #5]

	/* Return OK */
	return 1;
 80009b8:	2301      	movs	r3, #1
}
 80009ba:	4618      	mov	r0, r3
 80009bc:	3708      	adds	r7, #8
 80009be:	46bd      	mov	sp, r7
 80009c0:	bd80      	pop	{r7, pc}
 80009c2:	bf00      	nop
 80009c4:	20000038 	.word	0x20000038
 80009c8:	2000048c 	.word	0x2000048c

080009cc <SSD1306_UpdateScreen>:

void SSD1306_UpdateScreen(void) {
 80009cc:	b580      	push	{r7, lr}
 80009ce:	b082      	sub	sp, #8
 80009d0:	af00      	add	r7, sp, #0
	uint8_t m;

	for (m = 0; m < 8; m++) {
 80009d2:	2300      	movs	r3, #0
 80009d4:	71fb      	strb	r3, [r7, #7]
 80009d6:	e01d      	b.n	8000a14 <SSD1306_UpdateScreen+0x48>
		SSD1306_WRITECOMMAND(0xB0 + m);
 80009d8:	79fb      	ldrb	r3, [r7, #7]
 80009da:	3b50      	subs	r3, #80	@ 0x50
 80009dc:	b2db      	uxtb	r3, r3
 80009de:	461a      	mov	r2, r3
 80009e0:	2100      	movs	r1, #0
 80009e2:	2078      	movs	r0, #120	@ 0x78
 80009e4:	f000 fc40 	bl	8001268 <ssd1306_I2C_Write>
		SSD1306_WRITECOMMAND(0x00);
 80009e8:	2200      	movs	r2, #0
 80009ea:	2100      	movs	r1, #0
 80009ec:	2078      	movs	r0, #120	@ 0x78
 80009ee:	f000 fc3b 	bl	8001268 <ssd1306_I2C_Write>
		SSD1306_WRITECOMMAND(0x10);
 80009f2:	2210      	movs	r2, #16
 80009f4:	2100      	movs	r1, #0
 80009f6:	2078      	movs	r0, #120	@ 0x78
 80009f8:	f000 fc36 	bl	8001268 <ssd1306_I2C_Write>

		/* Write multi data */
		ssd1306_I2C_WriteMulti(SSD1306_I2C_ADDR, 0x40, &SSD1306_Buffer[SSD1306_WIDTH * m], SSD1306_WIDTH);
 80009fc:	79fb      	ldrb	r3, [r7, #7]
 80009fe:	01db      	lsls	r3, r3, #7
 8000a00:	4a08      	ldr	r2, [pc, #32]	@ (8000a24 <SSD1306_UpdateScreen+0x58>)
 8000a02:	441a      	add	r2, r3
 8000a04:	2380      	movs	r3, #128	@ 0x80
 8000a06:	2140      	movs	r1, #64	@ 0x40
 8000a08:	2078      	movs	r0, #120	@ 0x78
 8000a0a:	f000 fbc7 	bl	800119c <ssd1306_I2C_WriteMulti>
	for (m = 0; m < 8; m++) {
 8000a0e:	79fb      	ldrb	r3, [r7, #7]
 8000a10:	3301      	adds	r3, #1
 8000a12:	71fb      	strb	r3, [r7, #7]
 8000a14:	79fb      	ldrb	r3, [r7, #7]
 8000a16:	2b07      	cmp	r3, #7
 8000a18:	d9de      	bls.n	80009d8 <SSD1306_UpdateScreen+0xc>
	}
}
 8000a1a:	bf00      	nop
 8000a1c:	bf00      	nop
 8000a1e:	3708      	adds	r7, #8
 8000a20:	46bd      	mov	sp, r7
 8000a22:	bd80      	pop	{r7, pc}
 8000a24:	2000008c 	.word	0x2000008c

08000a28 <SSD1306_Fill>:
	for (i = 0; i < sizeof(SSD1306_Buffer); i++) {
		SSD1306_Buffer[i] = ~SSD1306_Buffer[i];
	}
}

void SSD1306_Fill(SSD1306_COLOR_t color) {
 8000a28:	b580      	push	{r7, lr}
 8000a2a:	b082      	sub	sp, #8
 8000a2c:	af00      	add	r7, sp, #0
 8000a2e:	4603      	mov	r3, r0
 8000a30:	71fb      	strb	r3, [r7, #7]
	/* Set memory */
	memset(SSD1306_Buffer, (color == SSD1306_COLOR_BLACK) ? 0x00 : 0xFF, sizeof(SSD1306_Buffer));
 8000a32:	79fb      	ldrb	r3, [r7, #7]
 8000a34:	2b00      	cmp	r3, #0
 8000a36:	d101      	bne.n	8000a3c <SSD1306_Fill+0x14>
 8000a38:	2300      	movs	r3, #0
 8000a3a:	e000      	b.n	8000a3e <SSD1306_Fill+0x16>
 8000a3c:	23ff      	movs	r3, #255	@ 0xff
 8000a3e:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8000a42:	4619      	mov	r1, r3
 8000a44:	4803      	ldr	r0, [pc, #12]	@ (8000a54 <SSD1306_Fill+0x2c>)
 8000a46:	f002 fb8f 	bl	8003168 <memset>
}
 8000a4a:	bf00      	nop
 8000a4c:	3708      	adds	r7, #8
 8000a4e:	46bd      	mov	sp, r7
 8000a50:	bd80      	pop	{r7, pc}
 8000a52:	bf00      	nop
 8000a54:	2000008c 	.word	0x2000008c

08000a58 <SSD1306_DrawPixel>:

void SSD1306_DrawPixel(uint16_t x, uint16_t y, SSD1306_COLOR_t color) {
 8000a58:	b480      	push	{r7}
 8000a5a:	b083      	sub	sp, #12
 8000a5c:	af00      	add	r7, sp, #0
 8000a5e:	4603      	mov	r3, r0
 8000a60:	80fb      	strh	r3, [r7, #6]
 8000a62:	460b      	mov	r3, r1
 8000a64:	80bb      	strh	r3, [r7, #4]
 8000a66:	4613      	mov	r3, r2
 8000a68:	70fb      	strb	r3, [r7, #3]
	if (
 8000a6a:	88fb      	ldrh	r3, [r7, #6]
 8000a6c:	2b7f      	cmp	r3, #127	@ 0x7f
 8000a6e:	d848      	bhi.n	8000b02 <SSD1306_DrawPixel+0xaa>
		x >= SSD1306_WIDTH ||
 8000a70:	88bb      	ldrh	r3, [r7, #4]
 8000a72:	2b3f      	cmp	r3, #63	@ 0x3f
 8000a74:	d845      	bhi.n	8000b02 <SSD1306_DrawPixel+0xaa>
		/* Error */
		return;
	}

	/* Check if pixels are inverted */
	if (SSD1306.Inverted) {
 8000a76:	4b26      	ldr	r3, [pc, #152]	@ (8000b10 <SSD1306_DrawPixel+0xb8>)
 8000a78:	791b      	ldrb	r3, [r3, #4]
 8000a7a:	2b00      	cmp	r3, #0
 8000a7c:	d006      	beq.n	8000a8c <SSD1306_DrawPixel+0x34>
		color = (SSD1306_COLOR_t)!color;
 8000a7e:	78fb      	ldrb	r3, [r7, #3]
 8000a80:	2b00      	cmp	r3, #0
 8000a82:	bf0c      	ite	eq
 8000a84:	2301      	moveq	r3, #1
 8000a86:	2300      	movne	r3, #0
 8000a88:	b2db      	uxtb	r3, r3
 8000a8a:	70fb      	strb	r3, [r7, #3]
	}

	/* Set color */
	if (color == SSD1306_COLOR_WHITE) {
 8000a8c:	78fb      	ldrb	r3, [r7, #3]
 8000a8e:	2b01      	cmp	r3, #1
 8000a90:	d11a      	bne.n	8000ac8 <SSD1306_DrawPixel+0x70>
		SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 8000a92:	88fa      	ldrh	r2, [r7, #6]
 8000a94:	88bb      	ldrh	r3, [r7, #4]
 8000a96:	08db      	lsrs	r3, r3, #3
 8000a98:	b298      	uxth	r0, r3
 8000a9a:	4603      	mov	r3, r0
 8000a9c:	01db      	lsls	r3, r3, #7
 8000a9e:	4413      	add	r3, r2
 8000aa0:	4a1c      	ldr	r2, [pc, #112]	@ (8000b14 <SSD1306_DrawPixel+0xbc>)
 8000aa2:	5cd3      	ldrb	r3, [r2, r3]
 8000aa4:	b25a      	sxtb	r2, r3
 8000aa6:	88bb      	ldrh	r3, [r7, #4]
 8000aa8:	f003 0307 	and.w	r3, r3, #7
 8000aac:	2101      	movs	r1, #1
 8000aae:	fa01 f303 	lsl.w	r3, r1, r3
 8000ab2:	b25b      	sxtb	r3, r3
 8000ab4:	4313      	orrs	r3, r2
 8000ab6:	b259      	sxtb	r1, r3
 8000ab8:	88fa      	ldrh	r2, [r7, #6]
 8000aba:	4603      	mov	r3, r0
 8000abc:	01db      	lsls	r3, r3, #7
 8000abe:	4413      	add	r3, r2
 8000ac0:	b2c9      	uxtb	r1, r1
 8000ac2:	4a14      	ldr	r2, [pc, #80]	@ (8000b14 <SSD1306_DrawPixel+0xbc>)
 8000ac4:	54d1      	strb	r1, [r2, r3]
 8000ac6:	e01d      	b.n	8000b04 <SSD1306_DrawPixel+0xac>
	} else {
		SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 8000ac8:	88fa      	ldrh	r2, [r7, #6]
 8000aca:	88bb      	ldrh	r3, [r7, #4]
 8000acc:	08db      	lsrs	r3, r3, #3
 8000ace:	b298      	uxth	r0, r3
 8000ad0:	4603      	mov	r3, r0
 8000ad2:	01db      	lsls	r3, r3, #7
 8000ad4:	4413      	add	r3, r2
 8000ad6:	4a0f      	ldr	r2, [pc, #60]	@ (8000b14 <SSD1306_DrawPixel+0xbc>)
 8000ad8:	5cd3      	ldrb	r3, [r2, r3]
 8000ada:	b25a      	sxtb	r2, r3
 8000adc:	88bb      	ldrh	r3, [r7, #4]
 8000ade:	f003 0307 	and.w	r3, r3, #7
 8000ae2:	2101      	movs	r1, #1
 8000ae4:	fa01 f303 	lsl.w	r3, r1, r3
 8000ae8:	b25b      	sxtb	r3, r3
 8000aea:	43db      	mvns	r3, r3
 8000aec:	b25b      	sxtb	r3, r3
 8000aee:	4013      	ands	r3, r2
 8000af0:	b259      	sxtb	r1, r3
 8000af2:	88fa      	ldrh	r2, [r7, #6]
 8000af4:	4603      	mov	r3, r0
 8000af6:	01db      	lsls	r3, r3, #7
 8000af8:	4413      	add	r3, r2
 8000afa:	b2c9      	uxtb	r1, r1
 8000afc:	4a05      	ldr	r2, [pc, #20]	@ (8000b14 <SSD1306_DrawPixel+0xbc>)
 8000afe:	54d1      	strb	r1, [r2, r3]
 8000b00:	e000      	b.n	8000b04 <SSD1306_DrawPixel+0xac>
		return;
 8000b02:	bf00      	nop
	}
}
 8000b04:	370c      	adds	r7, #12
 8000b06:	46bd      	mov	sp, r7
 8000b08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b0c:	4770      	bx	lr
 8000b0e:	bf00      	nop
 8000b10:	2000048c 	.word	0x2000048c
 8000b14:	2000008c 	.word	0x2000008c

08000b18 <SSD1306_GotoXY>:

void SSD1306_GotoXY(uint16_t x, uint16_t y) {
 8000b18:	b480      	push	{r7}
 8000b1a:	b083      	sub	sp, #12
 8000b1c:	af00      	add	r7, sp, #0
 8000b1e:	4603      	mov	r3, r0
 8000b20:	460a      	mov	r2, r1
 8000b22:	80fb      	strh	r3, [r7, #6]
 8000b24:	4613      	mov	r3, r2
 8000b26:	80bb      	strh	r3, [r7, #4]
	/* Set write pointers */
	SSD1306.CurrentX = x;
 8000b28:	4a05      	ldr	r2, [pc, #20]	@ (8000b40 <SSD1306_GotoXY+0x28>)
 8000b2a:	88fb      	ldrh	r3, [r7, #6]
 8000b2c:	8013      	strh	r3, [r2, #0]
	SSD1306.CurrentY = y;
 8000b2e:	4a04      	ldr	r2, [pc, #16]	@ (8000b40 <SSD1306_GotoXY+0x28>)
 8000b30:	88bb      	ldrh	r3, [r7, #4]
 8000b32:	8053      	strh	r3, [r2, #2]
}
 8000b34:	bf00      	nop
 8000b36:	370c      	adds	r7, #12
 8000b38:	46bd      	mov	sp, r7
 8000b3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b3e:	4770      	bx	lr
 8000b40:	2000048c 	.word	0x2000048c

08000b44 <SSD1306_Putc>:

char SSD1306_Putc(char ch, FontDef_t* Font, SSD1306_COLOR_t color) {
 8000b44:	b580      	push	{r7, lr}
 8000b46:	b086      	sub	sp, #24
 8000b48:	af00      	add	r7, sp, #0
 8000b4a:	4603      	mov	r3, r0
 8000b4c:	6039      	str	r1, [r7, #0]
 8000b4e:	71fb      	strb	r3, [r7, #7]
 8000b50:	4613      	mov	r3, r2
 8000b52:	71bb      	strb	r3, [r7, #6]
	uint32_t i, b, j;

	/* Check available space in LCD */
	if (
		SSD1306_WIDTH <= (SSD1306.CurrentX + Font->FontWidth) ||
 8000b54:	4b39      	ldr	r3, [pc, #228]	@ (8000c3c <SSD1306_Putc+0xf8>)
 8000b56:	881b      	ldrh	r3, [r3, #0]
 8000b58:	461a      	mov	r2, r3
 8000b5a:	683b      	ldr	r3, [r7, #0]
 8000b5c:	781b      	ldrb	r3, [r3, #0]
 8000b5e:	4413      	add	r3, r2
	if (
 8000b60:	2b7f      	cmp	r3, #127	@ 0x7f
 8000b62:	dc07      	bgt.n	8000b74 <SSD1306_Putc+0x30>
		SSD1306_HEIGHT <= (SSD1306.CurrentY + Font->FontHeight)
 8000b64:	4b35      	ldr	r3, [pc, #212]	@ (8000c3c <SSD1306_Putc+0xf8>)
 8000b66:	885b      	ldrh	r3, [r3, #2]
 8000b68:	461a      	mov	r2, r3
 8000b6a:	683b      	ldr	r3, [r7, #0]
 8000b6c:	785b      	ldrb	r3, [r3, #1]
 8000b6e:	4413      	add	r3, r2
		SSD1306_WIDTH <= (SSD1306.CurrentX + Font->FontWidth) ||
 8000b70:	2b3f      	cmp	r3, #63	@ 0x3f
 8000b72:	dd01      	ble.n	8000b78 <SSD1306_Putc+0x34>
	) {
		/* Error */
		return 0;
 8000b74:	2300      	movs	r3, #0
 8000b76:	e05d      	b.n	8000c34 <SSD1306_Putc+0xf0>
	}

	/* Go through font */
	for (i = 0; i < Font->FontHeight; i++) {
 8000b78:	2300      	movs	r3, #0
 8000b7a:	617b      	str	r3, [r7, #20]
 8000b7c:	e04b      	b.n	8000c16 <SSD1306_Putc+0xd2>
		b = Font->data[(ch - 32) * Font->FontHeight + i];
 8000b7e:	683b      	ldr	r3, [r7, #0]
 8000b80:	685a      	ldr	r2, [r3, #4]
 8000b82:	79fb      	ldrb	r3, [r7, #7]
 8000b84:	3b20      	subs	r3, #32
 8000b86:	6839      	ldr	r1, [r7, #0]
 8000b88:	7849      	ldrb	r1, [r1, #1]
 8000b8a:	fb01 f303 	mul.w	r3, r1, r3
 8000b8e:	4619      	mov	r1, r3
 8000b90:	697b      	ldr	r3, [r7, #20]
 8000b92:	440b      	add	r3, r1
 8000b94:	005b      	lsls	r3, r3, #1
 8000b96:	4413      	add	r3, r2
 8000b98:	881b      	ldrh	r3, [r3, #0]
 8000b9a:	60fb      	str	r3, [r7, #12]
		for (j = 0; j < Font->FontWidth; j++) {
 8000b9c:	2300      	movs	r3, #0
 8000b9e:	613b      	str	r3, [r7, #16]
 8000ba0:	e030      	b.n	8000c04 <SSD1306_Putc+0xc0>
			if ((b << j) & 0x8000) {
 8000ba2:	68fa      	ldr	r2, [r7, #12]
 8000ba4:	693b      	ldr	r3, [r7, #16]
 8000ba6:	fa02 f303 	lsl.w	r3, r2, r3
 8000baa:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8000bae:	2b00      	cmp	r3, #0
 8000bb0:	d010      	beq.n	8000bd4 <SSD1306_Putc+0x90>
				SSD1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR_t) color);
 8000bb2:	4b22      	ldr	r3, [pc, #136]	@ (8000c3c <SSD1306_Putc+0xf8>)
 8000bb4:	881a      	ldrh	r2, [r3, #0]
 8000bb6:	693b      	ldr	r3, [r7, #16]
 8000bb8:	b29b      	uxth	r3, r3
 8000bba:	4413      	add	r3, r2
 8000bbc:	b298      	uxth	r0, r3
 8000bbe:	4b1f      	ldr	r3, [pc, #124]	@ (8000c3c <SSD1306_Putc+0xf8>)
 8000bc0:	885a      	ldrh	r2, [r3, #2]
 8000bc2:	697b      	ldr	r3, [r7, #20]
 8000bc4:	b29b      	uxth	r3, r3
 8000bc6:	4413      	add	r3, r2
 8000bc8:	b29b      	uxth	r3, r3
 8000bca:	79ba      	ldrb	r2, [r7, #6]
 8000bcc:	4619      	mov	r1, r3
 8000bce:	f7ff ff43 	bl	8000a58 <SSD1306_DrawPixel>
 8000bd2:	e014      	b.n	8000bfe <SSD1306_Putc+0xba>
			} else {
				SSD1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR_t)!color);
 8000bd4:	4b19      	ldr	r3, [pc, #100]	@ (8000c3c <SSD1306_Putc+0xf8>)
 8000bd6:	881a      	ldrh	r2, [r3, #0]
 8000bd8:	693b      	ldr	r3, [r7, #16]
 8000bda:	b29b      	uxth	r3, r3
 8000bdc:	4413      	add	r3, r2
 8000bde:	b298      	uxth	r0, r3
 8000be0:	4b16      	ldr	r3, [pc, #88]	@ (8000c3c <SSD1306_Putc+0xf8>)
 8000be2:	885a      	ldrh	r2, [r3, #2]
 8000be4:	697b      	ldr	r3, [r7, #20]
 8000be6:	b29b      	uxth	r3, r3
 8000be8:	4413      	add	r3, r2
 8000bea:	b299      	uxth	r1, r3
 8000bec:	79bb      	ldrb	r3, [r7, #6]
 8000bee:	2b00      	cmp	r3, #0
 8000bf0:	bf0c      	ite	eq
 8000bf2:	2301      	moveq	r3, #1
 8000bf4:	2300      	movne	r3, #0
 8000bf6:	b2db      	uxtb	r3, r3
 8000bf8:	461a      	mov	r2, r3
 8000bfa:	f7ff ff2d 	bl	8000a58 <SSD1306_DrawPixel>
		for (j = 0; j < Font->FontWidth; j++) {
 8000bfe:	693b      	ldr	r3, [r7, #16]
 8000c00:	3301      	adds	r3, #1
 8000c02:	613b      	str	r3, [r7, #16]
 8000c04:	683b      	ldr	r3, [r7, #0]
 8000c06:	781b      	ldrb	r3, [r3, #0]
 8000c08:	461a      	mov	r2, r3
 8000c0a:	693b      	ldr	r3, [r7, #16]
 8000c0c:	4293      	cmp	r3, r2
 8000c0e:	d3c8      	bcc.n	8000ba2 <SSD1306_Putc+0x5e>
	for (i = 0; i < Font->FontHeight; i++) {
 8000c10:	697b      	ldr	r3, [r7, #20]
 8000c12:	3301      	adds	r3, #1
 8000c14:	617b      	str	r3, [r7, #20]
 8000c16:	683b      	ldr	r3, [r7, #0]
 8000c18:	785b      	ldrb	r3, [r3, #1]
 8000c1a:	461a      	mov	r2, r3
 8000c1c:	697b      	ldr	r3, [r7, #20]
 8000c1e:	4293      	cmp	r3, r2
 8000c20:	d3ad      	bcc.n	8000b7e <SSD1306_Putc+0x3a>
			}
		}
	}

	/* Increase pointer */
	SSD1306.CurrentX += Font->FontWidth;
 8000c22:	4b06      	ldr	r3, [pc, #24]	@ (8000c3c <SSD1306_Putc+0xf8>)
 8000c24:	881b      	ldrh	r3, [r3, #0]
 8000c26:	683a      	ldr	r2, [r7, #0]
 8000c28:	7812      	ldrb	r2, [r2, #0]
 8000c2a:	4413      	add	r3, r2
 8000c2c:	b29a      	uxth	r2, r3
 8000c2e:	4b03      	ldr	r3, [pc, #12]	@ (8000c3c <SSD1306_Putc+0xf8>)
 8000c30:	801a      	strh	r2, [r3, #0]

	/* Return character written */
	return ch;
 8000c32:	79fb      	ldrb	r3, [r7, #7]
}
 8000c34:	4618      	mov	r0, r3
 8000c36:	3718      	adds	r7, #24
 8000c38:	46bd      	mov	sp, r7
 8000c3a:	bd80      	pop	{r7, pc}
 8000c3c:	2000048c 	.word	0x2000048c

08000c40 <SSD1306_Puts>:

char SSD1306_Puts(char* str, FontDef_t* Font, SSD1306_COLOR_t color) {
 8000c40:	b580      	push	{r7, lr}
 8000c42:	b084      	sub	sp, #16
 8000c44:	af00      	add	r7, sp, #0
 8000c46:	60f8      	str	r0, [r7, #12]
 8000c48:	60b9      	str	r1, [r7, #8]
 8000c4a:	4613      	mov	r3, r2
 8000c4c:	71fb      	strb	r3, [r7, #7]
	/* Write characters */
	while (*str) {
 8000c4e:	e012      	b.n	8000c76 <SSD1306_Puts+0x36>
		/* Write character by character */
		if (SSD1306_Putc(*str, Font, color) != *str) {
 8000c50:	68fb      	ldr	r3, [r7, #12]
 8000c52:	781b      	ldrb	r3, [r3, #0]
 8000c54:	79fa      	ldrb	r2, [r7, #7]
 8000c56:	68b9      	ldr	r1, [r7, #8]
 8000c58:	4618      	mov	r0, r3
 8000c5a:	f7ff ff73 	bl	8000b44 <SSD1306_Putc>
 8000c5e:	4603      	mov	r3, r0
 8000c60:	461a      	mov	r2, r3
 8000c62:	68fb      	ldr	r3, [r7, #12]
 8000c64:	781b      	ldrb	r3, [r3, #0]
 8000c66:	429a      	cmp	r2, r3
 8000c68:	d002      	beq.n	8000c70 <SSD1306_Puts+0x30>
			/* Return error */
			return *str;
 8000c6a:	68fb      	ldr	r3, [r7, #12]
 8000c6c:	781b      	ldrb	r3, [r3, #0]
 8000c6e:	e008      	b.n	8000c82 <SSD1306_Puts+0x42>
		}

		/* Increase string pointer */
		str++;
 8000c70:	68fb      	ldr	r3, [r7, #12]
 8000c72:	3301      	adds	r3, #1
 8000c74:	60fb      	str	r3, [r7, #12]
	while (*str) {
 8000c76:	68fb      	ldr	r3, [r7, #12]
 8000c78:	781b      	ldrb	r3, [r3, #0]
 8000c7a:	2b00      	cmp	r3, #0
 8000c7c:	d1e8      	bne.n	8000c50 <SSD1306_Puts+0x10>
	}

	/* Everything OK, zero should be returned */
	return *str;
 8000c7e:	68fb      	ldr	r3, [r7, #12]
 8000c80:	781b      	ldrb	r3, [r3, #0]
}
 8000c82:	4618      	mov	r0, r3
 8000c84:	3710      	adds	r7, #16
 8000c86:	46bd      	mov	sp, r7
 8000c88:	bd80      	pop	{r7, pc}

08000c8a <SSD1306_DrawLine>:


void SSD1306_DrawLine(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, SSD1306_COLOR_t c) {
 8000c8a:	b590      	push	{r4, r7, lr}
 8000c8c:	b087      	sub	sp, #28
 8000c8e:	af00      	add	r7, sp, #0
 8000c90:	4604      	mov	r4, r0
 8000c92:	4608      	mov	r0, r1
 8000c94:	4611      	mov	r1, r2
 8000c96:	461a      	mov	r2, r3
 8000c98:	4623      	mov	r3, r4
 8000c9a:	80fb      	strh	r3, [r7, #6]
 8000c9c:	4603      	mov	r3, r0
 8000c9e:	80bb      	strh	r3, [r7, #4]
 8000ca0:	460b      	mov	r3, r1
 8000ca2:	807b      	strh	r3, [r7, #2]
 8000ca4:	4613      	mov	r3, r2
 8000ca6:	803b      	strh	r3, [r7, #0]
	int16_t dx, dy, sx, sy, err, e2, i, tmp;

	/* Check for overflow */
	if (x0 >= SSD1306_WIDTH) {
 8000ca8:	88fb      	ldrh	r3, [r7, #6]
 8000caa:	2b7f      	cmp	r3, #127	@ 0x7f
 8000cac:	d901      	bls.n	8000cb2 <SSD1306_DrawLine+0x28>
		x0 = SSD1306_WIDTH - 1;
 8000cae:	237f      	movs	r3, #127	@ 0x7f
 8000cb0:	80fb      	strh	r3, [r7, #6]
	}
	if (x1 >= SSD1306_WIDTH) {
 8000cb2:	887b      	ldrh	r3, [r7, #2]
 8000cb4:	2b7f      	cmp	r3, #127	@ 0x7f
 8000cb6:	d901      	bls.n	8000cbc <SSD1306_DrawLine+0x32>
		x1 = SSD1306_WIDTH - 1;
 8000cb8:	237f      	movs	r3, #127	@ 0x7f
 8000cba:	807b      	strh	r3, [r7, #2]
	}
	if (y0 >= SSD1306_HEIGHT) {
 8000cbc:	88bb      	ldrh	r3, [r7, #4]
 8000cbe:	2b3f      	cmp	r3, #63	@ 0x3f
 8000cc0:	d901      	bls.n	8000cc6 <SSD1306_DrawLine+0x3c>
		y0 = SSD1306_HEIGHT - 1;
 8000cc2:	233f      	movs	r3, #63	@ 0x3f
 8000cc4:	80bb      	strh	r3, [r7, #4]
	}
	if (y1 >= SSD1306_HEIGHT) {
 8000cc6:	883b      	ldrh	r3, [r7, #0]
 8000cc8:	2b3f      	cmp	r3, #63	@ 0x3f
 8000cca:	d901      	bls.n	8000cd0 <SSD1306_DrawLine+0x46>
		y1 = SSD1306_HEIGHT - 1;
 8000ccc:	233f      	movs	r3, #63	@ 0x3f
 8000cce:	803b      	strh	r3, [r7, #0]
	}

	dx = (x0 < x1) ? (x1 - x0) : (x0 - x1);
 8000cd0:	88fa      	ldrh	r2, [r7, #6]
 8000cd2:	887b      	ldrh	r3, [r7, #2]
 8000cd4:	429a      	cmp	r2, r3
 8000cd6:	d205      	bcs.n	8000ce4 <SSD1306_DrawLine+0x5a>
 8000cd8:	887a      	ldrh	r2, [r7, #2]
 8000cda:	88fb      	ldrh	r3, [r7, #6]
 8000cdc:	1ad3      	subs	r3, r2, r3
 8000cde:	b29b      	uxth	r3, r3
 8000ce0:	b21b      	sxth	r3, r3
 8000ce2:	e004      	b.n	8000cee <SSD1306_DrawLine+0x64>
 8000ce4:	88fa      	ldrh	r2, [r7, #6]
 8000ce6:	887b      	ldrh	r3, [r7, #2]
 8000ce8:	1ad3      	subs	r3, r2, r3
 8000cea:	b29b      	uxth	r3, r3
 8000cec:	b21b      	sxth	r3, r3
 8000cee:	827b      	strh	r3, [r7, #18]
	dy = (y0 < y1) ? (y1 - y0) : (y0 - y1);
 8000cf0:	88ba      	ldrh	r2, [r7, #4]
 8000cf2:	883b      	ldrh	r3, [r7, #0]
 8000cf4:	429a      	cmp	r2, r3
 8000cf6:	d205      	bcs.n	8000d04 <SSD1306_DrawLine+0x7a>
 8000cf8:	883a      	ldrh	r2, [r7, #0]
 8000cfa:	88bb      	ldrh	r3, [r7, #4]
 8000cfc:	1ad3      	subs	r3, r2, r3
 8000cfe:	b29b      	uxth	r3, r3
 8000d00:	b21b      	sxth	r3, r3
 8000d02:	e004      	b.n	8000d0e <SSD1306_DrawLine+0x84>
 8000d04:	88ba      	ldrh	r2, [r7, #4]
 8000d06:	883b      	ldrh	r3, [r7, #0]
 8000d08:	1ad3      	subs	r3, r2, r3
 8000d0a:	b29b      	uxth	r3, r3
 8000d0c:	b21b      	sxth	r3, r3
 8000d0e:	823b      	strh	r3, [r7, #16]
	sx = (x0 < x1) ? 1 : -1;
 8000d10:	88fa      	ldrh	r2, [r7, #6]
 8000d12:	887b      	ldrh	r3, [r7, #2]
 8000d14:	429a      	cmp	r2, r3
 8000d16:	d201      	bcs.n	8000d1c <SSD1306_DrawLine+0x92>
 8000d18:	2301      	movs	r3, #1
 8000d1a:	e001      	b.n	8000d20 <SSD1306_DrawLine+0x96>
 8000d1c:	f04f 33ff 	mov.w	r3, #4294967295
 8000d20:	81fb      	strh	r3, [r7, #14]
	sy = (y0 < y1) ? 1 : -1;
 8000d22:	88ba      	ldrh	r2, [r7, #4]
 8000d24:	883b      	ldrh	r3, [r7, #0]
 8000d26:	429a      	cmp	r2, r3
 8000d28:	d201      	bcs.n	8000d2e <SSD1306_DrawLine+0xa4>
 8000d2a:	2301      	movs	r3, #1
 8000d2c:	e001      	b.n	8000d32 <SSD1306_DrawLine+0xa8>
 8000d2e:	f04f 33ff 	mov.w	r3, #4294967295
 8000d32:	81bb      	strh	r3, [r7, #12]
	err = ((dx > dy) ? dx : -dy) / 2;
 8000d34:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8000d38:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 8000d3c:	429a      	cmp	r2, r3
 8000d3e:	dd06      	ble.n	8000d4e <SSD1306_DrawLine+0xc4>
 8000d40:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8000d44:	0fda      	lsrs	r2, r3, #31
 8000d46:	4413      	add	r3, r2
 8000d48:	105b      	asrs	r3, r3, #1
 8000d4a:	b21b      	sxth	r3, r3
 8000d4c:	e006      	b.n	8000d5c <SSD1306_DrawLine+0xd2>
 8000d4e:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 8000d52:	0fda      	lsrs	r2, r3, #31
 8000d54:	4413      	add	r3, r2
 8000d56:	105b      	asrs	r3, r3, #1
 8000d58:	425b      	negs	r3, r3
 8000d5a:	b21b      	sxth	r3, r3
 8000d5c:	82fb      	strh	r3, [r7, #22]

	if (dx == 0) {
 8000d5e:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8000d62:	2b00      	cmp	r3, #0
 8000d64:	d129      	bne.n	8000dba <SSD1306_DrawLine+0x130>
		if (y1 < y0) {
 8000d66:	883a      	ldrh	r2, [r7, #0]
 8000d68:	88bb      	ldrh	r3, [r7, #4]
 8000d6a:	429a      	cmp	r2, r3
 8000d6c:	d205      	bcs.n	8000d7a <SSD1306_DrawLine+0xf0>
			tmp = y1;
 8000d6e:	883b      	ldrh	r3, [r7, #0]
 8000d70:	813b      	strh	r3, [r7, #8]
			y1 = y0;
 8000d72:	88bb      	ldrh	r3, [r7, #4]
 8000d74:	803b      	strh	r3, [r7, #0]
			y0 = tmp;
 8000d76:	893b      	ldrh	r3, [r7, #8]
 8000d78:	80bb      	strh	r3, [r7, #4]
		}

		if (x1 < x0) {
 8000d7a:	887a      	ldrh	r2, [r7, #2]
 8000d7c:	88fb      	ldrh	r3, [r7, #6]
 8000d7e:	429a      	cmp	r2, r3
 8000d80:	d205      	bcs.n	8000d8e <SSD1306_DrawLine+0x104>
			tmp = x1;
 8000d82:	887b      	ldrh	r3, [r7, #2]
 8000d84:	813b      	strh	r3, [r7, #8]
			x1 = x0;
 8000d86:	88fb      	ldrh	r3, [r7, #6]
 8000d88:	807b      	strh	r3, [r7, #2]
			x0 = tmp;
 8000d8a:	893b      	ldrh	r3, [r7, #8]
 8000d8c:	80fb      	strh	r3, [r7, #6]
		}

		/* Vertical line */
		for (i = y0; i <= y1; i++) {
 8000d8e:	88bb      	ldrh	r3, [r7, #4]
 8000d90:	82bb      	strh	r3, [r7, #20]
 8000d92:	e00c      	b.n	8000dae <SSD1306_DrawLine+0x124>
			SSD1306_DrawPixel(x0, i, c);
 8000d94:	8ab9      	ldrh	r1, [r7, #20]
 8000d96:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
 8000d9a:	88fb      	ldrh	r3, [r7, #6]
 8000d9c:	4618      	mov	r0, r3
 8000d9e:	f7ff fe5b 	bl	8000a58 <SSD1306_DrawPixel>
		for (i = y0; i <= y1; i++) {
 8000da2:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 8000da6:	b29b      	uxth	r3, r3
 8000da8:	3301      	adds	r3, #1
 8000daa:	b29b      	uxth	r3, r3
 8000dac:	82bb      	strh	r3, [r7, #20]
 8000dae:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8000db2:	883b      	ldrh	r3, [r7, #0]
 8000db4:	429a      	cmp	r2, r3
 8000db6:	dded      	ble.n	8000d94 <SSD1306_DrawLine+0x10a>
		}

		/* Return from function */
		return;
 8000db8:	e05f      	b.n	8000e7a <SSD1306_DrawLine+0x1f0>
	}

	if (dy == 0) {
 8000dba:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 8000dbe:	2b00      	cmp	r3, #0
 8000dc0:	d129      	bne.n	8000e16 <SSD1306_DrawLine+0x18c>
		if (y1 < y0) {
 8000dc2:	883a      	ldrh	r2, [r7, #0]
 8000dc4:	88bb      	ldrh	r3, [r7, #4]
 8000dc6:	429a      	cmp	r2, r3
 8000dc8:	d205      	bcs.n	8000dd6 <SSD1306_DrawLine+0x14c>
			tmp = y1;
 8000dca:	883b      	ldrh	r3, [r7, #0]
 8000dcc:	813b      	strh	r3, [r7, #8]
			y1 = y0;
 8000dce:	88bb      	ldrh	r3, [r7, #4]
 8000dd0:	803b      	strh	r3, [r7, #0]
			y0 = tmp;
 8000dd2:	893b      	ldrh	r3, [r7, #8]
 8000dd4:	80bb      	strh	r3, [r7, #4]
		}

		if (x1 < x0) {
 8000dd6:	887a      	ldrh	r2, [r7, #2]
 8000dd8:	88fb      	ldrh	r3, [r7, #6]
 8000dda:	429a      	cmp	r2, r3
 8000ddc:	d205      	bcs.n	8000dea <SSD1306_DrawLine+0x160>
			tmp = x1;
 8000dde:	887b      	ldrh	r3, [r7, #2]
 8000de0:	813b      	strh	r3, [r7, #8]
			x1 = x0;
 8000de2:	88fb      	ldrh	r3, [r7, #6]
 8000de4:	807b      	strh	r3, [r7, #2]
			x0 = tmp;
 8000de6:	893b      	ldrh	r3, [r7, #8]
 8000de8:	80fb      	strh	r3, [r7, #6]
		}

		/* Horizontal line */
		for (i = x0; i <= x1; i++) {
 8000dea:	88fb      	ldrh	r3, [r7, #6]
 8000dec:	82bb      	strh	r3, [r7, #20]
 8000dee:	e00c      	b.n	8000e0a <SSD1306_DrawLine+0x180>
			SSD1306_DrawPixel(i, y0, c);
 8000df0:	8abb      	ldrh	r3, [r7, #20]
 8000df2:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
 8000df6:	88b9      	ldrh	r1, [r7, #4]
 8000df8:	4618      	mov	r0, r3
 8000dfa:	f7ff fe2d 	bl	8000a58 <SSD1306_DrawPixel>
		for (i = x0; i <= x1; i++) {
 8000dfe:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 8000e02:	b29b      	uxth	r3, r3
 8000e04:	3301      	adds	r3, #1
 8000e06:	b29b      	uxth	r3, r3
 8000e08:	82bb      	strh	r3, [r7, #20]
 8000e0a:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 8000e0e:	887b      	ldrh	r3, [r7, #2]
 8000e10:	429a      	cmp	r2, r3
 8000e12:	dded      	ble.n	8000df0 <SSD1306_DrawLine+0x166>
		}

		/* Return from function */
		return;
 8000e14:	e031      	b.n	8000e7a <SSD1306_DrawLine+0x1f0>
	}

	while (1) {
		SSD1306_DrawPixel(x0, y0, c);
 8000e16:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
 8000e1a:	88b9      	ldrh	r1, [r7, #4]
 8000e1c:	88fb      	ldrh	r3, [r7, #6]
 8000e1e:	4618      	mov	r0, r3
 8000e20:	f7ff fe1a 	bl	8000a58 <SSD1306_DrawPixel>
		if (x0 == x1 && y0 == y1) {
 8000e24:	88fa      	ldrh	r2, [r7, #6]
 8000e26:	887b      	ldrh	r3, [r7, #2]
 8000e28:	429a      	cmp	r2, r3
 8000e2a:	d103      	bne.n	8000e34 <SSD1306_DrawLine+0x1aa>
 8000e2c:	88ba      	ldrh	r2, [r7, #4]
 8000e2e:	883b      	ldrh	r3, [r7, #0]
 8000e30:	429a      	cmp	r2, r3
 8000e32:	d021      	beq.n	8000e78 <SSD1306_DrawLine+0x1ee>
			break;
		}
		e2 = err;
 8000e34:	8afb      	ldrh	r3, [r7, #22]
 8000e36:	817b      	strh	r3, [r7, #10]
		if (e2 > -dx) {
 8000e38:	f9b7 200a 	ldrsh.w	r2, [r7, #10]
 8000e3c:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8000e40:	425b      	negs	r3, r3
 8000e42:	429a      	cmp	r2, r3
 8000e44:	dd08      	ble.n	8000e58 <SSD1306_DrawLine+0x1ce>
			err -= dy;
 8000e46:	8afa      	ldrh	r2, [r7, #22]
 8000e48:	8a3b      	ldrh	r3, [r7, #16]
 8000e4a:	1ad3      	subs	r3, r2, r3
 8000e4c:	b29b      	uxth	r3, r3
 8000e4e:	82fb      	strh	r3, [r7, #22]
			x0 += sx;
 8000e50:	89fa      	ldrh	r2, [r7, #14]
 8000e52:	88fb      	ldrh	r3, [r7, #6]
 8000e54:	4413      	add	r3, r2
 8000e56:	80fb      	strh	r3, [r7, #6]
		}
		if (e2 < dy) {
 8000e58:	f9b7 200a 	ldrsh.w	r2, [r7, #10]
 8000e5c:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 8000e60:	429a      	cmp	r2, r3
 8000e62:	dad8      	bge.n	8000e16 <SSD1306_DrawLine+0x18c>
			err += dx;
 8000e64:	8afa      	ldrh	r2, [r7, #22]
 8000e66:	8a7b      	ldrh	r3, [r7, #18]
 8000e68:	4413      	add	r3, r2
 8000e6a:	b29b      	uxth	r3, r3
 8000e6c:	82fb      	strh	r3, [r7, #22]
			y0 += sy;
 8000e6e:	89ba      	ldrh	r2, [r7, #12]
 8000e70:	88bb      	ldrh	r3, [r7, #4]
 8000e72:	4413      	add	r3, r2
 8000e74:	80bb      	strh	r3, [r7, #4]
		SSD1306_DrawPixel(x0, y0, c);
 8000e76:	e7ce      	b.n	8000e16 <SSD1306_DrawLine+0x18c>
			break;
 8000e78:	bf00      	nop
		}
	}
}
 8000e7a:	371c      	adds	r7, #28
 8000e7c:	46bd      	mov	sp, r7
 8000e7e:	bd90      	pop	{r4, r7, pc}

08000e80 <SSD1306_DrawRectangle>:

void SSD1306_DrawRectangle(uint16_t x, uint16_t y, uint16_t w, uint16_t h, SSD1306_COLOR_t c) {
 8000e80:	b590      	push	{r4, r7, lr}
 8000e82:	b085      	sub	sp, #20
 8000e84:	af02      	add	r7, sp, #8
 8000e86:	4604      	mov	r4, r0
 8000e88:	4608      	mov	r0, r1
 8000e8a:	4611      	mov	r1, r2
 8000e8c:	461a      	mov	r2, r3
 8000e8e:	4623      	mov	r3, r4
 8000e90:	80fb      	strh	r3, [r7, #6]
 8000e92:	4603      	mov	r3, r0
 8000e94:	80bb      	strh	r3, [r7, #4]
 8000e96:	460b      	mov	r3, r1
 8000e98:	807b      	strh	r3, [r7, #2]
 8000e9a:	4613      	mov	r3, r2
 8000e9c:	803b      	strh	r3, [r7, #0]
	/* Check input parameters */
	if (
 8000e9e:	88fb      	ldrh	r3, [r7, #6]
 8000ea0:	2b7f      	cmp	r3, #127	@ 0x7f
 8000ea2:	d853      	bhi.n	8000f4c <SSD1306_DrawRectangle+0xcc>
		x >= SSD1306_WIDTH ||
 8000ea4:	88bb      	ldrh	r3, [r7, #4]
 8000ea6:	2b3f      	cmp	r3, #63	@ 0x3f
 8000ea8:	d850      	bhi.n	8000f4c <SSD1306_DrawRectangle+0xcc>
		/* Return error */
		return;
	}

	/* Check width and height */
	if ((x + w) >= SSD1306_WIDTH) {
 8000eaa:	88fa      	ldrh	r2, [r7, #6]
 8000eac:	887b      	ldrh	r3, [r7, #2]
 8000eae:	4413      	add	r3, r2
 8000eb0:	2b7f      	cmp	r3, #127	@ 0x7f
 8000eb2:	dd03      	ble.n	8000ebc <SSD1306_DrawRectangle+0x3c>
		w = SSD1306_WIDTH - x;
 8000eb4:	88fb      	ldrh	r3, [r7, #6]
 8000eb6:	f1c3 0380 	rsb	r3, r3, #128	@ 0x80
 8000eba:	807b      	strh	r3, [r7, #2]
	}
	if ((y + h) >= SSD1306_HEIGHT) {
 8000ebc:	88ba      	ldrh	r2, [r7, #4]
 8000ebe:	883b      	ldrh	r3, [r7, #0]
 8000ec0:	4413      	add	r3, r2
 8000ec2:	2b3f      	cmp	r3, #63	@ 0x3f
 8000ec4:	dd03      	ble.n	8000ece <SSD1306_DrawRectangle+0x4e>
		h = SSD1306_HEIGHT - y;
 8000ec6:	88bb      	ldrh	r3, [r7, #4]
 8000ec8:	f1c3 0340 	rsb	r3, r3, #64	@ 0x40
 8000ecc:	803b      	strh	r3, [r7, #0]
	}

	/* Draw 4 lines */
	SSD1306_DrawLine(x, y, x + w, y, c);         /* Top line */
 8000ece:	88fa      	ldrh	r2, [r7, #6]
 8000ed0:	887b      	ldrh	r3, [r7, #2]
 8000ed2:	4413      	add	r3, r2
 8000ed4:	b29a      	uxth	r2, r3
 8000ed6:	88bc      	ldrh	r4, [r7, #4]
 8000ed8:	88b9      	ldrh	r1, [r7, #4]
 8000eda:	88f8      	ldrh	r0, [r7, #6]
 8000edc:	7e3b      	ldrb	r3, [r7, #24]
 8000ede:	9300      	str	r3, [sp, #0]
 8000ee0:	4623      	mov	r3, r4
 8000ee2:	f7ff fed2 	bl	8000c8a <SSD1306_DrawLine>
	SSD1306_DrawLine(x, y + h, x + w, y + h, c); /* Bottom line */
 8000ee6:	88ba      	ldrh	r2, [r7, #4]
 8000ee8:	883b      	ldrh	r3, [r7, #0]
 8000eea:	4413      	add	r3, r2
 8000eec:	b299      	uxth	r1, r3
 8000eee:	88fa      	ldrh	r2, [r7, #6]
 8000ef0:	887b      	ldrh	r3, [r7, #2]
 8000ef2:	4413      	add	r3, r2
 8000ef4:	b29c      	uxth	r4, r3
 8000ef6:	88ba      	ldrh	r2, [r7, #4]
 8000ef8:	883b      	ldrh	r3, [r7, #0]
 8000efa:	4413      	add	r3, r2
 8000efc:	b29a      	uxth	r2, r3
 8000efe:	88f8      	ldrh	r0, [r7, #6]
 8000f00:	7e3b      	ldrb	r3, [r7, #24]
 8000f02:	9300      	str	r3, [sp, #0]
 8000f04:	4613      	mov	r3, r2
 8000f06:	4622      	mov	r2, r4
 8000f08:	f7ff febf 	bl	8000c8a <SSD1306_DrawLine>
	SSD1306_DrawLine(x, y, x, y + h, c);         /* Left line */
 8000f0c:	88ba      	ldrh	r2, [r7, #4]
 8000f0e:	883b      	ldrh	r3, [r7, #0]
 8000f10:	4413      	add	r3, r2
 8000f12:	b29c      	uxth	r4, r3
 8000f14:	88fa      	ldrh	r2, [r7, #6]
 8000f16:	88b9      	ldrh	r1, [r7, #4]
 8000f18:	88f8      	ldrh	r0, [r7, #6]
 8000f1a:	7e3b      	ldrb	r3, [r7, #24]
 8000f1c:	9300      	str	r3, [sp, #0]
 8000f1e:	4623      	mov	r3, r4
 8000f20:	f7ff feb3 	bl	8000c8a <SSD1306_DrawLine>
	SSD1306_DrawLine(x + w, y, x + w, y + h, c); /* Right line */
 8000f24:	88fa      	ldrh	r2, [r7, #6]
 8000f26:	887b      	ldrh	r3, [r7, #2]
 8000f28:	4413      	add	r3, r2
 8000f2a:	b298      	uxth	r0, r3
 8000f2c:	88fa      	ldrh	r2, [r7, #6]
 8000f2e:	887b      	ldrh	r3, [r7, #2]
 8000f30:	4413      	add	r3, r2
 8000f32:	b29c      	uxth	r4, r3
 8000f34:	88ba      	ldrh	r2, [r7, #4]
 8000f36:	883b      	ldrh	r3, [r7, #0]
 8000f38:	4413      	add	r3, r2
 8000f3a:	b29a      	uxth	r2, r3
 8000f3c:	88b9      	ldrh	r1, [r7, #4]
 8000f3e:	7e3b      	ldrb	r3, [r7, #24]
 8000f40:	9300      	str	r3, [sp, #0]
 8000f42:	4613      	mov	r3, r2
 8000f44:	4622      	mov	r2, r4
 8000f46:	f7ff fea0 	bl	8000c8a <SSD1306_DrawLine>
 8000f4a:	e000      	b.n	8000f4e <SSD1306_DrawRectangle+0xce>
		return;
 8000f4c:	bf00      	nop
}
 8000f4e:	370c      	adds	r7, #12
 8000f50:	46bd      	mov	sp, r7
 8000f52:	bd90      	pop	{r4, r7, pc}

08000f54 <SSD1306_DrawTriangle>:
		/* Draw lines */
		SSD1306_DrawLine(x, y + i, x + w, y + i, c);
	}
}

void SSD1306_DrawTriangle(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2, uint16_t x3, uint16_t y3, SSD1306_COLOR_t color) {
 8000f54:	b590      	push	{r4, r7, lr}
 8000f56:	b085      	sub	sp, #20
 8000f58:	af02      	add	r7, sp, #8
 8000f5a:	4604      	mov	r4, r0
 8000f5c:	4608      	mov	r0, r1
 8000f5e:	4611      	mov	r1, r2
 8000f60:	461a      	mov	r2, r3
 8000f62:	4623      	mov	r3, r4
 8000f64:	80fb      	strh	r3, [r7, #6]
 8000f66:	4603      	mov	r3, r0
 8000f68:	80bb      	strh	r3, [r7, #4]
 8000f6a:	460b      	mov	r3, r1
 8000f6c:	807b      	strh	r3, [r7, #2]
 8000f6e:	4613      	mov	r3, r2
 8000f70:	803b      	strh	r3, [r7, #0]
	/* Draw lines */
	SSD1306_DrawLine(x1, y1, x2, y2, color);
 8000f72:	883c      	ldrh	r4, [r7, #0]
 8000f74:	887a      	ldrh	r2, [r7, #2]
 8000f76:	88b9      	ldrh	r1, [r7, #4]
 8000f78:	88f8      	ldrh	r0, [r7, #6]
 8000f7a:	f897 3020 	ldrb.w	r3, [r7, #32]
 8000f7e:	9300      	str	r3, [sp, #0]
 8000f80:	4623      	mov	r3, r4
 8000f82:	f7ff fe82 	bl	8000c8a <SSD1306_DrawLine>
	SSD1306_DrawLine(x2, y2, x3, y3, color);
 8000f86:	8bbc      	ldrh	r4, [r7, #28]
 8000f88:	8b3a      	ldrh	r2, [r7, #24]
 8000f8a:	8839      	ldrh	r1, [r7, #0]
 8000f8c:	8878      	ldrh	r0, [r7, #2]
 8000f8e:	f897 3020 	ldrb.w	r3, [r7, #32]
 8000f92:	9300      	str	r3, [sp, #0]
 8000f94:	4623      	mov	r3, r4
 8000f96:	f7ff fe78 	bl	8000c8a <SSD1306_DrawLine>
	SSD1306_DrawLine(x3, y3, x1, y1, color);
 8000f9a:	88bc      	ldrh	r4, [r7, #4]
 8000f9c:	88fa      	ldrh	r2, [r7, #6]
 8000f9e:	8bb9      	ldrh	r1, [r7, #28]
 8000fa0:	8b38      	ldrh	r0, [r7, #24]
 8000fa2:	f897 3020 	ldrb.w	r3, [r7, #32]
 8000fa6:	9300      	str	r3, [sp, #0]
 8000fa8:	4623      	mov	r3, r4
 8000faa:	f7ff fe6e 	bl	8000c8a <SSD1306_DrawLine>
}
 8000fae:	bf00      	nop
 8000fb0:	370c      	adds	r7, #12
 8000fb2:	46bd      	mov	sp, r7
 8000fb4:	bd90      	pop	{r4, r7, pc}

08000fb6 <SSD1306_DrawCircle>:
		x += xinc2;
		y += yinc2;
	}
}

void SSD1306_DrawCircle(int16_t x0, int16_t y0, int16_t r, SSD1306_COLOR_t c) {
 8000fb6:	b590      	push	{r4, r7, lr}
 8000fb8:	b087      	sub	sp, #28
 8000fba:	af00      	add	r7, sp, #0
 8000fbc:	4604      	mov	r4, r0
 8000fbe:	4608      	mov	r0, r1
 8000fc0:	4611      	mov	r1, r2
 8000fc2:	461a      	mov	r2, r3
 8000fc4:	4623      	mov	r3, r4
 8000fc6:	80fb      	strh	r3, [r7, #6]
 8000fc8:	4603      	mov	r3, r0
 8000fca:	80bb      	strh	r3, [r7, #4]
 8000fcc:	460b      	mov	r3, r1
 8000fce:	807b      	strh	r3, [r7, #2]
 8000fd0:	4613      	mov	r3, r2
 8000fd2:	707b      	strb	r3, [r7, #1]
	int16_t f = 1 - r;
 8000fd4:	887b      	ldrh	r3, [r7, #2]
 8000fd6:	f1c3 0301 	rsb	r3, r3, #1
 8000fda:	b29b      	uxth	r3, r3
 8000fdc:	82fb      	strh	r3, [r7, #22]
	int16_t ddF_x = 1;
 8000fde:	2301      	movs	r3, #1
 8000fe0:	82bb      	strh	r3, [r7, #20]
	int16_t ddF_y = -2 * r;
 8000fe2:	887b      	ldrh	r3, [r7, #2]
 8000fe4:	461a      	mov	r2, r3
 8000fe6:	03d2      	lsls	r2, r2, #15
 8000fe8:	1ad3      	subs	r3, r2, r3
 8000fea:	005b      	lsls	r3, r3, #1
 8000fec:	b29b      	uxth	r3, r3
 8000fee:	827b      	strh	r3, [r7, #18]
	int16_t x = 0;
 8000ff0:	2300      	movs	r3, #0
 8000ff2:	823b      	strh	r3, [r7, #16]
	int16_t y = r;
 8000ff4:	887b      	ldrh	r3, [r7, #2]
 8000ff6:	81fb      	strh	r3, [r7, #14]

    SSD1306_DrawPixel(x0, y0 + r, c);
 8000ff8:	88f8      	ldrh	r0, [r7, #6]
 8000ffa:	88ba      	ldrh	r2, [r7, #4]
 8000ffc:	887b      	ldrh	r3, [r7, #2]
 8000ffe:	4413      	add	r3, r2
 8001000:	b29b      	uxth	r3, r3
 8001002:	787a      	ldrb	r2, [r7, #1]
 8001004:	4619      	mov	r1, r3
 8001006:	f7ff fd27 	bl	8000a58 <SSD1306_DrawPixel>
    SSD1306_DrawPixel(x0, y0 - r, c);
 800100a:	88f8      	ldrh	r0, [r7, #6]
 800100c:	88ba      	ldrh	r2, [r7, #4]
 800100e:	887b      	ldrh	r3, [r7, #2]
 8001010:	1ad3      	subs	r3, r2, r3
 8001012:	b29b      	uxth	r3, r3
 8001014:	787a      	ldrb	r2, [r7, #1]
 8001016:	4619      	mov	r1, r3
 8001018:	f7ff fd1e 	bl	8000a58 <SSD1306_DrawPixel>
    SSD1306_DrawPixel(x0 + r, y0, c);
 800101c:	88fa      	ldrh	r2, [r7, #6]
 800101e:	887b      	ldrh	r3, [r7, #2]
 8001020:	4413      	add	r3, r2
 8001022:	b29b      	uxth	r3, r3
 8001024:	88b9      	ldrh	r1, [r7, #4]
 8001026:	787a      	ldrb	r2, [r7, #1]
 8001028:	4618      	mov	r0, r3
 800102a:	f7ff fd15 	bl	8000a58 <SSD1306_DrawPixel>
    SSD1306_DrawPixel(x0 - r, y0, c);
 800102e:	88fa      	ldrh	r2, [r7, #6]
 8001030:	887b      	ldrh	r3, [r7, #2]
 8001032:	1ad3      	subs	r3, r2, r3
 8001034:	b29b      	uxth	r3, r3
 8001036:	88b9      	ldrh	r1, [r7, #4]
 8001038:	787a      	ldrb	r2, [r7, #1]
 800103a:	4618      	mov	r0, r3
 800103c:	f7ff fd0c 	bl	8000a58 <SSD1306_DrawPixel>

    while (x < y) {
 8001040:	e081      	b.n	8001146 <SSD1306_DrawCircle+0x190>
        if (f >= 0) {
 8001042:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8001046:	2b00      	cmp	r3, #0
 8001048:	db0e      	blt.n	8001068 <SSD1306_DrawCircle+0xb2>
            y--;
 800104a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800104e:	b29b      	uxth	r3, r3
 8001050:	3b01      	subs	r3, #1
 8001052:	b29b      	uxth	r3, r3
 8001054:	81fb      	strh	r3, [r7, #14]
            ddF_y += 2;
 8001056:	8a7b      	ldrh	r3, [r7, #18]
 8001058:	3302      	adds	r3, #2
 800105a:	b29b      	uxth	r3, r3
 800105c:	827b      	strh	r3, [r7, #18]
            f += ddF_y;
 800105e:	8afa      	ldrh	r2, [r7, #22]
 8001060:	8a7b      	ldrh	r3, [r7, #18]
 8001062:	4413      	add	r3, r2
 8001064:	b29b      	uxth	r3, r3
 8001066:	82fb      	strh	r3, [r7, #22]
        }
        x++;
 8001068:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 800106c:	b29b      	uxth	r3, r3
 800106e:	3301      	adds	r3, #1
 8001070:	b29b      	uxth	r3, r3
 8001072:	823b      	strh	r3, [r7, #16]
        ddF_x += 2;
 8001074:	8abb      	ldrh	r3, [r7, #20]
 8001076:	3302      	adds	r3, #2
 8001078:	b29b      	uxth	r3, r3
 800107a:	82bb      	strh	r3, [r7, #20]
        f += ddF_x;
 800107c:	8afa      	ldrh	r2, [r7, #22]
 800107e:	8abb      	ldrh	r3, [r7, #20]
 8001080:	4413      	add	r3, r2
 8001082:	b29b      	uxth	r3, r3
 8001084:	82fb      	strh	r3, [r7, #22]

        SSD1306_DrawPixel(x0 + x, y0 + y, c);
 8001086:	88fa      	ldrh	r2, [r7, #6]
 8001088:	8a3b      	ldrh	r3, [r7, #16]
 800108a:	4413      	add	r3, r2
 800108c:	b298      	uxth	r0, r3
 800108e:	88ba      	ldrh	r2, [r7, #4]
 8001090:	89fb      	ldrh	r3, [r7, #14]
 8001092:	4413      	add	r3, r2
 8001094:	b29b      	uxth	r3, r3
 8001096:	787a      	ldrb	r2, [r7, #1]
 8001098:	4619      	mov	r1, r3
 800109a:	f7ff fcdd 	bl	8000a58 <SSD1306_DrawPixel>
        SSD1306_DrawPixel(x0 - x, y0 + y, c);
 800109e:	88fa      	ldrh	r2, [r7, #6]
 80010a0:	8a3b      	ldrh	r3, [r7, #16]
 80010a2:	1ad3      	subs	r3, r2, r3
 80010a4:	b298      	uxth	r0, r3
 80010a6:	88ba      	ldrh	r2, [r7, #4]
 80010a8:	89fb      	ldrh	r3, [r7, #14]
 80010aa:	4413      	add	r3, r2
 80010ac:	b29b      	uxth	r3, r3
 80010ae:	787a      	ldrb	r2, [r7, #1]
 80010b0:	4619      	mov	r1, r3
 80010b2:	f7ff fcd1 	bl	8000a58 <SSD1306_DrawPixel>
        SSD1306_DrawPixel(x0 + x, y0 - y, c);
 80010b6:	88fa      	ldrh	r2, [r7, #6]
 80010b8:	8a3b      	ldrh	r3, [r7, #16]
 80010ba:	4413      	add	r3, r2
 80010bc:	b298      	uxth	r0, r3
 80010be:	88ba      	ldrh	r2, [r7, #4]
 80010c0:	89fb      	ldrh	r3, [r7, #14]
 80010c2:	1ad3      	subs	r3, r2, r3
 80010c4:	b29b      	uxth	r3, r3
 80010c6:	787a      	ldrb	r2, [r7, #1]
 80010c8:	4619      	mov	r1, r3
 80010ca:	f7ff fcc5 	bl	8000a58 <SSD1306_DrawPixel>
        SSD1306_DrawPixel(x0 - x, y0 - y, c);
 80010ce:	88fa      	ldrh	r2, [r7, #6]
 80010d0:	8a3b      	ldrh	r3, [r7, #16]
 80010d2:	1ad3      	subs	r3, r2, r3
 80010d4:	b298      	uxth	r0, r3
 80010d6:	88ba      	ldrh	r2, [r7, #4]
 80010d8:	89fb      	ldrh	r3, [r7, #14]
 80010da:	1ad3      	subs	r3, r2, r3
 80010dc:	b29b      	uxth	r3, r3
 80010de:	787a      	ldrb	r2, [r7, #1]
 80010e0:	4619      	mov	r1, r3
 80010e2:	f7ff fcb9 	bl	8000a58 <SSD1306_DrawPixel>

        SSD1306_DrawPixel(x0 + y, y0 + x, c);
 80010e6:	88fa      	ldrh	r2, [r7, #6]
 80010e8:	89fb      	ldrh	r3, [r7, #14]
 80010ea:	4413      	add	r3, r2
 80010ec:	b298      	uxth	r0, r3
 80010ee:	88ba      	ldrh	r2, [r7, #4]
 80010f0:	8a3b      	ldrh	r3, [r7, #16]
 80010f2:	4413      	add	r3, r2
 80010f4:	b29b      	uxth	r3, r3
 80010f6:	787a      	ldrb	r2, [r7, #1]
 80010f8:	4619      	mov	r1, r3
 80010fa:	f7ff fcad 	bl	8000a58 <SSD1306_DrawPixel>
        SSD1306_DrawPixel(x0 - y, y0 + x, c);
 80010fe:	88fa      	ldrh	r2, [r7, #6]
 8001100:	89fb      	ldrh	r3, [r7, #14]
 8001102:	1ad3      	subs	r3, r2, r3
 8001104:	b298      	uxth	r0, r3
 8001106:	88ba      	ldrh	r2, [r7, #4]
 8001108:	8a3b      	ldrh	r3, [r7, #16]
 800110a:	4413      	add	r3, r2
 800110c:	b29b      	uxth	r3, r3
 800110e:	787a      	ldrb	r2, [r7, #1]
 8001110:	4619      	mov	r1, r3
 8001112:	f7ff fca1 	bl	8000a58 <SSD1306_DrawPixel>
        SSD1306_DrawPixel(x0 + y, y0 - x, c);
 8001116:	88fa      	ldrh	r2, [r7, #6]
 8001118:	89fb      	ldrh	r3, [r7, #14]
 800111a:	4413      	add	r3, r2
 800111c:	b298      	uxth	r0, r3
 800111e:	88ba      	ldrh	r2, [r7, #4]
 8001120:	8a3b      	ldrh	r3, [r7, #16]
 8001122:	1ad3      	subs	r3, r2, r3
 8001124:	b29b      	uxth	r3, r3
 8001126:	787a      	ldrb	r2, [r7, #1]
 8001128:	4619      	mov	r1, r3
 800112a:	f7ff fc95 	bl	8000a58 <SSD1306_DrawPixel>
        SSD1306_DrawPixel(x0 - y, y0 - x, c);
 800112e:	88fa      	ldrh	r2, [r7, #6]
 8001130:	89fb      	ldrh	r3, [r7, #14]
 8001132:	1ad3      	subs	r3, r2, r3
 8001134:	b298      	uxth	r0, r3
 8001136:	88ba      	ldrh	r2, [r7, #4]
 8001138:	8a3b      	ldrh	r3, [r7, #16]
 800113a:	1ad3      	subs	r3, r2, r3
 800113c:	b29b      	uxth	r3, r3
 800113e:	787a      	ldrb	r2, [r7, #1]
 8001140:	4619      	mov	r1, r3
 8001142:	f7ff fc89 	bl	8000a58 <SSD1306_DrawPixel>
    while (x < y) {
 8001146:	f9b7 2010 	ldrsh.w	r2, [r7, #16]
 800114a:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800114e:	429a      	cmp	r2, r3
 8001150:	f6ff af77 	blt.w	8001042 <SSD1306_DrawCircle+0x8c>
    }
}
 8001154:	bf00      	nop
 8001156:	bf00      	nop
 8001158:	371c      	adds	r7, #28
 800115a:	46bd      	mov	sp, r7
 800115c:	bd90      	pop	{r4, r7, pc}

0800115e <SSD1306_Clear>:
}



void SSD1306_Clear (void)
{
 800115e:	b580      	push	{r7, lr}
 8001160:	af00      	add	r7, sp, #0
	SSD1306_Fill (0);
 8001162:	2000      	movs	r0, #0
 8001164:	f7ff fc60 	bl	8000a28 <SSD1306_Fill>
    SSD1306_UpdateScreen();
 8001168:	f7ff fc30 	bl	80009cc <SSD1306_UpdateScreen>
}
 800116c:	bf00      	nop
 800116e:	bd80      	pop	{r7, pc}

08001170 <ssd1306_I2C_Init>:
//  _| |_ / /_| |____
// |_____|____|\_____|
//
/////////////////////////////////////////////////////////////////////////////////////////////////////////

void ssd1306_I2C_Init() {
 8001170:	b480      	push	{r7}
 8001172:	b083      	sub	sp, #12
 8001174:	af00      	add	r7, sp, #0
	//MX_I2C1_Init();
	uint32_t p = 250000;
 8001176:	4b08      	ldr	r3, [pc, #32]	@ (8001198 <ssd1306_I2C_Init+0x28>)
 8001178:	607b      	str	r3, [r7, #4]
	while(p>0)
 800117a:	e002      	b.n	8001182 <ssd1306_I2C_Init+0x12>
		p--;
 800117c:	687b      	ldr	r3, [r7, #4]
 800117e:	3b01      	subs	r3, #1
 8001180:	607b      	str	r3, [r7, #4]
	while(p>0)
 8001182:	687b      	ldr	r3, [r7, #4]
 8001184:	2b00      	cmp	r3, #0
 8001186:	d1f9      	bne.n	800117c <ssd1306_I2C_Init+0xc>
	//HAL_I2C_DeInit(&hi2c1);
	//p = 250000;
	//while(p>0)
	//	p--;
	//MX_I2C1_Init();
}
 8001188:	bf00      	nop
 800118a:	bf00      	nop
 800118c:	370c      	adds	r7, #12
 800118e:	46bd      	mov	sp, r7
 8001190:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001194:	4770      	bx	lr
 8001196:	bf00      	nop
 8001198:	0003d090 	.word	0x0003d090

0800119c <ssd1306_I2C_WriteMulti>:

void ssd1306_I2C_WriteMulti(uint8_t address, uint8_t reg, uint8_t* data, uint16_t count) {
 800119c:	b590      	push	{r4, r7, lr}
 800119e:	b0c7      	sub	sp, #284	@ 0x11c
 80011a0:	af02      	add	r7, sp, #8
 80011a2:	4604      	mov	r4, r0
 80011a4:	4608      	mov	r0, r1
 80011a6:	f507 7188 	add.w	r1, r7, #272	@ 0x110
 80011aa:	f5a1 7188 	sub.w	r1, r1, #272	@ 0x110
 80011ae:	600a      	str	r2, [r1, #0]
 80011b0:	4619      	mov	r1, r3
 80011b2:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 80011b6:	f2a3 1309 	subw	r3, r3, #265	@ 0x109
 80011ba:	4622      	mov	r2, r4
 80011bc:	701a      	strb	r2, [r3, #0]
 80011be:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 80011c2:	f5a3 7385 	sub.w	r3, r3, #266	@ 0x10a
 80011c6:	4602      	mov	r2, r0
 80011c8:	701a      	strb	r2, [r3, #0]
 80011ca:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 80011ce:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 80011d2:	460a      	mov	r2, r1
 80011d4:	801a      	strh	r2, [r3, #0]
uint8_t dt[256];
dt[0] = reg;
 80011d6:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 80011da:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 80011de:	f507 7288 	add.w	r2, r7, #272	@ 0x110
 80011e2:	f5a2 7285 	sub.w	r2, r2, #266	@ 0x10a
 80011e6:	7812      	ldrb	r2, [r2, #0]
 80011e8:	701a      	strb	r2, [r3, #0]
uint8_t i;
for(i = 0; i < count; i++)
 80011ea:	2300      	movs	r3, #0
 80011ec:	f887 310f 	strb.w	r3, [r7, #271]	@ 0x10f
 80011f0:	e015      	b.n	800121e <ssd1306_I2C_WriteMulti+0x82>
dt[i+1] = data[i];
 80011f2:	f897 310f 	ldrb.w	r3, [r7, #271]	@ 0x10f
 80011f6:	f507 7288 	add.w	r2, r7, #272	@ 0x110
 80011fa:	f5a2 7288 	sub.w	r2, r2, #272	@ 0x110
 80011fe:	6812      	ldr	r2, [r2, #0]
 8001200:	441a      	add	r2, r3
 8001202:	f897 310f 	ldrb.w	r3, [r7, #271]	@ 0x10f
 8001206:	3301      	adds	r3, #1
 8001208:	7811      	ldrb	r1, [r2, #0]
 800120a:	f507 7288 	add.w	r2, r7, #272	@ 0x110
 800120e:	f5a2 7282 	sub.w	r2, r2, #260	@ 0x104
 8001212:	54d1      	strb	r1, [r2, r3]
for(i = 0; i < count; i++)
 8001214:	f897 310f 	ldrb.w	r3, [r7, #271]	@ 0x10f
 8001218:	3301      	adds	r3, #1
 800121a:	f887 310f 	strb.w	r3, [r7, #271]	@ 0x10f
 800121e:	f897 310f 	ldrb.w	r3, [r7, #271]	@ 0x10f
 8001222:	b29b      	uxth	r3, r3
 8001224:	f507 7288 	add.w	r2, r7, #272	@ 0x110
 8001228:	f5a2 7286 	sub.w	r2, r2, #268	@ 0x10c
 800122c:	8812      	ldrh	r2, [r2, #0]
 800122e:	429a      	cmp	r2, r3
 8001230:	d8df      	bhi.n	80011f2 <ssd1306_I2C_WriteMulti+0x56>
HAL_I2C_Master_Transmit(&hi2c1, address, dt, count+1, 10);
 8001232:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 8001236:	f2a3 1309 	subw	r3, r3, #265	@ 0x109
 800123a:	781b      	ldrb	r3, [r3, #0]
 800123c:	b299      	uxth	r1, r3
 800123e:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 8001242:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 8001246:	881b      	ldrh	r3, [r3, #0]
 8001248:	3301      	adds	r3, #1
 800124a:	b29b      	uxth	r3, r3
 800124c:	f107 020c 	add.w	r2, r7, #12
 8001250:	200a      	movs	r0, #10
 8001252:	9000      	str	r0, [sp, #0]
 8001254:	4803      	ldr	r0, [pc, #12]	@ (8001264 <ssd1306_I2C_WriteMulti+0xc8>)
 8001256:	f000 fd55 	bl	8001d04 <HAL_I2C_Master_Transmit>
}
 800125a:	bf00      	nop
 800125c:	f507 778a 	add.w	r7, r7, #276	@ 0x114
 8001260:	46bd      	mov	sp, r7
 8001262:	bd90      	pop	{r4, r7, pc}
 8001264:	20000038 	.word	0x20000038

08001268 <ssd1306_I2C_Write>:


void ssd1306_I2C_Write(uint8_t address, uint8_t reg, uint8_t data) {
 8001268:	b580      	push	{r7, lr}
 800126a:	b086      	sub	sp, #24
 800126c:	af02      	add	r7, sp, #8
 800126e:	4603      	mov	r3, r0
 8001270:	71fb      	strb	r3, [r7, #7]
 8001272:	460b      	mov	r3, r1
 8001274:	71bb      	strb	r3, [r7, #6]
 8001276:	4613      	mov	r3, r2
 8001278:	717b      	strb	r3, [r7, #5]
	uint8_t dt[2];
	dt[0] = reg;
 800127a:	79bb      	ldrb	r3, [r7, #6]
 800127c:	733b      	strb	r3, [r7, #12]
	dt[1] = data;
 800127e:	797b      	ldrb	r3, [r7, #5]
 8001280:	737b      	strb	r3, [r7, #13]
	HAL_I2C_Master_Transmit(&hi2c1, address, dt, 2, 10);
 8001282:	79fb      	ldrb	r3, [r7, #7]
 8001284:	b299      	uxth	r1, r3
 8001286:	f107 020c 	add.w	r2, r7, #12
 800128a:	230a      	movs	r3, #10
 800128c:	9300      	str	r3, [sp, #0]
 800128e:	2302      	movs	r3, #2
 8001290:	4803      	ldr	r0, [pc, #12]	@ (80012a0 <ssd1306_I2C_Write+0x38>)
 8001292:	f000 fd37 	bl	8001d04 <HAL_I2C_Master_Transmit>
}
 8001296:	bf00      	nop
 8001298:	3710      	adds	r7, #16
 800129a:	46bd      	mov	sp, r7
 800129c:	bd80      	pop	{r7, pc}
 800129e:	bf00      	nop
 80012a0:	20000038 	.word	0x20000038

080012a4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80012a4:	b480      	push	{r7}
 80012a6:	b083      	sub	sp, #12
 80012a8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80012aa:	2300      	movs	r3, #0
 80012ac:	607b      	str	r3, [r7, #4]
 80012ae:	4b10      	ldr	r3, [pc, #64]	@ (80012f0 <HAL_MspInit+0x4c>)
 80012b0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80012b2:	4a0f      	ldr	r2, [pc, #60]	@ (80012f0 <HAL_MspInit+0x4c>)
 80012b4:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80012b8:	6453      	str	r3, [r2, #68]	@ 0x44
 80012ba:	4b0d      	ldr	r3, [pc, #52]	@ (80012f0 <HAL_MspInit+0x4c>)
 80012bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80012be:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80012c2:	607b      	str	r3, [r7, #4]
 80012c4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80012c6:	2300      	movs	r3, #0
 80012c8:	603b      	str	r3, [r7, #0]
 80012ca:	4b09      	ldr	r3, [pc, #36]	@ (80012f0 <HAL_MspInit+0x4c>)
 80012cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80012ce:	4a08      	ldr	r2, [pc, #32]	@ (80012f0 <HAL_MspInit+0x4c>)
 80012d0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80012d4:	6413      	str	r3, [r2, #64]	@ 0x40
 80012d6:	4b06      	ldr	r3, [pc, #24]	@ (80012f0 <HAL_MspInit+0x4c>)
 80012d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80012da:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80012de:	603b      	str	r3, [r7, #0]
 80012e0:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80012e2:	bf00      	nop
 80012e4:	370c      	adds	r7, #12
 80012e6:	46bd      	mov	sp, r7
 80012e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012ec:	4770      	bx	lr
 80012ee:	bf00      	nop
 80012f0:	40023800 	.word	0x40023800

080012f4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80012f4:	b580      	push	{r7, lr}
 80012f6:	b08a      	sub	sp, #40	@ 0x28
 80012f8:	af00      	add	r7, sp, #0
 80012fa:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012fc:	f107 0314 	add.w	r3, r7, #20
 8001300:	2200      	movs	r2, #0
 8001302:	601a      	str	r2, [r3, #0]
 8001304:	605a      	str	r2, [r3, #4]
 8001306:	609a      	str	r2, [r3, #8]
 8001308:	60da      	str	r2, [r3, #12]
 800130a:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 800130c:	687b      	ldr	r3, [r7, #4]
 800130e:	681b      	ldr	r3, [r3, #0]
 8001310:	4a19      	ldr	r2, [pc, #100]	@ (8001378 <HAL_I2C_MspInit+0x84>)
 8001312:	4293      	cmp	r3, r2
 8001314:	d12c      	bne.n	8001370 <HAL_I2C_MspInit+0x7c>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001316:	2300      	movs	r3, #0
 8001318:	613b      	str	r3, [r7, #16]
 800131a:	4b18      	ldr	r3, [pc, #96]	@ (800137c <HAL_I2C_MspInit+0x88>)
 800131c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800131e:	4a17      	ldr	r2, [pc, #92]	@ (800137c <HAL_I2C_MspInit+0x88>)
 8001320:	f043 0302 	orr.w	r3, r3, #2
 8001324:	6313      	str	r3, [r2, #48]	@ 0x30
 8001326:	4b15      	ldr	r3, [pc, #84]	@ (800137c <HAL_I2C_MspInit+0x88>)
 8001328:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800132a:	f003 0302 	and.w	r3, r3, #2
 800132e:	613b      	str	r3, [r7, #16]
 8001330:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8001332:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8001336:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001338:	2312      	movs	r3, #18
 800133a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800133c:	2300      	movs	r3, #0
 800133e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001340:	2303      	movs	r3, #3
 8001342:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001344:	2304      	movs	r3, #4
 8001346:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001348:	f107 0314 	add.w	r3, r7, #20
 800134c:	4619      	mov	r1, r3
 800134e:	480c      	ldr	r0, [pc, #48]	@ (8001380 <HAL_I2C_MspInit+0x8c>)
 8001350:	f000 fa00 	bl	8001754 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001354:	2300      	movs	r3, #0
 8001356:	60fb      	str	r3, [r7, #12]
 8001358:	4b08      	ldr	r3, [pc, #32]	@ (800137c <HAL_I2C_MspInit+0x88>)
 800135a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800135c:	4a07      	ldr	r2, [pc, #28]	@ (800137c <HAL_I2C_MspInit+0x88>)
 800135e:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001362:	6413      	str	r3, [r2, #64]	@ 0x40
 8001364:	4b05      	ldr	r3, [pc, #20]	@ (800137c <HAL_I2C_MspInit+0x88>)
 8001366:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001368:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800136c:	60fb      	str	r3, [r7, #12]
 800136e:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END I2C1_MspInit 1 */

  }

}
 8001370:	bf00      	nop
 8001372:	3728      	adds	r7, #40	@ 0x28
 8001374:	46bd      	mov	sp, r7
 8001376:	bd80      	pop	{r7, pc}
 8001378:	40005400 	.word	0x40005400
 800137c:	40023800 	.word	0x40023800
 8001380:	40020400 	.word	0x40020400

08001384 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001384:	b480      	push	{r7}
 8001386:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001388:	bf00      	nop
 800138a:	e7fd      	b.n	8001388 <NMI_Handler+0x4>

0800138c <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800138c:	b480      	push	{r7}
 800138e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001390:	bf00      	nop
 8001392:	e7fd      	b.n	8001390 <HardFault_Handler+0x4>

08001394 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001394:	b480      	push	{r7}
 8001396:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001398:	bf00      	nop
 800139a:	e7fd      	b.n	8001398 <MemManage_Handler+0x4>

0800139c <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800139c:	b480      	push	{r7}
 800139e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80013a0:	bf00      	nop
 80013a2:	e7fd      	b.n	80013a0 <BusFault_Handler+0x4>

080013a4 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80013a4:	b480      	push	{r7}
 80013a6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80013a8:	bf00      	nop
 80013aa:	e7fd      	b.n	80013a8 <UsageFault_Handler+0x4>

080013ac <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80013ac:	b480      	push	{r7}
 80013ae:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80013b0:	bf00      	nop
 80013b2:	46bd      	mov	sp, r7
 80013b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013b8:	4770      	bx	lr

080013ba <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80013ba:	b480      	push	{r7}
 80013bc:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80013be:	bf00      	nop
 80013c0:	46bd      	mov	sp, r7
 80013c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013c6:	4770      	bx	lr

080013c8 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80013c8:	b480      	push	{r7}
 80013ca:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80013cc:	bf00      	nop
 80013ce:	46bd      	mov	sp, r7
 80013d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013d4:	4770      	bx	lr

080013d6 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80013d6:	b580      	push	{r7, lr}
 80013d8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80013da:	f000 f891 	bl	8001500 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80013de:	bf00      	nop
 80013e0:	bd80      	pop	{r7, pc}
	...

080013e4 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80013e4:	b480      	push	{r7}
 80013e6:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80013e8:	4b06      	ldr	r3, [pc, #24]	@ (8001404 <SystemInit+0x20>)
 80013ea:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80013ee:	4a05      	ldr	r2, [pc, #20]	@ (8001404 <SystemInit+0x20>)
 80013f0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80013f4:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80013f8:	bf00      	nop
 80013fa:	46bd      	mov	sp, r7
 80013fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001400:	4770      	bx	lr
 8001402:	bf00      	nop
 8001404:	e000ed00 	.word	0xe000ed00

08001408 <Reset_Handler>:
 8001408:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001440 <LoopFillZerobss+0xe>
 800140c:	f7ff ffea 	bl	80013e4 <SystemInit>
 8001410:	480c      	ldr	r0, [pc, #48]	@ (8001444 <LoopFillZerobss+0x12>)
 8001412:	490d      	ldr	r1, [pc, #52]	@ (8001448 <LoopFillZerobss+0x16>)
 8001414:	4a0d      	ldr	r2, [pc, #52]	@ (800144c <LoopFillZerobss+0x1a>)
 8001416:	2300      	movs	r3, #0
 8001418:	e002      	b.n	8001420 <LoopCopyDataInit>

0800141a <CopyDataInit>:
 800141a:	58d4      	ldr	r4, [r2, r3]
 800141c:	50c4      	str	r4, [r0, r3]
 800141e:	3304      	adds	r3, #4

08001420 <LoopCopyDataInit>:
 8001420:	18c4      	adds	r4, r0, r3
 8001422:	428c      	cmp	r4, r1
 8001424:	d3f9      	bcc.n	800141a <CopyDataInit>
 8001426:	4a0a      	ldr	r2, [pc, #40]	@ (8001450 <LoopFillZerobss+0x1e>)
 8001428:	4c0a      	ldr	r4, [pc, #40]	@ (8001454 <LoopFillZerobss+0x22>)
 800142a:	2300      	movs	r3, #0
 800142c:	e001      	b.n	8001432 <LoopFillZerobss>

0800142e <FillZerobss>:
 800142e:	6013      	str	r3, [r2, #0]
 8001430:	3204      	adds	r2, #4

08001432 <LoopFillZerobss>:
 8001432:	42a2      	cmp	r2, r4
 8001434:	d3fb      	bcc.n	800142e <FillZerobss>
 8001436:	f001 fe9f 	bl	8003178 <__libc_init_array>
 800143a:	f7ff f85b 	bl	80004f4 <main>
 800143e:	4770      	bx	lr
 8001440:	20020000 	.word	0x20020000
 8001444:	20000000 	.word	0x20000000
 8001448:	2000001c 	.word	0x2000001c
 800144c:	080052e8 	.word	0x080052e8
 8001450:	2000001c 	.word	0x2000001c
 8001454:	20000498 	.word	0x20000498

08001458 <ADC_IRQHandler>:
 8001458:	e7fe      	b.n	8001458 <ADC_IRQHandler>
	...

0800145c <HAL_Init>:
 800145c:	b580      	push	{r7, lr}
 800145e:	af00      	add	r7, sp, #0
 8001460:	4b0e      	ldr	r3, [pc, #56]	@ (800149c <HAL_Init+0x40>)
 8001462:	681b      	ldr	r3, [r3, #0]
 8001464:	4a0d      	ldr	r2, [pc, #52]	@ (800149c <HAL_Init+0x40>)
 8001466:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800146a:	6013      	str	r3, [r2, #0]
 800146c:	4b0b      	ldr	r3, [pc, #44]	@ (800149c <HAL_Init+0x40>)
 800146e:	681b      	ldr	r3, [r3, #0]
 8001470:	4a0a      	ldr	r2, [pc, #40]	@ (800149c <HAL_Init+0x40>)
 8001472:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001476:	6013      	str	r3, [r2, #0]
 8001478:	4b08      	ldr	r3, [pc, #32]	@ (800149c <HAL_Init+0x40>)
 800147a:	681b      	ldr	r3, [r3, #0]
 800147c:	4a07      	ldr	r2, [pc, #28]	@ (800149c <HAL_Init+0x40>)
 800147e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001482:	6013      	str	r3, [r2, #0]
 8001484:	2003      	movs	r0, #3
 8001486:	f000 f931 	bl	80016ec <HAL_NVIC_SetPriorityGrouping>
 800148a:	200f      	movs	r0, #15
 800148c:	f000 f808 	bl	80014a0 <HAL_InitTick>
 8001490:	f7ff ff08 	bl	80012a4 <HAL_MspInit>
 8001494:	2300      	movs	r3, #0
 8001496:	4618      	mov	r0, r3
 8001498:	bd80      	pop	{r7, pc}
 800149a:	bf00      	nop
 800149c:	40023c00 	.word	0x40023c00

080014a0 <HAL_InitTick>:
 80014a0:	b580      	push	{r7, lr}
 80014a2:	b082      	sub	sp, #8
 80014a4:	af00      	add	r7, sp, #0
 80014a6:	6078      	str	r0, [r7, #4]
 80014a8:	4b12      	ldr	r3, [pc, #72]	@ (80014f4 <HAL_InitTick+0x54>)
 80014aa:	681a      	ldr	r2, [r3, #0]
 80014ac:	4b12      	ldr	r3, [pc, #72]	@ (80014f8 <HAL_InitTick+0x58>)
 80014ae:	781b      	ldrb	r3, [r3, #0]
 80014b0:	4619      	mov	r1, r3
 80014b2:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80014b6:	fbb3 f3f1 	udiv	r3, r3, r1
 80014ba:	fbb2 f3f3 	udiv	r3, r2, r3
 80014be:	4618      	mov	r0, r3
 80014c0:	f000 f93b 	bl	800173a <HAL_SYSTICK_Config>
 80014c4:	4603      	mov	r3, r0
 80014c6:	2b00      	cmp	r3, #0
 80014c8:	d001      	beq.n	80014ce <HAL_InitTick+0x2e>
 80014ca:	2301      	movs	r3, #1
 80014cc:	e00e      	b.n	80014ec <HAL_InitTick+0x4c>
 80014ce:	687b      	ldr	r3, [r7, #4]
 80014d0:	2b0f      	cmp	r3, #15
 80014d2:	d80a      	bhi.n	80014ea <HAL_InitTick+0x4a>
 80014d4:	2200      	movs	r2, #0
 80014d6:	6879      	ldr	r1, [r7, #4]
 80014d8:	f04f 30ff 	mov.w	r0, #4294967295
 80014dc:	f000 f911 	bl	8001702 <HAL_NVIC_SetPriority>
 80014e0:	4a06      	ldr	r2, [pc, #24]	@ (80014fc <HAL_InitTick+0x5c>)
 80014e2:	687b      	ldr	r3, [r7, #4]
 80014e4:	6013      	str	r3, [r2, #0]
 80014e6:	2300      	movs	r3, #0
 80014e8:	e000      	b.n	80014ec <HAL_InitTick+0x4c>
 80014ea:	2301      	movs	r3, #1
 80014ec:	4618      	mov	r0, r3
 80014ee:	3708      	adds	r7, #8
 80014f0:	46bd      	mov	sp, r7
 80014f2:	bd80      	pop	{r7, pc}
 80014f4:	20000010 	.word	0x20000010
 80014f8:	20000018 	.word	0x20000018
 80014fc:	20000014 	.word	0x20000014

08001500 <HAL_IncTick>:
 8001500:	b480      	push	{r7}
 8001502:	af00      	add	r7, sp, #0
 8001504:	4b06      	ldr	r3, [pc, #24]	@ (8001520 <HAL_IncTick+0x20>)
 8001506:	781b      	ldrb	r3, [r3, #0]
 8001508:	461a      	mov	r2, r3
 800150a:	4b06      	ldr	r3, [pc, #24]	@ (8001524 <HAL_IncTick+0x24>)
 800150c:	681b      	ldr	r3, [r3, #0]
 800150e:	4413      	add	r3, r2
 8001510:	4a04      	ldr	r2, [pc, #16]	@ (8001524 <HAL_IncTick+0x24>)
 8001512:	6013      	str	r3, [r2, #0]
 8001514:	bf00      	nop
 8001516:	46bd      	mov	sp, r7
 8001518:	f85d 7b04 	ldr.w	r7, [sp], #4
 800151c:	4770      	bx	lr
 800151e:	bf00      	nop
 8001520:	20000018 	.word	0x20000018
 8001524:	20000494 	.word	0x20000494

08001528 <HAL_GetTick>:
 8001528:	b480      	push	{r7}
 800152a:	af00      	add	r7, sp, #0
 800152c:	4b03      	ldr	r3, [pc, #12]	@ (800153c <HAL_GetTick+0x14>)
 800152e:	681b      	ldr	r3, [r3, #0]
 8001530:	4618      	mov	r0, r3
 8001532:	46bd      	mov	sp, r7
 8001534:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001538:	4770      	bx	lr
 800153a:	bf00      	nop
 800153c:	20000494 	.word	0x20000494

08001540 <HAL_Delay>:
 8001540:	b580      	push	{r7, lr}
 8001542:	b084      	sub	sp, #16
 8001544:	af00      	add	r7, sp, #0
 8001546:	6078      	str	r0, [r7, #4]
 8001548:	f7ff ffee 	bl	8001528 <HAL_GetTick>
 800154c:	60b8      	str	r0, [r7, #8]
 800154e:	687b      	ldr	r3, [r7, #4]
 8001550:	60fb      	str	r3, [r7, #12]
 8001552:	68fb      	ldr	r3, [r7, #12]
 8001554:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001558:	d005      	beq.n	8001566 <HAL_Delay+0x26>
 800155a:	4b0a      	ldr	r3, [pc, #40]	@ (8001584 <HAL_Delay+0x44>)
 800155c:	781b      	ldrb	r3, [r3, #0]
 800155e:	461a      	mov	r2, r3
 8001560:	68fb      	ldr	r3, [r7, #12]
 8001562:	4413      	add	r3, r2
 8001564:	60fb      	str	r3, [r7, #12]
 8001566:	bf00      	nop
 8001568:	f7ff ffde 	bl	8001528 <HAL_GetTick>
 800156c:	4602      	mov	r2, r0
 800156e:	68bb      	ldr	r3, [r7, #8]
 8001570:	1ad3      	subs	r3, r2, r3
 8001572:	68fa      	ldr	r2, [r7, #12]
 8001574:	429a      	cmp	r2, r3
 8001576:	d8f7      	bhi.n	8001568 <HAL_Delay+0x28>
 8001578:	bf00      	nop
 800157a:	bf00      	nop
 800157c:	3710      	adds	r7, #16
 800157e:	46bd      	mov	sp, r7
 8001580:	bd80      	pop	{r7, pc}
 8001582:	bf00      	nop
 8001584:	20000018 	.word	0x20000018

08001588 <__NVIC_SetPriorityGrouping>:
 8001588:	b480      	push	{r7}
 800158a:	b085      	sub	sp, #20
 800158c:	af00      	add	r7, sp, #0
 800158e:	6078      	str	r0, [r7, #4]
 8001590:	687b      	ldr	r3, [r7, #4]
 8001592:	f003 0307 	and.w	r3, r3, #7
 8001596:	60fb      	str	r3, [r7, #12]
 8001598:	4b0c      	ldr	r3, [pc, #48]	@ (80015cc <__NVIC_SetPriorityGrouping+0x44>)
 800159a:	68db      	ldr	r3, [r3, #12]
 800159c:	60bb      	str	r3, [r7, #8]
 800159e:	68ba      	ldr	r2, [r7, #8]
 80015a0:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80015a4:	4013      	ands	r3, r2
 80015a6:	60bb      	str	r3, [r7, #8]
 80015a8:	68fb      	ldr	r3, [r7, #12]
 80015aa:	021a      	lsls	r2, r3, #8
 80015ac:	68bb      	ldr	r3, [r7, #8]
 80015ae:	4313      	orrs	r3, r2
 80015b0:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80015b4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80015b8:	60bb      	str	r3, [r7, #8]
 80015ba:	4a04      	ldr	r2, [pc, #16]	@ (80015cc <__NVIC_SetPriorityGrouping+0x44>)
 80015bc:	68bb      	ldr	r3, [r7, #8]
 80015be:	60d3      	str	r3, [r2, #12]
 80015c0:	bf00      	nop
 80015c2:	3714      	adds	r7, #20
 80015c4:	46bd      	mov	sp, r7
 80015c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015ca:	4770      	bx	lr
 80015cc:	e000ed00 	.word	0xe000ed00

080015d0 <__NVIC_GetPriorityGrouping>:
 80015d0:	b480      	push	{r7}
 80015d2:	af00      	add	r7, sp, #0
 80015d4:	4b04      	ldr	r3, [pc, #16]	@ (80015e8 <__NVIC_GetPriorityGrouping+0x18>)
 80015d6:	68db      	ldr	r3, [r3, #12]
 80015d8:	0a1b      	lsrs	r3, r3, #8
 80015da:	f003 0307 	and.w	r3, r3, #7
 80015de:	4618      	mov	r0, r3
 80015e0:	46bd      	mov	sp, r7
 80015e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015e6:	4770      	bx	lr
 80015e8:	e000ed00 	.word	0xe000ed00

080015ec <__NVIC_SetPriority>:
 80015ec:	b480      	push	{r7}
 80015ee:	b083      	sub	sp, #12
 80015f0:	af00      	add	r7, sp, #0
 80015f2:	4603      	mov	r3, r0
 80015f4:	6039      	str	r1, [r7, #0]
 80015f6:	71fb      	strb	r3, [r7, #7]
 80015f8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80015fc:	2b00      	cmp	r3, #0
 80015fe:	db0a      	blt.n	8001616 <__NVIC_SetPriority+0x2a>
 8001600:	683b      	ldr	r3, [r7, #0]
 8001602:	b2da      	uxtb	r2, r3
 8001604:	490c      	ldr	r1, [pc, #48]	@ (8001638 <__NVIC_SetPriority+0x4c>)
 8001606:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800160a:	0112      	lsls	r2, r2, #4
 800160c:	b2d2      	uxtb	r2, r2
 800160e:	440b      	add	r3, r1
 8001610:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001614:	e00a      	b.n	800162c <__NVIC_SetPriority+0x40>
 8001616:	683b      	ldr	r3, [r7, #0]
 8001618:	b2da      	uxtb	r2, r3
 800161a:	4908      	ldr	r1, [pc, #32]	@ (800163c <__NVIC_SetPriority+0x50>)
 800161c:	79fb      	ldrb	r3, [r7, #7]
 800161e:	f003 030f 	and.w	r3, r3, #15
 8001622:	3b04      	subs	r3, #4
 8001624:	0112      	lsls	r2, r2, #4
 8001626:	b2d2      	uxtb	r2, r2
 8001628:	440b      	add	r3, r1
 800162a:	761a      	strb	r2, [r3, #24]
 800162c:	bf00      	nop
 800162e:	370c      	adds	r7, #12
 8001630:	46bd      	mov	sp, r7
 8001632:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001636:	4770      	bx	lr
 8001638:	e000e100 	.word	0xe000e100
 800163c:	e000ed00 	.word	0xe000ed00

08001640 <NVIC_EncodePriority>:
 8001640:	b480      	push	{r7}
 8001642:	b089      	sub	sp, #36	@ 0x24
 8001644:	af00      	add	r7, sp, #0
 8001646:	60f8      	str	r0, [r7, #12]
 8001648:	60b9      	str	r1, [r7, #8]
 800164a:	607a      	str	r2, [r7, #4]
 800164c:	68fb      	ldr	r3, [r7, #12]
 800164e:	f003 0307 	and.w	r3, r3, #7
 8001652:	61fb      	str	r3, [r7, #28]
 8001654:	69fb      	ldr	r3, [r7, #28]
 8001656:	f1c3 0307 	rsb	r3, r3, #7
 800165a:	2b04      	cmp	r3, #4
 800165c:	bf28      	it	cs
 800165e:	2304      	movcs	r3, #4
 8001660:	61bb      	str	r3, [r7, #24]
 8001662:	69fb      	ldr	r3, [r7, #28]
 8001664:	3304      	adds	r3, #4
 8001666:	2b06      	cmp	r3, #6
 8001668:	d902      	bls.n	8001670 <NVIC_EncodePriority+0x30>
 800166a:	69fb      	ldr	r3, [r7, #28]
 800166c:	3b03      	subs	r3, #3
 800166e:	e000      	b.n	8001672 <NVIC_EncodePriority+0x32>
 8001670:	2300      	movs	r3, #0
 8001672:	617b      	str	r3, [r7, #20]
 8001674:	f04f 32ff 	mov.w	r2, #4294967295
 8001678:	69bb      	ldr	r3, [r7, #24]
 800167a:	fa02 f303 	lsl.w	r3, r2, r3
 800167e:	43da      	mvns	r2, r3
 8001680:	68bb      	ldr	r3, [r7, #8]
 8001682:	401a      	ands	r2, r3
 8001684:	697b      	ldr	r3, [r7, #20]
 8001686:	409a      	lsls	r2, r3
 8001688:	f04f 31ff 	mov.w	r1, #4294967295
 800168c:	697b      	ldr	r3, [r7, #20]
 800168e:	fa01 f303 	lsl.w	r3, r1, r3
 8001692:	43d9      	mvns	r1, r3
 8001694:	687b      	ldr	r3, [r7, #4]
 8001696:	400b      	ands	r3, r1
 8001698:	4313      	orrs	r3, r2
 800169a:	4618      	mov	r0, r3
 800169c:	3724      	adds	r7, #36	@ 0x24
 800169e:	46bd      	mov	sp, r7
 80016a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016a4:	4770      	bx	lr
	...

080016a8 <SysTick_Config>:
 80016a8:	b580      	push	{r7, lr}
 80016aa:	b082      	sub	sp, #8
 80016ac:	af00      	add	r7, sp, #0
 80016ae:	6078      	str	r0, [r7, #4]
 80016b0:	687b      	ldr	r3, [r7, #4]
 80016b2:	3b01      	subs	r3, #1
 80016b4:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80016b8:	d301      	bcc.n	80016be <SysTick_Config+0x16>
 80016ba:	2301      	movs	r3, #1
 80016bc:	e00f      	b.n	80016de <SysTick_Config+0x36>
 80016be:	4a0a      	ldr	r2, [pc, #40]	@ (80016e8 <SysTick_Config+0x40>)
 80016c0:	687b      	ldr	r3, [r7, #4]
 80016c2:	3b01      	subs	r3, #1
 80016c4:	6053      	str	r3, [r2, #4]
 80016c6:	210f      	movs	r1, #15
 80016c8:	f04f 30ff 	mov.w	r0, #4294967295
 80016cc:	f7ff ff8e 	bl	80015ec <__NVIC_SetPriority>
 80016d0:	4b05      	ldr	r3, [pc, #20]	@ (80016e8 <SysTick_Config+0x40>)
 80016d2:	2200      	movs	r2, #0
 80016d4:	609a      	str	r2, [r3, #8]
 80016d6:	4b04      	ldr	r3, [pc, #16]	@ (80016e8 <SysTick_Config+0x40>)
 80016d8:	2207      	movs	r2, #7
 80016da:	601a      	str	r2, [r3, #0]
 80016dc:	2300      	movs	r3, #0
 80016de:	4618      	mov	r0, r3
 80016e0:	3708      	adds	r7, #8
 80016e2:	46bd      	mov	sp, r7
 80016e4:	bd80      	pop	{r7, pc}
 80016e6:	bf00      	nop
 80016e8:	e000e010 	.word	0xe000e010

080016ec <HAL_NVIC_SetPriorityGrouping>:
 80016ec:	b580      	push	{r7, lr}
 80016ee:	b082      	sub	sp, #8
 80016f0:	af00      	add	r7, sp, #0
 80016f2:	6078      	str	r0, [r7, #4]
 80016f4:	6878      	ldr	r0, [r7, #4]
 80016f6:	f7ff ff47 	bl	8001588 <__NVIC_SetPriorityGrouping>
 80016fa:	bf00      	nop
 80016fc:	3708      	adds	r7, #8
 80016fe:	46bd      	mov	sp, r7
 8001700:	bd80      	pop	{r7, pc}

08001702 <HAL_NVIC_SetPriority>:
 8001702:	b580      	push	{r7, lr}
 8001704:	b086      	sub	sp, #24
 8001706:	af00      	add	r7, sp, #0
 8001708:	4603      	mov	r3, r0
 800170a:	60b9      	str	r1, [r7, #8]
 800170c:	607a      	str	r2, [r7, #4]
 800170e:	73fb      	strb	r3, [r7, #15]
 8001710:	2300      	movs	r3, #0
 8001712:	617b      	str	r3, [r7, #20]
 8001714:	f7ff ff5c 	bl	80015d0 <__NVIC_GetPriorityGrouping>
 8001718:	6178      	str	r0, [r7, #20]
 800171a:	687a      	ldr	r2, [r7, #4]
 800171c:	68b9      	ldr	r1, [r7, #8]
 800171e:	6978      	ldr	r0, [r7, #20]
 8001720:	f7ff ff8e 	bl	8001640 <NVIC_EncodePriority>
 8001724:	4602      	mov	r2, r0
 8001726:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800172a:	4611      	mov	r1, r2
 800172c:	4618      	mov	r0, r3
 800172e:	f7ff ff5d 	bl	80015ec <__NVIC_SetPriority>
 8001732:	bf00      	nop
 8001734:	3718      	adds	r7, #24
 8001736:	46bd      	mov	sp, r7
 8001738:	bd80      	pop	{r7, pc}

0800173a <HAL_SYSTICK_Config>:
 800173a:	b580      	push	{r7, lr}
 800173c:	b082      	sub	sp, #8
 800173e:	af00      	add	r7, sp, #0
 8001740:	6078      	str	r0, [r7, #4]
 8001742:	6878      	ldr	r0, [r7, #4]
 8001744:	f7ff ffb0 	bl	80016a8 <SysTick_Config>
 8001748:	4603      	mov	r3, r0
 800174a:	4618      	mov	r0, r3
 800174c:	3708      	adds	r7, #8
 800174e:	46bd      	mov	sp, r7
 8001750:	bd80      	pop	{r7, pc}
	...

08001754 <HAL_GPIO_Init>:
 8001754:	b480      	push	{r7}
 8001756:	b089      	sub	sp, #36	@ 0x24
 8001758:	af00      	add	r7, sp, #0
 800175a:	6078      	str	r0, [r7, #4]
 800175c:	6039      	str	r1, [r7, #0]
 800175e:	2300      	movs	r3, #0
 8001760:	617b      	str	r3, [r7, #20]
 8001762:	2300      	movs	r3, #0
 8001764:	613b      	str	r3, [r7, #16]
 8001766:	2300      	movs	r3, #0
 8001768:	61bb      	str	r3, [r7, #24]
 800176a:	2300      	movs	r3, #0
 800176c:	61fb      	str	r3, [r7, #28]
 800176e:	e165      	b.n	8001a3c <HAL_GPIO_Init+0x2e8>
 8001770:	2201      	movs	r2, #1
 8001772:	69fb      	ldr	r3, [r7, #28]
 8001774:	fa02 f303 	lsl.w	r3, r2, r3
 8001778:	617b      	str	r3, [r7, #20]
 800177a:	683b      	ldr	r3, [r7, #0]
 800177c:	681b      	ldr	r3, [r3, #0]
 800177e:	697a      	ldr	r2, [r7, #20]
 8001780:	4013      	ands	r3, r2
 8001782:	613b      	str	r3, [r7, #16]
 8001784:	693a      	ldr	r2, [r7, #16]
 8001786:	697b      	ldr	r3, [r7, #20]
 8001788:	429a      	cmp	r2, r3
 800178a:	f040 8154 	bne.w	8001a36 <HAL_GPIO_Init+0x2e2>
 800178e:	683b      	ldr	r3, [r7, #0]
 8001790:	685b      	ldr	r3, [r3, #4]
 8001792:	f003 0303 	and.w	r3, r3, #3
 8001796:	2b01      	cmp	r3, #1
 8001798:	d005      	beq.n	80017a6 <HAL_GPIO_Init+0x52>
 800179a:	683b      	ldr	r3, [r7, #0]
 800179c:	685b      	ldr	r3, [r3, #4]
 800179e:	f003 0303 	and.w	r3, r3, #3
 80017a2:	2b02      	cmp	r3, #2
 80017a4:	d130      	bne.n	8001808 <HAL_GPIO_Init+0xb4>
 80017a6:	687b      	ldr	r3, [r7, #4]
 80017a8:	689b      	ldr	r3, [r3, #8]
 80017aa:	61bb      	str	r3, [r7, #24]
 80017ac:	69fb      	ldr	r3, [r7, #28]
 80017ae:	005b      	lsls	r3, r3, #1
 80017b0:	2203      	movs	r2, #3
 80017b2:	fa02 f303 	lsl.w	r3, r2, r3
 80017b6:	43db      	mvns	r3, r3
 80017b8:	69ba      	ldr	r2, [r7, #24]
 80017ba:	4013      	ands	r3, r2
 80017bc:	61bb      	str	r3, [r7, #24]
 80017be:	683b      	ldr	r3, [r7, #0]
 80017c0:	68da      	ldr	r2, [r3, #12]
 80017c2:	69fb      	ldr	r3, [r7, #28]
 80017c4:	005b      	lsls	r3, r3, #1
 80017c6:	fa02 f303 	lsl.w	r3, r2, r3
 80017ca:	69ba      	ldr	r2, [r7, #24]
 80017cc:	4313      	orrs	r3, r2
 80017ce:	61bb      	str	r3, [r7, #24]
 80017d0:	687b      	ldr	r3, [r7, #4]
 80017d2:	69ba      	ldr	r2, [r7, #24]
 80017d4:	609a      	str	r2, [r3, #8]
 80017d6:	687b      	ldr	r3, [r7, #4]
 80017d8:	685b      	ldr	r3, [r3, #4]
 80017da:	61bb      	str	r3, [r7, #24]
 80017dc:	2201      	movs	r2, #1
 80017de:	69fb      	ldr	r3, [r7, #28]
 80017e0:	fa02 f303 	lsl.w	r3, r2, r3
 80017e4:	43db      	mvns	r3, r3
 80017e6:	69ba      	ldr	r2, [r7, #24]
 80017e8:	4013      	ands	r3, r2
 80017ea:	61bb      	str	r3, [r7, #24]
 80017ec:	683b      	ldr	r3, [r7, #0]
 80017ee:	685b      	ldr	r3, [r3, #4]
 80017f0:	091b      	lsrs	r3, r3, #4
 80017f2:	f003 0201 	and.w	r2, r3, #1
 80017f6:	69fb      	ldr	r3, [r7, #28]
 80017f8:	fa02 f303 	lsl.w	r3, r2, r3
 80017fc:	69ba      	ldr	r2, [r7, #24]
 80017fe:	4313      	orrs	r3, r2
 8001800:	61bb      	str	r3, [r7, #24]
 8001802:	687b      	ldr	r3, [r7, #4]
 8001804:	69ba      	ldr	r2, [r7, #24]
 8001806:	605a      	str	r2, [r3, #4]
 8001808:	683b      	ldr	r3, [r7, #0]
 800180a:	685b      	ldr	r3, [r3, #4]
 800180c:	f003 0303 	and.w	r3, r3, #3
 8001810:	2b03      	cmp	r3, #3
 8001812:	d017      	beq.n	8001844 <HAL_GPIO_Init+0xf0>
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	68db      	ldr	r3, [r3, #12]
 8001818:	61bb      	str	r3, [r7, #24]
 800181a:	69fb      	ldr	r3, [r7, #28]
 800181c:	005b      	lsls	r3, r3, #1
 800181e:	2203      	movs	r2, #3
 8001820:	fa02 f303 	lsl.w	r3, r2, r3
 8001824:	43db      	mvns	r3, r3
 8001826:	69ba      	ldr	r2, [r7, #24]
 8001828:	4013      	ands	r3, r2
 800182a:	61bb      	str	r3, [r7, #24]
 800182c:	683b      	ldr	r3, [r7, #0]
 800182e:	689a      	ldr	r2, [r3, #8]
 8001830:	69fb      	ldr	r3, [r7, #28]
 8001832:	005b      	lsls	r3, r3, #1
 8001834:	fa02 f303 	lsl.w	r3, r2, r3
 8001838:	69ba      	ldr	r2, [r7, #24]
 800183a:	4313      	orrs	r3, r2
 800183c:	61bb      	str	r3, [r7, #24]
 800183e:	687b      	ldr	r3, [r7, #4]
 8001840:	69ba      	ldr	r2, [r7, #24]
 8001842:	60da      	str	r2, [r3, #12]
 8001844:	683b      	ldr	r3, [r7, #0]
 8001846:	685b      	ldr	r3, [r3, #4]
 8001848:	f003 0303 	and.w	r3, r3, #3
 800184c:	2b02      	cmp	r3, #2
 800184e:	d123      	bne.n	8001898 <HAL_GPIO_Init+0x144>
 8001850:	69fb      	ldr	r3, [r7, #28]
 8001852:	08da      	lsrs	r2, r3, #3
 8001854:	687b      	ldr	r3, [r7, #4]
 8001856:	3208      	adds	r2, #8
 8001858:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800185c:	61bb      	str	r3, [r7, #24]
 800185e:	69fb      	ldr	r3, [r7, #28]
 8001860:	f003 0307 	and.w	r3, r3, #7
 8001864:	009b      	lsls	r3, r3, #2
 8001866:	220f      	movs	r2, #15
 8001868:	fa02 f303 	lsl.w	r3, r2, r3
 800186c:	43db      	mvns	r3, r3
 800186e:	69ba      	ldr	r2, [r7, #24]
 8001870:	4013      	ands	r3, r2
 8001872:	61bb      	str	r3, [r7, #24]
 8001874:	683b      	ldr	r3, [r7, #0]
 8001876:	691a      	ldr	r2, [r3, #16]
 8001878:	69fb      	ldr	r3, [r7, #28]
 800187a:	f003 0307 	and.w	r3, r3, #7
 800187e:	009b      	lsls	r3, r3, #2
 8001880:	fa02 f303 	lsl.w	r3, r2, r3
 8001884:	69ba      	ldr	r2, [r7, #24]
 8001886:	4313      	orrs	r3, r2
 8001888:	61bb      	str	r3, [r7, #24]
 800188a:	69fb      	ldr	r3, [r7, #28]
 800188c:	08da      	lsrs	r2, r3, #3
 800188e:	687b      	ldr	r3, [r7, #4]
 8001890:	3208      	adds	r2, #8
 8001892:	69b9      	ldr	r1, [r7, #24]
 8001894:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001898:	687b      	ldr	r3, [r7, #4]
 800189a:	681b      	ldr	r3, [r3, #0]
 800189c:	61bb      	str	r3, [r7, #24]
 800189e:	69fb      	ldr	r3, [r7, #28]
 80018a0:	005b      	lsls	r3, r3, #1
 80018a2:	2203      	movs	r2, #3
 80018a4:	fa02 f303 	lsl.w	r3, r2, r3
 80018a8:	43db      	mvns	r3, r3
 80018aa:	69ba      	ldr	r2, [r7, #24]
 80018ac:	4013      	ands	r3, r2
 80018ae:	61bb      	str	r3, [r7, #24]
 80018b0:	683b      	ldr	r3, [r7, #0]
 80018b2:	685b      	ldr	r3, [r3, #4]
 80018b4:	f003 0203 	and.w	r2, r3, #3
 80018b8:	69fb      	ldr	r3, [r7, #28]
 80018ba:	005b      	lsls	r3, r3, #1
 80018bc:	fa02 f303 	lsl.w	r3, r2, r3
 80018c0:	69ba      	ldr	r2, [r7, #24]
 80018c2:	4313      	orrs	r3, r2
 80018c4:	61bb      	str	r3, [r7, #24]
 80018c6:	687b      	ldr	r3, [r7, #4]
 80018c8:	69ba      	ldr	r2, [r7, #24]
 80018ca:	601a      	str	r2, [r3, #0]
 80018cc:	683b      	ldr	r3, [r7, #0]
 80018ce:	685b      	ldr	r3, [r3, #4]
 80018d0:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80018d4:	2b00      	cmp	r3, #0
 80018d6:	f000 80ae 	beq.w	8001a36 <HAL_GPIO_Init+0x2e2>
 80018da:	2300      	movs	r3, #0
 80018dc:	60fb      	str	r3, [r7, #12]
 80018de:	4b5d      	ldr	r3, [pc, #372]	@ (8001a54 <HAL_GPIO_Init+0x300>)
 80018e0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80018e2:	4a5c      	ldr	r2, [pc, #368]	@ (8001a54 <HAL_GPIO_Init+0x300>)
 80018e4:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80018e8:	6453      	str	r3, [r2, #68]	@ 0x44
 80018ea:	4b5a      	ldr	r3, [pc, #360]	@ (8001a54 <HAL_GPIO_Init+0x300>)
 80018ec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80018ee:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80018f2:	60fb      	str	r3, [r7, #12]
 80018f4:	68fb      	ldr	r3, [r7, #12]
 80018f6:	4a58      	ldr	r2, [pc, #352]	@ (8001a58 <HAL_GPIO_Init+0x304>)
 80018f8:	69fb      	ldr	r3, [r7, #28]
 80018fa:	089b      	lsrs	r3, r3, #2
 80018fc:	3302      	adds	r3, #2
 80018fe:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001902:	61bb      	str	r3, [r7, #24]
 8001904:	69fb      	ldr	r3, [r7, #28]
 8001906:	f003 0303 	and.w	r3, r3, #3
 800190a:	009b      	lsls	r3, r3, #2
 800190c:	220f      	movs	r2, #15
 800190e:	fa02 f303 	lsl.w	r3, r2, r3
 8001912:	43db      	mvns	r3, r3
 8001914:	69ba      	ldr	r2, [r7, #24]
 8001916:	4013      	ands	r3, r2
 8001918:	61bb      	str	r3, [r7, #24]
 800191a:	687b      	ldr	r3, [r7, #4]
 800191c:	4a4f      	ldr	r2, [pc, #316]	@ (8001a5c <HAL_GPIO_Init+0x308>)
 800191e:	4293      	cmp	r3, r2
 8001920:	d025      	beq.n	800196e <HAL_GPIO_Init+0x21a>
 8001922:	687b      	ldr	r3, [r7, #4]
 8001924:	4a4e      	ldr	r2, [pc, #312]	@ (8001a60 <HAL_GPIO_Init+0x30c>)
 8001926:	4293      	cmp	r3, r2
 8001928:	d01f      	beq.n	800196a <HAL_GPIO_Init+0x216>
 800192a:	687b      	ldr	r3, [r7, #4]
 800192c:	4a4d      	ldr	r2, [pc, #308]	@ (8001a64 <HAL_GPIO_Init+0x310>)
 800192e:	4293      	cmp	r3, r2
 8001930:	d019      	beq.n	8001966 <HAL_GPIO_Init+0x212>
 8001932:	687b      	ldr	r3, [r7, #4]
 8001934:	4a4c      	ldr	r2, [pc, #304]	@ (8001a68 <HAL_GPIO_Init+0x314>)
 8001936:	4293      	cmp	r3, r2
 8001938:	d013      	beq.n	8001962 <HAL_GPIO_Init+0x20e>
 800193a:	687b      	ldr	r3, [r7, #4]
 800193c:	4a4b      	ldr	r2, [pc, #300]	@ (8001a6c <HAL_GPIO_Init+0x318>)
 800193e:	4293      	cmp	r3, r2
 8001940:	d00d      	beq.n	800195e <HAL_GPIO_Init+0x20a>
 8001942:	687b      	ldr	r3, [r7, #4]
 8001944:	4a4a      	ldr	r2, [pc, #296]	@ (8001a70 <HAL_GPIO_Init+0x31c>)
 8001946:	4293      	cmp	r3, r2
 8001948:	d007      	beq.n	800195a <HAL_GPIO_Init+0x206>
 800194a:	687b      	ldr	r3, [r7, #4]
 800194c:	4a49      	ldr	r2, [pc, #292]	@ (8001a74 <HAL_GPIO_Init+0x320>)
 800194e:	4293      	cmp	r3, r2
 8001950:	d101      	bne.n	8001956 <HAL_GPIO_Init+0x202>
 8001952:	2306      	movs	r3, #6
 8001954:	e00c      	b.n	8001970 <HAL_GPIO_Init+0x21c>
 8001956:	2307      	movs	r3, #7
 8001958:	e00a      	b.n	8001970 <HAL_GPIO_Init+0x21c>
 800195a:	2305      	movs	r3, #5
 800195c:	e008      	b.n	8001970 <HAL_GPIO_Init+0x21c>
 800195e:	2304      	movs	r3, #4
 8001960:	e006      	b.n	8001970 <HAL_GPIO_Init+0x21c>
 8001962:	2303      	movs	r3, #3
 8001964:	e004      	b.n	8001970 <HAL_GPIO_Init+0x21c>
 8001966:	2302      	movs	r3, #2
 8001968:	e002      	b.n	8001970 <HAL_GPIO_Init+0x21c>
 800196a:	2301      	movs	r3, #1
 800196c:	e000      	b.n	8001970 <HAL_GPIO_Init+0x21c>
 800196e:	2300      	movs	r3, #0
 8001970:	69fa      	ldr	r2, [r7, #28]
 8001972:	f002 0203 	and.w	r2, r2, #3
 8001976:	0092      	lsls	r2, r2, #2
 8001978:	4093      	lsls	r3, r2
 800197a:	69ba      	ldr	r2, [r7, #24]
 800197c:	4313      	orrs	r3, r2
 800197e:	61bb      	str	r3, [r7, #24]
 8001980:	4935      	ldr	r1, [pc, #212]	@ (8001a58 <HAL_GPIO_Init+0x304>)
 8001982:	69fb      	ldr	r3, [r7, #28]
 8001984:	089b      	lsrs	r3, r3, #2
 8001986:	3302      	adds	r3, #2
 8001988:	69ba      	ldr	r2, [r7, #24]
 800198a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800198e:	4b3a      	ldr	r3, [pc, #232]	@ (8001a78 <HAL_GPIO_Init+0x324>)
 8001990:	689b      	ldr	r3, [r3, #8]
 8001992:	61bb      	str	r3, [r7, #24]
 8001994:	693b      	ldr	r3, [r7, #16]
 8001996:	43db      	mvns	r3, r3
 8001998:	69ba      	ldr	r2, [r7, #24]
 800199a:	4013      	ands	r3, r2
 800199c:	61bb      	str	r3, [r7, #24]
 800199e:	683b      	ldr	r3, [r7, #0]
 80019a0:	685b      	ldr	r3, [r3, #4]
 80019a2:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80019a6:	2b00      	cmp	r3, #0
 80019a8:	d003      	beq.n	80019b2 <HAL_GPIO_Init+0x25e>
 80019aa:	69ba      	ldr	r2, [r7, #24]
 80019ac:	693b      	ldr	r3, [r7, #16]
 80019ae:	4313      	orrs	r3, r2
 80019b0:	61bb      	str	r3, [r7, #24]
 80019b2:	4a31      	ldr	r2, [pc, #196]	@ (8001a78 <HAL_GPIO_Init+0x324>)
 80019b4:	69bb      	ldr	r3, [r7, #24]
 80019b6:	6093      	str	r3, [r2, #8]
 80019b8:	4b2f      	ldr	r3, [pc, #188]	@ (8001a78 <HAL_GPIO_Init+0x324>)
 80019ba:	68db      	ldr	r3, [r3, #12]
 80019bc:	61bb      	str	r3, [r7, #24]
 80019be:	693b      	ldr	r3, [r7, #16]
 80019c0:	43db      	mvns	r3, r3
 80019c2:	69ba      	ldr	r2, [r7, #24]
 80019c4:	4013      	ands	r3, r2
 80019c6:	61bb      	str	r3, [r7, #24]
 80019c8:	683b      	ldr	r3, [r7, #0]
 80019ca:	685b      	ldr	r3, [r3, #4]
 80019cc:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80019d0:	2b00      	cmp	r3, #0
 80019d2:	d003      	beq.n	80019dc <HAL_GPIO_Init+0x288>
 80019d4:	69ba      	ldr	r2, [r7, #24]
 80019d6:	693b      	ldr	r3, [r7, #16]
 80019d8:	4313      	orrs	r3, r2
 80019da:	61bb      	str	r3, [r7, #24]
 80019dc:	4a26      	ldr	r2, [pc, #152]	@ (8001a78 <HAL_GPIO_Init+0x324>)
 80019de:	69bb      	ldr	r3, [r7, #24]
 80019e0:	60d3      	str	r3, [r2, #12]
 80019e2:	4b25      	ldr	r3, [pc, #148]	@ (8001a78 <HAL_GPIO_Init+0x324>)
 80019e4:	685b      	ldr	r3, [r3, #4]
 80019e6:	61bb      	str	r3, [r7, #24]
 80019e8:	693b      	ldr	r3, [r7, #16]
 80019ea:	43db      	mvns	r3, r3
 80019ec:	69ba      	ldr	r2, [r7, #24]
 80019ee:	4013      	ands	r3, r2
 80019f0:	61bb      	str	r3, [r7, #24]
 80019f2:	683b      	ldr	r3, [r7, #0]
 80019f4:	685b      	ldr	r3, [r3, #4]
 80019f6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80019fa:	2b00      	cmp	r3, #0
 80019fc:	d003      	beq.n	8001a06 <HAL_GPIO_Init+0x2b2>
 80019fe:	69ba      	ldr	r2, [r7, #24]
 8001a00:	693b      	ldr	r3, [r7, #16]
 8001a02:	4313      	orrs	r3, r2
 8001a04:	61bb      	str	r3, [r7, #24]
 8001a06:	4a1c      	ldr	r2, [pc, #112]	@ (8001a78 <HAL_GPIO_Init+0x324>)
 8001a08:	69bb      	ldr	r3, [r7, #24]
 8001a0a:	6053      	str	r3, [r2, #4]
 8001a0c:	4b1a      	ldr	r3, [pc, #104]	@ (8001a78 <HAL_GPIO_Init+0x324>)
 8001a0e:	681b      	ldr	r3, [r3, #0]
 8001a10:	61bb      	str	r3, [r7, #24]
 8001a12:	693b      	ldr	r3, [r7, #16]
 8001a14:	43db      	mvns	r3, r3
 8001a16:	69ba      	ldr	r2, [r7, #24]
 8001a18:	4013      	ands	r3, r2
 8001a1a:	61bb      	str	r3, [r7, #24]
 8001a1c:	683b      	ldr	r3, [r7, #0]
 8001a1e:	685b      	ldr	r3, [r3, #4]
 8001a20:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001a24:	2b00      	cmp	r3, #0
 8001a26:	d003      	beq.n	8001a30 <HAL_GPIO_Init+0x2dc>
 8001a28:	69ba      	ldr	r2, [r7, #24]
 8001a2a:	693b      	ldr	r3, [r7, #16]
 8001a2c:	4313      	orrs	r3, r2
 8001a2e:	61bb      	str	r3, [r7, #24]
 8001a30:	4a11      	ldr	r2, [pc, #68]	@ (8001a78 <HAL_GPIO_Init+0x324>)
 8001a32:	69bb      	ldr	r3, [r7, #24]
 8001a34:	6013      	str	r3, [r2, #0]
 8001a36:	69fb      	ldr	r3, [r7, #28]
 8001a38:	3301      	adds	r3, #1
 8001a3a:	61fb      	str	r3, [r7, #28]
 8001a3c:	69fb      	ldr	r3, [r7, #28]
 8001a3e:	2b0f      	cmp	r3, #15
 8001a40:	f67f ae96 	bls.w	8001770 <HAL_GPIO_Init+0x1c>
 8001a44:	bf00      	nop
 8001a46:	bf00      	nop
 8001a48:	3724      	adds	r7, #36	@ 0x24
 8001a4a:	46bd      	mov	sp, r7
 8001a4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a50:	4770      	bx	lr
 8001a52:	bf00      	nop
 8001a54:	40023800 	.word	0x40023800
 8001a58:	40013800 	.word	0x40013800
 8001a5c:	40020000 	.word	0x40020000
 8001a60:	40020400 	.word	0x40020400
 8001a64:	40020800 	.word	0x40020800
 8001a68:	40020c00 	.word	0x40020c00
 8001a6c:	40021000 	.word	0x40021000
 8001a70:	40021400 	.word	0x40021400
 8001a74:	40021800 	.word	0x40021800
 8001a78:	40013c00 	.word	0x40013c00

08001a7c <HAL_I2C_Init>:
 8001a7c:	b580      	push	{r7, lr}
 8001a7e:	b084      	sub	sp, #16
 8001a80:	af00      	add	r7, sp, #0
 8001a82:	6078      	str	r0, [r7, #4]
 8001a84:	687b      	ldr	r3, [r7, #4]
 8001a86:	2b00      	cmp	r3, #0
 8001a88:	d101      	bne.n	8001a8e <HAL_I2C_Init+0x12>
 8001a8a:	2301      	movs	r3, #1
 8001a8c:	e12b      	b.n	8001ce6 <HAL_I2C_Init+0x26a>
 8001a8e:	687b      	ldr	r3, [r7, #4]
 8001a90:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8001a94:	b2db      	uxtb	r3, r3
 8001a96:	2b00      	cmp	r3, #0
 8001a98:	d106      	bne.n	8001aa8 <HAL_I2C_Init+0x2c>
 8001a9a:	687b      	ldr	r3, [r7, #4]
 8001a9c:	2200      	movs	r2, #0
 8001a9e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001aa2:	6878      	ldr	r0, [r7, #4]
 8001aa4:	f7ff fc26 	bl	80012f4 <HAL_I2C_MspInit>
 8001aa8:	687b      	ldr	r3, [r7, #4]
 8001aaa:	2224      	movs	r2, #36	@ 0x24
 8001aac:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001ab0:	687b      	ldr	r3, [r7, #4]
 8001ab2:	681b      	ldr	r3, [r3, #0]
 8001ab4:	681a      	ldr	r2, [r3, #0]
 8001ab6:	687b      	ldr	r3, [r7, #4]
 8001ab8:	681b      	ldr	r3, [r3, #0]
 8001aba:	f022 0201 	bic.w	r2, r2, #1
 8001abe:	601a      	str	r2, [r3, #0]
 8001ac0:	687b      	ldr	r3, [r7, #4]
 8001ac2:	681b      	ldr	r3, [r3, #0]
 8001ac4:	681a      	ldr	r2, [r3, #0]
 8001ac6:	687b      	ldr	r3, [r7, #4]
 8001ac8:	681b      	ldr	r3, [r3, #0]
 8001aca:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8001ace:	601a      	str	r2, [r3, #0]
 8001ad0:	687b      	ldr	r3, [r7, #4]
 8001ad2:	681b      	ldr	r3, [r3, #0]
 8001ad4:	681a      	ldr	r2, [r3, #0]
 8001ad6:	687b      	ldr	r3, [r7, #4]
 8001ad8:	681b      	ldr	r3, [r3, #0]
 8001ada:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8001ade:	601a      	str	r2, [r3, #0]
 8001ae0:	f000 fe8a 	bl	80027f8 <HAL_RCC_GetPCLK1Freq>
 8001ae4:	60f8      	str	r0, [r7, #12]
 8001ae6:	687b      	ldr	r3, [r7, #4]
 8001ae8:	685b      	ldr	r3, [r3, #4]
 8001aea:	4a81      	ldr	r2, [pc, #516]	@ (8001cf0 <HAL_I2C_Init+0x274>)
 8001aec:	4293      	cmp	r3, r2
 8001aee:	d807      	bhi.n	8001b00 <HAL_I2C_Init+0x84>
 8001af0:	68fb      	ldr	r3, [r7, #12]
 8001af2:	4a80      	ldr	r2, [pc, #512]	@ (8001cf4 <HAL_I2C_Init+0x278>)
 8001af4:	4293      	cmp	r3, r2
 8001af6:	bf94      	ite	ls
 8001af8:	2301      	movls	r3, #1
 8001afa:	2300      	movhi	r3, #0
 8001afc:	b2db      	uxtb	r3, r3
 8001afe:	e006      	b.n	8001b0e <HAL_I2C_Init+0x92>
 8001b00:	68fb      	ldr	r3, [r7, #12]
 8001b02:	4a7d      	ldr	r2, [pc, #500]	@ (8001cf8 <HAL_I2C_Init+0x27c>)
 8001b04:	4293      	cmp	r3, r2
 8001b06:	bf94      	ite	ls
 8001b08:	2301      	movls	r3, #1
 8001b0a:	2300      	movhi	r3, #0
 8001b0c:	b2db      	uxtb	r3, r3
 8001b0e:	2b00      	cmp	r3, #0
 8001b10:	d001      	beq.n	8001b16 <HAL_I2C_Init+0x9a>
 8001b12:	2301      	movs	r3, #1
 8001b14:	e0e7      	b.n	8001ce6 <HAL_I2C_Init+0x26a>
 8001b16:	68fb      	ldr	r3, [r7, #12]
 8001b18:	4a78      	ldr	r2, [pc, #480]	@ (8001cfc <HAL_I2C_Init+0x280>)
 8001b1a:	fba2 2303 	umull	r2, r3, r2, r3
 8001b1e:	0c9b      	lsrs	r3, r3, #18
 8001b20:	60bb      	str	r3, [r7, #8]
 8001b22:	687b      	ldr	r3, [r7, #4]
 8001b24:	681b      	ldr	r3, [r3, #0]
 8001b26:	685b      	ldr	r3, [r3, #4]
 8001b28:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8001b2c:	687b      	ldr	r3, [r7, #4]
 8001b2e:	681b      	ldr	r3, [r3, #0]
 8001b30:	68ba      	ldr	r2, [r7, #8]
 8001b32:	430a      	orrs	r2, r1
 8001b34:	605a      	str	r2, [r3, #4]
 8001b36:	687b      	ldr	r3, [r7, #4]
 8001b38:	681b      	ldr	r3, [r3, #0]
 8001b3a:	6a1b      	ldr	r3, [r3, #32]
 8001b3c:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8001b40:	687b      	ldr	r3, [r7, #4]
 8001b42:	685b      	ldr	r3, [r3, #4]
 8001b44:	4a6a      	ldr	r2, [pc, #424]	@ (8001cf0 <HAL_I2C_Init+0x274>)
 8001b46:	4293      	cmp	r3, r2
 8001b48:	d802      	bhi.n	8001b50 <HAL_I2C_Init+0xd4>
 8001b4a:	68bb      	ldr	r3, [r7, #8]
 8001b4c:	3301      	adds	r3, #1
 8001b4e:	e009      	b.n	8001b64 <HAL_I2C_Init+0xe8>
 8001b50:	68bb      	ldr	r3, [r7, #8]
 8001b52:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8001b56:	fb02 f303 	mul.w	r3, r2, r3
 8001b5a:	4a69      	ldr	r2, [pc, #420]	@ (8001d00 <HAL_I2C_Init+0x284>)
 8001b5c:	fba2 2303 	umull	r2, r3, r2, r3
 8001b60:	099b      	lsrs	r3, r3, #6
 8001b62:	3301      	adds	r3, #1
 8001b64:	687a      	ldr	r2, [r7, #4]
 8001b66:	6812      	ldr	r2, [r2, #0]
 8001b68:	430b      	orrs	r3, r1
 8001b6a:	6213      	str	r3, [r2, #32]
 8001b6c:	687b      	ldr	r3, [r7, #4]
 8001b6e:	681b      	ldr	r3, [r3, #0]
 8001b70:	69db      	ldr	r3, [r3, #28]
 8001b72:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 8001b76:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8001b7a:	687b      	ldr	r3, [r7, #4]
 8001b7c:	685b      	ldr	r3, [r3, #4]
 8001b7e:	495c      	ldr	r1, [pc, #368]	@ (8001cf0 <HAL_I2C_Init+0x274>)
 8001b80:	428b      	cmp	r3, r1
 8001b82:	d819      	bhi.n	8001bb8 <HAL_I2C_Init+0x13c>
 8001b84:	68fb      	ldr	r3, [r7, #12]
 8001b86:	1e59      	subs	r1, r3, #1
 8001b88:	687b      	ldr	r3, [r7, #4]
 8001b8a:	685b      	ldr	r3, [r3, #4]
 8001b8c:	005b      	lsls	r3, r3, #1
 8001b8e:	fbb1 f3f3 	udiv	r3, r1, r3
 8001b92:	1c59      	adds	r1, r3, #1
 8001b94:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8001b98:	400b      	ands	r3, r1
 8001b9a:	2b00      	cmp	r3, #0
 8001b9c:	d00a      	beq.n	8001bb4 <HAL_I2C_Init+0x138>
 8001b9e:	68fb      	ldr	r3, [r7, #12]
 8001ba0:	1e59      	subs	r1, r3, #1
 8001ba2:	687b      	ldr	r3, [r7, #4]
 8001ba4:	685b      	ldr	r3, [r3, #4]
 8001ba6:	005b      	lsls	r3, r3, #1
 8001ba8:	fbb1 f3f3 	udiv	r3, r1, r3
 8001bac:	3301      	adds	r3, #1
 8001bae:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001bb2:	e051      	b.n	8001c58 <HAL_I2C_Init+0x1dc>
 8001bb4:	2304      	movs	r3, #4
 8001bb6:	e04f      	b.n	8001c58 <HAL_I2C_Init+0x1dc>
 8001bb8:	687b      	ldr	r3, [r7, #4]
 8001bba:	689b      	ldr	r3, [r3, #8]
 8001bbc:	2b00      	cmp	r3, #0
 8001bbe:	d111      	bne.n	8001be4 <HAL_I2C_Init+0x168>
 8001bc0:	68fb      	ldr	r3, [r7, #12]
 8001bc2:	1e58      	subs	r0, r3, #1
 8001bc4:	687b      	ldr	r3, [r7, #4]
 8001bc6:	6859      	ldr	r1, [r3, #4]
 8001bc8:	460b      	mov	r3, r1
 8001bca:	005b      	lsls	r3, r3, #1
 8001bcc:	440b      	add	r3, r1
 8001bce:	fbb0 f3f3 	udiv	r3, r0, r3
 8001bd2:	3301      	adds	r3, #1
 8001bd4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001bd8:	2b00      	cmp	r3, #0
 8001bda:	bf0c      	ite	eq
 8001bdc:	2301      	moveq	r3, #1
 8001bde:	2300      	movne	r3, #0
 8001be0:	b2db      	uxtb	r3, r3
 8001be2:	e012      	b.n	8001c0a <HAL_I2C_Init+0x18e>
 8001be4:	68fb      	ldr	r3, [r7, #12]
 8001be6:	1e58      	subs	r0, r3, #1
 8001be8:	687b      	ldr	r3, [r7, #4]
 8001bea:	6859      	ldr	r1, [r3, #4]
 8001bec:	460b      	mov	r3, r1
 8001bee:	009b      	lsls	r3, r3, #2
 8001bf0:	440b      	add	r3, r1
 8001bf2:	0099      	lsls	r1, r3, #2
 8001bf4:	440b      	add	r3, r1
 8001bf6:	fbb0 f3f3 	udiv	r3, r0, r3
 8001bfa:	3301      	adds	r3, #1
 8001bfc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001c00:	2b00      	cmp	r3, #0
 8001c02:	bf0c      	ite	eq
 8001c04:	2301      	moveq	r3, #1
 8001c06:	2300      	movne	r3, #0
 8001c08:	b2db      	uxtb	r3, r3
 8001c0a:	2b00      	cmp	r3, #0
 8001c0c:	d001      	beq.n	8001c12 <HAL_I2C_Init+0x196>
 8001c0e:	2301      	movs	r3, #1
 8001c10:	e022      	b.n	8001c58 <HAL_I2C_Init+0x1dc>
 8001c12:	687b      	ldr	r3, [r7, #4]
 8001c14:	689b      	ldr	r3, [r3, #8]
 8001c16:	2b00      	cmp	r3, #0
 8001c18:	d10e      	bne.n	8001c38 <HAL_I2C_Init+0x1bc>
 8001c1a:	68fb      	ldr	r3, [r7, #12]
 8001c1c:	1e58      	subs	r0, r3, #1
 8001c1e:	687b      	ldr	r3, [r7, #4]
 8001c20:	6859      	ldr	r1, [r3, #4]
 8001c22:	460b      	mov	r3, r1
 8001c24:	005b      	lsls	r3, r3, #1
 8001c26:	440b      	add	r3, r1
 8001c28:	fbb0 f3f3 	udiv	r3, r0, r3
 8001c2c:	3301      	adds	r3, #1
 8001c2e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001c32:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8001c36:	e00f      	b.n	8001c58 <HAL_I2C_Init+0x1dc>
 8001c38:	68fb      	ldr	r3, [r7, #12]
 8001c3a:	1e58      	subs	r0, r3, #1
 8001c3c:	687b      	ldr	r3, [r7, #4]
 8001c3e:	6859      	ldr	r1, [r3, #4]
 8001c40:	460b      	mov	r3, r1
 8001c42:	009b      	lsls	r3, r3, #2
 8001c44:	440b      	add	r3, r1
 8001c46:	0099      	lsls	r1, r3, #2
 8001c48:	440b      	add	r3, r1
 8001c4a:	fbb0 f3f3 	udiv	r3, r0, r3
 8001c4e:	3301      	adds	r3, #1
 8001c50:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001c54:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8001c58:	6879      	ldr	r1, [r7, #4]
 8001c5a:	6809      	ldr	r1, [r1, #0]
 8001c5c:	4313      	orrs	r3, r2
 8001c5e:	61cb      	str	r3, [r1, #28]
 8001c60:	687b      	ldr	r3, [r7, #4]
 8001c62:	681b      	ldr	r3, [r3, #0]
 8001c64:	681b      	ldr	r3, [r3, #0]
 8001c66:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8001c6a:	687b      	ldr	r3, [r7, #4]
 8001c6c:	69da      	ldr	r2, [r3, #28]
 8001c6e:	687b      	ldr	r3, [r7, #4]
 8001c70:	6a1b      	ldr	r3, [r3, #32]
 8001c72:	431a      	orrs	r2, r3
 8001c74:	687b      	ldr	r3, [r7, #4]
 8001c76:	681b      	ldr	r3, [r3, #0]
 8001c78:	430a      	orrs	r2, r1
 8001c7a:	601a      	str	r2, [r3, #0]
 8001c7c:	687b      	ldr	r3, [r7, #4]
 8001c7e:	681b      	ldr	r3, [r3, #0]
 8001c80:	689b      	ldr	r3, [r3, #8]
 8001c82:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 8001c86:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8001c8a:	687a      	ldr	r2, [r7, #4]
 8001c8c:	6911      	ldr	r1, [r2, #16]
 8001c8e:	687a      	ldr	r2, [r7, #4]
 8001c90:	68d2      	ldr	r2, [r2, #12]
 8001c92:	4311      	orrs	r1, r2
 8001c94:	687a      	ldr	r2, [r7, #4]
 8001c96:	6812      	ldr	r2, [r2, #0]
 8001c98:	430b      	orrs	r3, r1
 8001c9a:	6093      	str	r3, [r2, #8]
 8001c9c:	687b      	ldr	r3, [r7, #4]
 8001c9e:	681b      	ldr	r3, [r3, #0]
 8001ca0:	68db      	ldr	r3, [r3, #12]
 8001ca2:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 8001ca6:	687b      	ldr	r3, [r7, #4]
 8001ca8:	695a      	ldr	r2, [r3, #20]
 8001caa:	687b      	ldr	r3, [r7, #4]
 8001cac:	699b      	ldr	r3, [r3, #24]
 8001cae:	431a      	orrs	r2, r3
 8001cb0:	687b      	ldr	r3, [r7, #4]
 8001cb2:	681b      	ldr	r3, [r3, #0]
 8001cb4:	430a      	orrs	r2, r1
 8001cb6:	60da      	str	r2, [r3, #12]
 8001cb8:	687b      	ldr	r3, [r7, #4]
 8001cba:	681b      	ldr	r3, [r3, #0]
 8001cbc:	681a      	ldr	r2, [r3, #0]
 8001cbe:	687b      	ldr	r3, [r7, #4]
 8001cc0:	681b      	ldr	r3, [r3, #0]
 8001cc2:	f042 0201 	orr.w	r2, r2, #1
 8001cc6:	601a      	str	r2, [r3, #0]
 8001cc8:	687b      	ldr	r3, [r7, #4]
 8001cca:	2200      	movs	r2, #0
 8001ccc:	641a      	str	r2, [r3, #64]	@ 0x40
 8001cce:	687b      	ldr	r3, [r7, #4]
 8001cd0:	2220      	movs	r2, #32
 8001cd2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001cd6:	687b      	ldr	r3, [r7, #4]
 8001cd8:	2200      	movs	r2, #0
 8001cda:	631a      	str	r2, [r3, #48]	@ 0x30
 8001cdc:	687b      	ldr	r3, [r7, #4]
 8001cde:	2200      	movs	r2, #0
 8001ce0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001ce4:	2300      	movs	r3, #0
 8001ce6:	4618      	mov	r0, r3
 8001ce8:	3710      	adds	r7, #16
 8001cea:	46bd      	mov	sp, r7
 8001cec:	bd80      	pop	{r7, pc}
 8001cee:	bf00      	nop
 8001cf0:	000186a0 	.word	0x000186a0
 8001cf4:	001e847f 	.word	0x001e847f
 8001cf8:	003d08ff 	.word	0x003d08ff
 8001cfc:	431bde83 	.word	0x431bde83
 8001d00:	10624dd3 	.word	0x10624dd3

08001d04 <HAL_I2C_Master_Transmit>:
 8001d04:	b580      	push	{r7, lr}
 8001d06:	b088      	sub	sp, #32
 8001d08:	af02      	add	r7, sp, #8
 8001d0a:	60f8      	str	r0, [r7, #12]
 8001d0c:	607a      	str	r2, [r7, #4]
 8001d0e:	461a      	mov	r2, r3
 8001d10:	460b      	mov	r3, r1
 8001d12:	817b      	strh	r3, [r7, #10]
 8001d14:	4613      	mov	r3, r2
 8001d16:	813b      	strh	r3, [r7, #8]
 8001d18:	f7ff fc06 	bl	8001528 <HAL_GetTick>
 8001d1c:	6178      	str	r0, [r7, #20]
 8001d1e:	68fb      	ldr	r3, [r7, #12]
 8001d20:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8001d24:	b2db      	uxtb	r3, r3
 8001d26:	2b20      	cmp	r3, #32
 8001d28:	f040 80e0 	bne.w	8001eec <HAL_I2C_Master_Transmit+0x1e8>
 8001d2c:	697b      	ldr	r3, [r7, #20]
 8001d2e:	9300      	str	r3, [sp, #0]
 8001d30:	2319      	movs	r3, #25
 8001d32:	2201      	movs	r2, #1
 8001d34:	4970      	ldr	r1, [pc, #448]	@ (8001ef8 <HAL_I2C_Master_Transmit+0x1f4>)
 8001d36:	68f8      	ldr	r0, [r7, #12]
 8001d38:	f000 fa92 	bl	8002260 <I2C_WaitOnFlagUntilTimeout>
 8001d3c:	4603      	mov	r3, r0
 8001d3e:	2b00      	cmp	r3, #0
 8001d40:	d001      	beq.n	8001d46 <HAL_I2C_Master_Transmit+0x42>
 8001d42:	2302      	movs	r3, #2
 8001d44:	e0d3      	b.n	8001eee <HAL_I2C_Master_Transmit+0x1ea>
 8001d46:	68fb      	ldr	r3, [r7, #12]
 8001d48:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001d4c:	2b01      	cmp	r3, #1
 8001d4e:	d101      	bne.n	8001d54 <HAL_I2C_Master_Transmit+0x50>
 8001d50:	2302      	movs	r3, #2
 8001d52:	e0cc      	b.n	8001eee <HAL_I2C_Master_Transmit+0x1ea>
 8001d54:	68fb      	ldr	r3, [r7, #12]
 8001d56:	2201      	movs	r2, #1
 8001d58:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001d5c:	68fb      	ldr	r3, [r7, #12]
 8001d5e:	681b      	ldr	r3, [r3, #0]
 8001d60:	681b      	ldr	r3, [r3, #0]
 8001d62:	f003 0301 	and.w	r3, r3, #1
 8001d66:	2b01      	cmp	r3, #1
 8001d68:	d007      	beq.n	8001d7a <HAL_I2C_Master_Transmit+0x76>
 8001d6a:	68fb      	ldr	r3, [r7, #12]
 8001d6c:	681b      	ldr	r3, [r3, #0]
 8001d6e:	681a      	ldr	r2, [r3, #0]
 8001d70:	68fb      	ldr	r3, [r7, #12]
 8001d72:	681b      	ldr	r3, [r3, #0]
 8001d74:	f042 0201 	orr.w	r2, r2, #1
 8001d78:	601a      	str	r2, [r3, #0]
 8001d7a:	68fb      	ldr	r3, [r7, #12]
 8001d7c:	681b      	ldr	r3, [r3, #0]
 8001d7e:	681a      	ldr	r2, [r3, #0]
 8001d80:	68fb      	ldr	r3, [r7, #12]
 8001d82:	681b      	ldr	r3, [r3, #0]
 8001d84:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8001d88:	601a      	str	r2, [r3, #0]
 8001d8a:	68fb      	ldr	r3, [r7, #12]
 8001d8c:	2221      	movs	r2, #33	@ 0x21
 8001d8e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001d92:	68fb      	ldr	r3, [r7, #12]
 8001d94:	2210      	movs	r2, #16
 8001d96:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001d9a:	68fb      	ldr	r3, [r7, #12]
 8001d9c:	2200      	movs	r2, #0
 8001d9e:	641a      	str	r2, [r3, #64]	@ 0x40
 8001da0:	68fb      	ldr	r3, [r7, #12]
 8001da2:	687a      	ldr	r2, [r7, #4]
 8001da4:	625a      	str	r2, [r3, #36]	@ 0x24
 8001da6:	68fb      	ldr	r3, [r7, #12]
 8001da8:	893a      	ldrh	r2, [r7, #8]
 8001daa:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8001dac:	68fb      	ldr	r3, [r7, #12]
 8001dae:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001db0:	b29a      	uxth	r2, r3
 8001db2:	68fb      	ldr	r3, [r7, #12]
 8001db4:	851a      	strh	r2, [r3, #40]	@ 0x28
 8001db6:	68fb      	ldr	r3, [r7, #12]
 8001db8:	4a50      	ldr	r2, [pc, #320]	@ (8001efc <HAL_I2C_Master_Transmit+0x1f8>)
 8001dba:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001dbc:	8979      	ldrh	r1, [r7, #10]
 8001dbe:	697b      	ldr	r3, [r7, #20]
 8001dc0:	6a3a      	ldr	r2, [r7, #32]
 8001dc2:	68f8      	ldr	r0, [r7, #12]
 8001dc4:	f000 f9ca 	bl	800215c <I2C_MasterRequestWrite>
 8001dc8:	4603      	mov	r3, r0
 8001dca:	2b00      	cmp	r3, #0
 8001dcc:	d001      	beq.n	8001dd2 <HAL_I2C_Master_Transmit+0xce>
 8001dce:	2301      	movs	r3, #1
 8001dd0:	e08d      	b.n	8001eee <HAL_I2C_Master_Transmit+0x1ea>
 8001dd2:	2300      	movs	r3, #0
 8001dd4:	613b      	str	r3, [r7, #16]
 8001dd6:	68fb      	ldr	r3, [r7, #12]
 8001dd8:	681b      	ldr	r3, [r3, #0]
 8001dda:	695b      	ldr	r3, [r3, #20]
 8001ddc:	613b      	str	r3, [r7, #16]
 8001dde:	68fb      	ldr	r3, [r7, #12]
 8001de0:	681b      	ldr	r3, [r3, #0]
 8001de2:	699b      	ldr	r3, [r3, #24]
 8001de4:	613b      	str	r3, [r7, #16]
 8001de6:	693b      	ldr	r3, [r7, #16]
 8001de8:	e066      	b.n	8001eb8 <HAL_I2C_Master_Transmit+0x1b4>
 8001dea:	697a      	ldr	r2, [r7, #20]
 8001dec:	6a39      	ldr	r1, [r7, #32]
 8001dee:	68f8      	ldr	r0, [r7, #12]
 8001df0:	f000 fb50 	bl	8002494 <I2C_WaitOnTXEFlagUntilTimeout>
 8001df4:	4603      	mov	r3, r0
 8001df6:	2b00      	cmp	r3, #0
 8001df8:	d00d      	beq.n	8001e16 <HAL_I2C_Master_Transmit+0x112>
 8001dfa:	68fb      	ldr	r3, [r7, #12]
 8001dfc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001dfe:	2b04      	cmp	r3, #4
 8001e00:	d107      	bne.n	8001e12 <HAL_I2C_Master_Transmit+0x10e>
 8001e02:	68fb      	ldr	r3, [r7, #12]
 8001e04:	681b      	ldr	r3, [r3, #0]
 8001e06:	681a      	ldr	r2, [r3, #0]
 8001e08:	68fb      	ldr	r3, [r7, #12]
 8001e0a:	681b      	ldr	r3, [r3, #0]
 8001e0c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001e10:	601a      	str	r2, [r3, #0]
 8001e12:	2301      	movs	r3, #1
 8001e14:	e06b      	b.n	8001eee <HAL_I2C_Master_Transmit+0x1ea>
 8001e16:	68fb      	ldr	r3, [r7, #12]
 8001e18:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001e1a:	781a      	ldrb	r2, [r3, #0]
 8001e1c:	68fb      	ldr	r3, [r7, #12]
 8001e1e:	681b      	ldr	r3, [r3, #0]
 8001e20:	611a      	str	r2, [r3, #16]
 8001e22:	68fb      	ldr	r3, [r7, #12]
 8001e24:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001e26:	1c5a      	adds	r2, r3, #1
 8001e28:	68fb      	ldr	r3, [r7, #12]
 8001e2a:	625a      	str	r2, [r3, #36]	@ 0x24
 8001e2c:	68fb      	ldr	r3, [r7, #12]
 8001e2e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001e30:	b29b      	uxth	r3, r3
 8001e32:	3b01      	subs	r3, #1
 8001e34:	b29a      	uxth	r2, r3
 8001e36:	68fb      	ldr	r3, [r7, #12]
 8001e38:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8001e3a:	68fb      	ldr	r3, [r7, #12]
 8001e3c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001e3e:	3b01      	subs	r3, #1
 8001e40:	b29a      	uxth	r2, r3
 8001e42:	68fb      	ldr	r3, [r7, #12]
 8001e44:	851a      	strh	r2, [r3, #40]	@ 0x28
 8001e46:	68fb      	ldr	r3, [r7, #12]
 8001e48:	681b      	ldr	r3, [r3, #0]
 8001e4a:	695b      	ldr	r3, [r3, #20]
 8001e4c:	f003 0304 	and.w	r3, r3, #4
 8001e50:	2b04      	cmp	r3, #4
 8001e52:	d11b      	bne.n	8001e8c <HAL_I2C_Master_Transmit+0x188>
 8001e54:	68fb      	ldr	r3, [r7, #12]
 8001e56:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001e58:	2b00      	cmp	r3, #0
 8001e5a:	d017      	beq.n	8001e8c <HAL_I2C_Master_Transmit+0x188>
 8001e5c:	68fb      	ldr	r3, [r7, #12]
 8001e5e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001e60:	781a      	ldrb	r2, [r3, #0]
 8001e62:	68fb      	ldr	r3, [r7, #12]
 8001e64:	681b      	ldr	r3, [r3, #0]
 8001e66:	611a      	str	r2, [r3, #16]
 8001e68:	68fb      	ldr	r3, [r7, #12]
 8001e6a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001e6c:	1c5a      	adds	r2, r3, #1
 8001e6e:	68fb      	ldr	r3, [r7, #12]
 8001e70:	625a      	str	r2, [r3, #36]	@ 0x24
 8001e72:	68fb      	ldr	r3, [r7, #12]
 8001e74:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001e76:	b29b      	uxth	r3, r3
 8001e78:	3b01      	subs	r3, #1
 8001e7a:	b29a      	uxth	r2, r3
 8001e7c:	68fb      	ldr	r3, [r7, #12]
 8001e7e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8001e80:	68fb      	ldr	r3, [r7, #12]
 8001e82:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001e84:	3b01      	subs	r3, #1
 8001e86:	b29a      	uxth	r2, r3
 8001e88:	68fb      	ldr	r3, [r7, #12]
 8001e8a:	851a      	strh	r2, [r3, #40]	@ 0x28
 8001e8c:	697a      	ldr	r2, [r7, #20]
 8001e8e:	6a39      	ldr	r1, [r7, #32]
 8001e90:	68f8      	ldr	r0, [r7, #12]
 8001e92:	f000 fb47 	bl	8002524 <I2C_WaitOnBTFFlagUntilTimeout>
 8001e96:	4603      	mov	r3, r0
 8001e98:	2b00      	cmp	r3, #0
 8001e9a:	d00d      	beq.n	8001eb8 <HAL_I2C_Master_Transmit+0x1b4>
 8001e9c:	68fb      	ldr	r3, [r7, #12]
 8001e9e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ea0:	2b04      	cmp	r3, #4
 8001ea2:	d107      	bne.n	8001eb4 <HAL_I2C_Master_Transmit+0x1b0>
 8001ea4:	68fb      	ldr	r3, [r7, #12]
 8001ea6:	681b      	ldr	r3, [r3, #0]
 8001ea8:	681a      	ldr	r2, [r3, #0]
 8001eaa:	68fb      	ldr	r3, [r7, #12]
 8001eac:	681b      	ldr	r3, [r3, #0]
 8001eae:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001eb2:	601a      	str	r2, [r3, #0]
 8001eb4:	2301      	movs	r3, #1
 8001eb6:	e01a      	b.n	8001eee <HAL_I2C_Master_Transmit+0x1ea>
 8001eb8:	68fb      	ldr	r3, [r7, #12]
 8001eba:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001ebc:	2b00      	cmp	r3, #0
 8001ebe:	d194      	bne.n	8001dea <HAL_I2C_Master_Transmit+0xe6>
 8001ec0:	68fb      	ldr	r3, [r7, #12]
 8001ec2:	681b      	ldr	r3, [r3, #0]
 8001ec4:	681a      	ldr	r2, [r3, #0]
 8001ec6:	68fb      	ldr	r3, [r7, #12]
 8001ec8:	681b      	ldr	r3, [r3, #0]
 8001eca:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001ece:	601a      	str	r2, [r3, #0]
 8001ed0:	68fb      	ldr	r3, [r7, #12]
 8001ed2:	2220      	movs	r2, #32
 8001ed4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001ed8:	68fb      	ldr	r3, [r7, #12]
 8001eda:	2200      	movs	r2, #0
 8001edc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001ee0:	68fb      	ldr	r3, [r7, #12]
 8001ee2:	2200      	movs	r2, #0
 8001ee4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001ee8:	2300      	movs	r3, #0
 8001eea:	e000      	b.n	8001eee <HAL_I2C_Master_Transmit+0x1ea>
 8001eec:	2302      	movs	r3, #2
 8001eee:	4618      	mov	r0, r3
 8001ef0:	3718      	adds	r7, #24
 8001ef2:	46bd      	mov	sp, r7
 8001ef4:	bd80      	pop	{r7, pc}
 8001ef6:	bf00      	nop
 8001ef8:	00100002 	.word	0x00100002
 8001efc:	ffff0000 	.word	0xffff0000

08001f00 <HAL_I2C_IsDeviceReady>:
 8001f00:	b580      	push	{r7, lr}
 8001f02:	b08a      	sub	sp, #40	@ 0x28
 8001f04:	af02      	add	r7, sp, #8
 8001f06:	60f8      	str	r0, [r7, #12]
 8001f08:	607a      	str	r2, [r7, #4]
 8001f0a:	603b      	str	r3, [r7, #0]
 8001f0c:	460b      	mov	r3, r1
 8001f0e:	817b      	strh	r3, [r7, #10]
 8001f10:	f7ff fb0a 	bl	8001528 <HAL_GetTick>
 8001f14:	61f8      	str	r0, [r7, #28]
 8001f16:	2300      	movs	r3, #0
 8001f18:	61bb      	str	r3, [r7, #24]
 8001f1a:	68fb      	ldr	r3, [r7, #12]
 8001f1c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8001f20:	b2db      	uxtb	r3, r3
 8001f22:	2b20      	cmp	r3, #32
 8001f24:	f040 8111 	bne.w	800214a <HAL_I2C_IsDeviceReady+0x24a>
 8001f28:	69fb      	ldr	r3, [r7, #28]
 8001f2a:	9300      	str	r3, [sp, #0]
 8001f2c:	2319      	movs	r3, #25
 8001f2e:	2201      	movs	r2, #1
 8001f30:	4988      	ldr	r1, [pc, #544]	@ (8002154 <HAL_I2C_IsDeviceReady+0x254>)
 8001f32:	68f8      	ldr	r0, [r7, #12]
 8001f34:	f000 f994 	bl	8002260 <I2C_WaitOnFlagUntilTimeout>
 8001f38:	4603      	mov	r3, r0
 8001f3a:	2b00      	cmp	r3, #0
 8001f3c:	d001      	beq.n	8001f42 <HAL_I2C_IsDeviceReady+0x42>
 8001f3e:	2302      	movs	r3, #2
 8001f40:	e104      	b.n	800214c <HAL_I2C_IsDeviceReady+0x24c>
 8001f42:	68fb      	ldr	r3, [r7, #12]
 8001f44:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001f48:	2b01      	cmp	r3, #1
 8001f4a:	d101      	bne.n	8001f50 <HAL_I2C_IsDeviceReady+0x50>
 8001f4c:	2302      	movs	r3, #2
 8001f4e:	e0fd      	b.n	800214c <HAL_I2C_IsDeviceReady+0x24c>
 8001f50:	68fb      	ldr	r3, [r7, #12]
 8001f52:	2201      	movs	r2, #1
 8001f54:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001f58:	68fb      	ldr	r3, [r7, #12]
 8001f5a:	681b      	ldr	r3, [r3, #0]
 8001f5c:	681b      	ldr	r3, [r3, #0]
 8001f5e:	f003 0301 	and.w	r3, r3, #1
 8001f62:	2b01      	cmp	r3, #1
 8001f64:	d007      	beq.n	8001f76 <HAL_I2C_IsDeviceReady+0x76>
 8001f66:	68fb      	ldr	r3, [r7, #12]
 8001f68:	681b      	ldr	r3, [r3, #0]
 8001f6a:	681a      	ldr	r2, [r3, #0]
 8001f6c:	68fb      	ldr	r3, [r7, #12]
 8001f6e:	681b      	ldr	r3, [r3, #0]
 8001f70:	f042 0201 	orr.w	r2, r2, #1
 8001f74:	601a      	str	r2, [r3, #0]
 8001f76:	68fb      	ldr	r3, [r7, #12]
 8001f78:	681b      	ldr	r3, [r3, #0]
 8001f7a:	681a      	ldr	r2, [r3, #0]
 8001f7c:	68fb      	ldr	r3, [r7, #12]
 8001f7e:	681b      	ldr	r3, [r3, #0]
 8001f80:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8001f84:	601a      	str	r2, [r3, #0]
 8001f86:	68fb      	ldr	r3, [r7, #12]
 8001f88:	2224      	movs	r2, #36	@ 0x24
 8001f8a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001f8e:	68fb      	ldr	r3, [r7, #12]
 8001f90:	2200      	movs	r2, #0
 8001f92:	641a      	str	r2, [r3, #64]	@ 0x40
 8001f94:	68fb      	ldr	r3, [r7, #12]
 8001f96:	4a70      	ldr	r2, [pc, #448]	@ (8002158 <HAL_I2C_IsDeviceReady+0x258>)
 8001f98:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001f9a:	68fb      	ldr	r3, [r7, #12]
 8001f9c:	681b      	ldr	r3, [r3, #0]
 8001f9e:	681a      	ldr	r2, [r3, #0]
 8001fa0:	68fb      	ldr	r3, [r7, #12]
 8001fa2:	681b      	ldr	r3, [r3, #0]
 8001fa4:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8001fa8:	601a      	str	r2, [r3, #0]
 8001faa:	69fb      	ldr	r3, [r7, #28]
 8001fac:	9300      	str	r3, [sp, #0]
 8001fae:	683b      	ldr	r3, [r7, #0]
 8001fb0:	2200      	movs	r2, #0
 8001fb2:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8001fb6:	68f8      	ldr	r0, [r7, #12]
 8001fb8:	f000 f952 	bl	8002260 <I2C_WaitOnFlagUntilTimeout>
 8001fbc:	4603      	mov	r3, r0
 8001fbe:	2b00      	cmp	r3, #0
 8001fc0:	d00d      	beq.n	8001fde <HAL_I2C_IsDeviceReady+0xde>
 8001fc2:	68fb      	ldr	r3, [r7, #12]
 8001fc4:	681b      	ldr	r3, [r3, #0]
 8001fc6:	681b      	ldr	r3, [r3, #0]
 8001fc8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001fcc:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8001fd0:	d103      	bne.n	8001fda <HAL_I2C_IsDeviceReady+0xda>
 8001fd2:	68fb      	ldr	r3, [r7, #12]
 8001fd4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001fd8:	641a      	str	r2, [r3, #64]	@ 0x40
 8001fda:	2303      	movs	r3, #3
 8001fdc:	e0b6      	b.n	800214c <HAL_I2C_IsDeviceReady+0x24c>
 8001fde:	897b      	ldrh	r3, [r7, #10]
 8001fe0:	b2db      	uxtb	r3, r3
 8001fe2:	461a      	mov	r2, r3
 8001fe4:	68fb      	ldr	r3, [r7, #12]
 8001fe6:	681b      	ldr	r3, [r3, #0]
 8001fe8:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8001fec:	611a      	str	r2, [r3, #16]
 8001fee:	f7ff fa9b 	bl	8001528 <HAL_GetTick>
 8001ff2:	61f8      	str	r0, [r7, #28]
 8001ff4:	68fb      	ldr	r3, [r7, #12]
 8001ff6:	681b      	ldr	r3, [r3, #0]
 8001ff8:	695b      	ldr	r3, [r3, #20]
 8001ffa:	f003 0302 	and.w	r3, r3, #2
 8001ffe:	2b02      	cmp	r3, #2
 8002000:	bf0c      	ite	eq
 8002002:	2301      	moveq	r3, #1
 8002004:	2300      	movne	r3, #0
 8002006:	b2db      	uxtb	r3, r3
 8002008:	75fb      	strb	r3, [r7, #23]
 800200a:	68fb      	ldr	r3, [r7, #12]
 800200c:	681b      	ldr	r3, [r3, #0]
 800200e:	695b      	ldr	r3, [r3, #20]
 8002010:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002014:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002018:	bf0c      	ite	eq
 800201a:	2301      	moveq	r3, #1
 800201c:	2300      	movne	r3, #0
 800201e:	b2db      	uxtb	r3, r3
 8002020:	75bb      	strb	r3, [r7, #22]
 8002022:	e025      	b.n	8002070 <HAL_I2C_IsDeviceReady+0x170>
 8002024:	f7ff fa80 	bl	8001528 <HAL_GetTick>
 8002028:	4602      	mov	r2, r0
 800202a:	69fb      	ldr	r3, [r7, #28]
 800202c:	1ad3      	subs	r3, r2, r3
 800202e:	683a      	ldr	r2, [r7, #0]
 8002030:	429a      	cmp	r2, r3
 8002032:	d302      	bcc.n	800203a <HAL_I2C_IsDeviceReady+0x13a>
 8002034:	683b      	ldr	r3, [r7, #0]
 8002036:	2b00      	cmp	r3, #0
 8002038:	d103      	bne.n	8002042 <HAL_I2C_IsDeviceReady+0x142>
 800203a:	68fb      	ldr	r3, [r7, #12]
 800203c:	22a0      	movs	r2, #160	@ 0xa0
 800203e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002042:	68fb      	ldr	r3, [r7, #12]
 8002044:	681b      	ldr	r3, [r3, #0]
 8002046:	695b      	ldr	r3, [r3, #20]
 8002048:	f003 0302 	and.w	r3, r3, #2
 800204c:	2b02      	cmp	r3, #2
 800204e:	bf0c      	ite	eq
 8002050:	2301      	moveq	r3, #1
 8002052:	2300      	movne	r3, #0
 8002054:	b2db      	uxtb	r3, r3
 8002056:	75fb      	strb	r3, [r7, #23]
 8002058:	68fb      	ldr	r3, [r7, #12]
 800205a:	681b      	ldr	r3, [r3, #0]
 800205c:	695b      	ldr	r3, [r3, #20]
 800205e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002062:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002066:	bf0c      	ite	eq
 8002068:	2301      	moveq	r3, #1
 800206a:	2300      	movne	r3, #0
 800206c:	b2db      	uxtb	r3, r3
 800206e:	75bb      	strb	r3, [r7, #22]
 8002070:	68fb      	ldr	r3, [r7, #12]
 8002072:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002076:	b2db      	uxtb	r3, r3
 8002078:	2ba0      	cmp	r3, #160	@ 0xa0
 800207a:	d005      	beq.n	8002088 <HAL_I2C_IsDeviceReady+0x188>
 800207c:	7dfb      	ldrb	r3, [r7, #23]
 800207e:	2b00      	cmp	r3, #0
 8002080:	d102      	bne.n	8002088 <HAL_I2C_IsDeviceReady+0x188>
 8002082:	7dbb      	ldrb	r3, [r7, #22]
 8002084:	2b00      	cmp	r3, #0
 8002086:	d0cd      	beq.n	8002024 <HAL_I2C_IsDeviceReady+0x124>
 8002088:	68fb      	ldr	r3, [r7, #12]
 800208a:	2220      	movs	r2, #32
 800208c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002090:	68fb      	ldr	r3, [r7, #12]
 8002092:	681b      	ldr	r3, [r3, #0]
 8002094:	695b      	ldr	r3, [r3, #20]
 8002096:	f003 0302 	and.w	r3, r3, #2
 800209a:	2b02      	cmp	r3, #2
 800209c:	d129      	bne.n	80020f2 <HAL_I2C_IsDeviceReady+0x1f2>
 800209e:	68fb      	ldr	r3, [r7, #12]
 80020a0:	681b      	ldr	r3, [r3, #0]
 80020a2:	681a      	ldr	r2, [r3, #0]
 80020a4:	68fb      	ldr	r3, [r7, #12]
 80020a6:	681b      	ldr	r3, [r3, #0]
 80020a8:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80020ac:	601a      	str	r2, [r3, #0]
 80020ae:	2300      	movs	r3, #0
 80020b0:	613b      	str	r3, [r7, #16]
 80020b2:	68fb      	ldr	r3, [r7, #12]
 80020b4:	681b      	ldr	r3, [r3, #0]
 80020b6:	695b      	ldr	r3, [r3, #20]
 80020b8:	613b      	str	r3, [r7, #16]
 80020ba:	68fb      	ldr	r3, [r7, #12]
 80020bc:	681b      	ldr	r3, [r3, #0]
 80020be:	699b      	ldr	r3, [r3, #24]
 80020c0:	613b      	str	r3, [r7, #16]
 80020c2:	693b      	ldr	r3, [r7, #16]
 80020c4:	69fb      	ldr	r3, [r7, #28]
 80020c6:	9300      	str	r3, [sp, #0]
 80020c8:	2319      	movs	r3, #25
 80020ca:	2201      	movs	r2, #1
 80020cc:	4921      	ldr	r1, [pc, #132]	@ (8002154 <HAL_I2C_IsDeviceReady+0x254>)
 80020ce:	68f8      	ldr	r0, [r7, #12]
 80020d0:	f000 f8c6 	bl	8002260 <I2C_WaitOnFlagUntilTimeout>
 80020d4:	4603      	mov	r3, r0
 80020d6:	2b00      	cmp	r3, #0
 80020d8:	d001      	beq.n	80020de <HAL_I2C_IsDeviceReady+0x1de>
 80020da:	2301      	movs	r3, #1
 80020dc:	e036      	b.n	800214c <HAL_I2C_IsDeviceReady+0x24c>
 80020de:	68fb      	ldr	r3, [r7, #12]
 80020e0:	2220      	movs	r2, #32
 80020e2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80020e6:	68fb      	ldr	r3, [r7, #12]
 80020e8:	2200      	movs	r2, #0
 80020ea:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80020ee:	2300      	movs	r3, #0
 80020f0:	e02c      	b.n	800214c <HAL_I2C_IsDeviceReady+0x24c>
 80020f2:	68fb      	ldr	r3, [r7, #12]
 80020f4:	681b      	ldr	r3, [r3, #0]
 80020f6:	681a      	ldr	r2, [r3, #0]
 80020f8:	68fb      	ldr	r3, [r7, #12]
 80020fa:	681b      	ldr	r3, [r3, #0]
 80020fc:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8002100:	601a      	str	r2, [r3, #0]
 8002102:	68fb      	ldr	r3, [r7, #12]
 8002104:	681b      	ldr	r3, [r3, #0]
 8002106:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800210a:	615a      	str	r2, [r3, #20]
 800210c:	69fb      	ldr	r3, [r7, #28]
 800210e:	9300      	str	r3, [sp, #0]
 8002110:	2319      	movs	r3, #25
 8002112:	2201      	movs	r2, #1
 8002114:	490f      	ldr	r1, [pc, #60]	@ (8002154 <HAL_I2C_IsDeviceReady+0x254>)
 8002116:	68f8      	ldr	r0, [r7, #12]
 8002118:	f000 f8a2 	bl	8002260 <I2C_WaitOnFlagUntilTimeout>
 800211c:	4603      	mov	r3, r0
 800211e:	2b00      	cmp	r3, #0
 8002120:	d001      	beq.n	8002126 <HAL_I2C_IsDeviceReady+0x226>
 8002122:	2301      	movs	r3, #1
 8002124:	e012      	b.n	800214c <HAL_I2C_IsDeviceReady+0x24c>
 8002126:	69bb      	ldr	r3, [r7, #24]
 8002128:	3301      	adds	r3, #1
 800212a:	61bb      	str	r3, [r7, #24]
 800212c:	69ba      	ldr	r2, [r7, #24]
 800212e:	687b      	ldr	r3, [r7, #4]
 8002130:	429a      	cmp	r2, r3
 8002132:	f4ff af32 	bcc.w	8001f9a <HAL_I2C_IsDeviceReady+0x9a>
 8002136:	68fb      	ldr	r3, [r7, #12]
 8002138:	2220      	movs	r2, #32
 800213a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800213e:	68fb      	ldr	r3, [r7, #12]
 8002140:	2200      	movs	r2, #0
 8002142:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002146:	2301      	movs	r3, #1
 8002148:	e000      	b.n	800214c <HAL_I2C_IsDeviceReady+0x24c>
 800214a:	2302      	movs	r3, #2
 800214c:	4618      	mov	r0, r3
 800214e:	3720      	adds	r7, #32
 8002150:	46bd      	mov	sp, r7
 8002152:	bd80      	pop	{r7, pc}
 8002154:	00100002 	.word	0x00100002
 8002158:	ffff0000 	.word	0xffff0000

0800215c <I2C_MasterRequestWrite>:
 800215c:	b580      	push	{r7, lr}
 800215e:	b088      	sub	sp, #32
 8002160:	af02      	add	r7, sp, #8
 8002162:	60f8      	str	r0, [r7, #12]
 8002164:	607a      	str	r2, [r7, #4]
 8002166:	603b      	str	r3, [r7, #0]
 8002168:	460b      	mov	r3, r1
 800216a:	817b      	strh	r3, [r7, #10]
 800216c:	68fb      	ldr	r3, [r7, #12]
 800216e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002170:	617b      	str	r3, [r7, #20]
 8002172:	697b      	ldr	r3, [r7, #20]
 8002174:	2b08      	cmp	r3, #8
 8002176:	d006      	beq.n	8002186 <I2C_MasterRequestWrite+0x2a>
 8002178:	697b      	ldr	r3, [r7, #20]
 800217a:	2b01      	cmp	r3, #1
 800217c:	d003      	beq.n	8002186 <I2C_MasterRequestWrite+0x2a>
 800217e:	697b      	ldr	r3, [r7, #20]
 8002180:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8002184:	d108      	bne.n	8002198 <I2C_MasterRequestWrite+0x3c>
 8002186:	68fb      	ldr	r3, [r7, #12]
 8002188:	681b      	ldr	r3, [r3, #0]
 800218a:	681a      	ldr	r2, [r3, #0]
 800218c:	68fb      	ldr	r3, [r7, #12]
 800218e:	681b      	ldr	r3, [r3, #0]
 8002190:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002194:	601a      	str	r2, [r3, #0]
 8002196:	e00b      	b.n	80021b0 <I2C_MasterRequestWrite+0x54>
 8002198:	68fb      	ldr	r3, [r7, #12]
 800219a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800219c:	2b12      	cmp	r3, #18
 800219e:	d107      	bne.n	80021b0 <I2C_MasterRequestWrite+0x54>
 80021a0:	68fb      	ldr	r3, [r7, #12]
 80021a2:	681b      	ldr	r3, [r3, #0]
 80021a4:	681a      	ldr	r2, [r3, #0]
 80021a6:	68fb      	ldr	r3, [r7, #12]
 80021a8:	681b      	ldr	r3, [r3, #0]
 80021aa:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80021ae:	601a      	str	r2, [r3, #0]
 80021b0:	683b      	ldr	r3, [r7, #0]
 80021b2:	9300      	str	r3, [sp, #0]
 80021b4:	687b      	ldr	r3, [r7, #4]
 80021b6:	2200      	movs	r2, #0
 80021b8:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 80021bc:	68f8      	ldr	r0, [r7, #12]
 80021be:	f000 f84f 	bl	8002260 <I2C_WaitOnFlagUntilTimeout>
 80021c2:	4603      	mov	r3, r0
 80021c4:	2b00      	cmp	r3, #0
 80021c6:	d00d      	beq.n	80021e4 <I2C_MasterRequestWrite+0x88>
 80021c8:	68fb      	ldr	r3, [r7, #12]
 80021ca:	681b      	ldr	r3, [r3, #0]
 80021cc:	681b      	ldr	r3, [r3, #0]
 80021ce:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80021d2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80021d6:	d103      	bne.n	80021e0 <I2C_MasterRequestWrite+0x84>
 80021d8:	68fb      	ldr	r3, [r7, #12]
 80021da:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80021de:	641a      	str	r2, [r3, #64]	@ 0x40
 80021e0:	2303      	movs	r3, #3
 80021e2:	e035      	b.n	8002250 <I2C_MasterRequestWrite+0xf4>
 80021e4:	68fb      	ldr	r3, [r7, #12]
 80021e6:	691b      	ldr	r3, [r3, #16]
 80021e8:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 80021ec:	d108      	bne.n	8002200 <I2C_MasterRequestWrite+0xa4>
 80021ee:	897b      	ldrh	r3, [r7, #10]
 80021f0:	b2db      	uxtb	r3, r3
 80021f2:	461a      	mov	r2, r3
 80021f4:	68fb      	ldr	r3, [r7, #12]
 80021f6:	681b      	ldr	r3, [r3, #0]
 80021f8:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 80021fc:	611a      	str	r2, [r3, #16]
 80021fe:	e01b      	b.n	8002238 <I2C_MasterRequestWrite+0xdc>
 8002200:	897b      	ldrh	r3, [r7, #10]
 8002202:	11db      	asrs	r3, r3, #7
 8002204:	b2db      	uxtb	r3, r3
 8002206:	f003 0306 	and.w	r3, r3, #6
 800220a:	b2db      	uxtb	r3, r3
 800220c:	f063 030f 	orn	r3, r3, #15
 8002210:	b2da      	uxtb	r2, r3
 8002212:	68fb      	ldr	r3, [r7, #12]
 8002214:	681b      	ldr	r3, [r3, #0]
 8002216:	611a      	str	r2, [r3, #16]
 8002218:	683b      	ldr	r3, [r7, #0]
 800221a:	687a      	ldr	r2, [r7, #4]
 800221c:	490e      	ldr	r1, [pc, #56]	@ (8002258 <I2C_MasterRequestWrite+0xfc>)
 800221e:	68f8      	ldr	r0, [r7, #12]
 8002220:	f000 f898 	bl	8002354 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002224:	4603      	mov	r3, r0
 8002226:	2b00      	cmp	r3, #0
 8002228:	d001      	beq.n	800222e <I2C_MasterRequestWrite+0xd2>
 800222a:	2301      	movs	r3, #1
 800222c:	e010      	b.n	8002250 <I2C_MasterRequestWrite+0xf4>
 800222e:	897b      	ldrh	r3, [r7, #10]
 8002230:	b2da      	uxtb	r2, r3
 8002232:	68fb      	ldr	r3, [r7, #12]
 8002234:	681b      	ldr	r3, [r3, #0]
 8002236:	611a      	str	r2, [r3, #16]
 8002238:	683b      	ldr	r3, [r7, #0]
 800223a:	687a      	ldr	r2, [r7, #4]
 800223c:	4907      	ldr	r1, [pc, #28]	@ (800225c <I2C_MasterRequestWrite+0x100>)
 800223e:	68f8      	ldr	r0, [r7, #12]
 8002240:	f000 f888 	bl	8002354 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002244:	4603      	mov	r3, r0
 8002246:	2b00      	cmp	r3, #0
 8002248:	d001      	beq.n	800224e <I2C_MasterRequestWrite+0xf2>
 800224a:	2301      	movs	r3, #1
 800224c:	e000      	b.n	8002250 <I2C_MasterRequestWrite+0xf4>
 800224e:	2300      	movs	r3, #0
 8002250:	4618      	mov	r0, r3
 8002252:	3718      	adds	r7, #24
 8002254:	46bd      	mov	sp, r7
 8002256:	bd80      	pop	{r7, pc}
 8002258:	00010008 	.word	0x00010008
 800225c:	00010002 	.word	0x00010002

08002260 <I2C_WaitOnFlagUntilTimeout>:
 8002260:	b580      	push	{r7, lr}
 8002262:	b084      	sub	sp, #16
 8002264:	af00      	add	r7, sp, #0
 8002266:	60f8      	str	r0, [r7, #12]
 8002268:	60b9      	str	r1, [r7, #8]
 800226a:	603b      	str	r3, [r7, #0]
 800226c:	4613      	mov	r3, r2
 800226e:	71fb      	strb	r3, [r7, #7]
 8002270:	e048      	b.n	8002304 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8002272:	683b      	ldr	r3, [r7, #0]
 8002274:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002278:	d044      	beq.n	8002304 <I2C_WaitOnFlagUntilTimeout+0xa4>
 800227a:	f7ff f955 	bl	8001528 <HAL_GetTick>
 800227e:	4602      	mov	r2, r0
 8002280:	69bb      	ldr	r3, [r7, #24]
 8002282:	1ad3      	subs	r3, r2, r3
 8002284:	683a      	ldr	r2, [r7, #0]
 8002286:	429a      	cmp	r2, r3
 8002288:	d302      	bcc.n	8002290 <I2C_WaitOnFlagUntilTimeout+0x30>
 800228a:	683b      	ldr	r3, [r7, #0]
 800228c:	2b00      	cmp	r3, #0
 800228e:	d139      	bne.n	8002304 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8002290:	68bb      	ldr	r3, [r7, #8]
 8002292:	0c1b      	lsrs	r3, r3, #16
 8002294:	b2db      	uxtb	r3, r3
 8002296:	2b01      	cmp	r3, #1
 8002298:	d10d      	bne.n	80022b6 <I2C_WaitOnFlagUntilTimeout+0x56>
 800229a:	68fb      	ldr	r3, [r7, #12]
 800229c:	681b      	ldr	r3, [r3, #0]
 800229e:	695b      	ldr	r3, [r3, #20]
 80022a0:	43da      	mvns	r2, r3
 80022a2:	68bb      	ldr	r3, [r7, #8]
 80022a4:	4013      	ands	r3, r2
 80022a6:	b29b      	uxth	r3, r3
 80022a8:	2b00      	cmp	r3, #0
 80022aa:	bf0c      	ite	eq
 80022ac:	2301      	moveq	r3, #1
 80022ae:	2300      	movne	r3, #0
 80022b0:	b2db      	uxtb	r3, r3
 80022b2:	461a      	mov	r2, r3
 80022b4:	e00c      	b.n	80022d0 <I2C_WaitOnFlagUntilTimeout+0x70>
 80022b6:	68fb      	ldr	r3, [r7, #12]
 80022b8:	681b      	ldr	r3, [r3, #0]
 80022ba:	699b      	ldr	r3, [r3, #24]
 80022bc:	43da      	mvns	r2, r3
 80022be:	68bb      	ldr	r3, [r7, #8]
 80022c0:	4013      	ands	r3, r2
 80022c2:	b29b      	uxth	r3, r3
 80022c4:	2b00      	cmp	r3, #0
 80022c6:	bf0c      	ite	eq
 80022c8:	2301      	moveq	r3, #1
 80022ca:	2300      	movne	r3, #0
 80022cc:	b2db      	uxtb	r3, r3
 80022ce:	461a      	mov	r2, r3
 80022d0:	79fb      	ldrb	r3, [r7, #7]
 80022d2:	429a      	cmp	r2, r3
 80022d4:	d116      	bne.n	8002304 <I2C_WaitOnFlagUntilTimeout+0xa4>
 80022d6:	68fb      	ldr	r3, [r7, #12]
 80022d8:	2200      	movs	r2, #0
 80022da:	631a      	str	r2, [r3, #48]	@ 0x30
 80022dc:	68fb      	ldr	r3, [r7, #12]
 80022de:	2220      	movs	r2, #32
 80022e0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80022e4:	68fb      	ldr	r3, [r7, #12]
 80022e6:	2200      	movs	r2, #0
 80022e8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80022ec:	68fb      	ldr	r3, [r7, #12]
 80022ee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80022f0:	f043 0220 	orr.w	r2, r3, #32
 80022f4:	68fb      	ldr	r3, [r7, #12]
 80022f6:	641a      	str	r2, [r3, #64]	@ 0x40
 80022f8:	68fb      	ldr	r3, [r7, #12]
 80022fa:	2200      	movs	r2, #0
 80022fc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002300:	2301      	movs	r3, #1
 8002302:	e023      	b.n	800234c <I2C_WaitOnFlagUntilTimeout+0xec>
 8002304:	68bb      	ldr	r3, [r7, #8]
 8002306:	0c1b      	lsrs	r3, r3, #16
 8002308:	b2db      	uxtb	r3, r3
 800230a:	2b01      	cmp	r3, #1
 800230c:	d10d      	bne.n	800232a <I2C_WaitOnFlagUntilTimeout+0xca>
 800230e:	68fb      	ldr	r3, [r7, #12]
 8002310:	681b      	ldr	r3, [r3, #0]
 8002312:	695b      	ldr	r3, [r3, #20]
 8002314:	43da      	mvns	r2, r3
 8002316:	68bb      	ldr	r3, [r7, #8]
 8002318:	4013      	ands	r3, r2
 800231a:	b29b      	uxth	r3, r3
 800231c:	2b00      	cmp	r3, #0
 800231e:	bf0c      	ite	eq
 8002320:	2301      	moveq	r3, #1
 8002322:	2300      	movne	r3, #0
 8002324:	b2db      	uxtb	r3, r3
 8002326:	461a      	mov	r2, r3
 8002328:	e00c      	b.n	8002344 <I2C_WaitOnFlagUntilTimeout+0xe4>
 800232a:	68fb      	ldr	r3, [r7, #12]
 800232c:	681b      	ldr	r3, [r3, #0]
 800232e:	699b      	ldr	r3, [r3, #24]
 8002330:	43da      	mvns	r2, r3
 8002332:	68bb      	ldr	r3, [r7, #8]
 8002334:	4013      	ands	r3, r2
 8002336:	b29b      	uxth	r3, r3
 8002338:	2b00      	cmp	r3, #0
 800233a:	bf0c      	ite	eq
 800233c:	2301      	moveq	r3, #1
 800233e:	2300      	movne	r3, #0
 8002340:	b2db      	uxtb	r3, r3
 8002342:	461a      	mov	r2, r3
 8002344:	79fb      	ldrb	r3, [r7, #7]
 8002346:	429a      	cmp	r2, r3
 8002348:	d093      	beq.n	8002272 <I2C_WaitOnFlagUntilTimeout+0x12>
 800234a:	2300      	movs	r3, #0
 800234c:	4618      	mov	r0, r3
 800234e:	3710      	adds	r7, #16
 8002350:	46bd      	mov	sp, r7
 8002352:	bd80      	pop	{r7, pc}

08002354 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8002354:	b580      	push	{r7, lr}
 8002356:	b084      	sub	sp, #16
 8002358:	af00      	add	r7, sp, #0
 800235a:	60f8      	str	r0, [r7, #12]
 800235c:	60b9      	str	r1, [r7, #8]
 800235e:	607a      	str	r2, [r7, #4]
 8002360:	603b      	str	r3, [r7, #0]
 8002362:	e071      	b.n	8002448 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8002364:	68fb      	ldr	r3, [r7, #12]
 8002366:	681b      	ldr	r3, [r3, #0]
 8002368:	695b      	ldr	r3, [r3, #20]
 800236a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800236e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002372:	d123      	bne.n	80023bc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8002374:	68fb      	ldr	r3, [r7, #12]
 8002376:	681b      	ldr	r3, [r3, #0]
 8002378:	681a      	ldr	r2, [r3, #0]
 800237a:	68fb      	ldr	r3, [r7, #12]
 800237c:	681b      	ldr	r3, [r3, #0]
 800237e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8002382:	601a      	str	r2, [r3, #0]
 8002384:	68fb      	ldr	r3, [r7, #12]
 8002386:	681b      	ldr	r3, [r3, #0]
 8002388:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800238c:	615a      	str	r2, [r3, #20]
 800238e:	68fb      	ldr	r3, [r7, #12]
 8002390:	2200      	movs	r2, #0
 8002392:	631a      	str	r2, [r3, #48]	@ 0x30
 8002394:	68fb      	ldr	r3, [r7, #12]
 8002396:	2220      	movs	r2, #32
 8002398:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800239c:	68fb      	ldr	r3, [r7, #12]
 800239e:	2200      	movs	r2, #0
 80023a0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80023a4:	68fb      	ldr	r3, [r7, #12]
 80023a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80023a8:	f043 0204 	orr.w	r2, r3, #4
 80023ac:	68fb      	ldr	r3, [r7, #12]
 80023ae:	641a      	str	r2, [r3, #64]	@ 0x40
 80023b0:	68fb      	ldr	r3, [r7, #12]
 80023b2:	2200      	movs	r2, #0
 80023b4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80023b8:	2301      	movs	r3, #1
 80023ba:	e067      	b.n	800248c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	f1b3 3fff 	cmp.w	r3, #4294967295
 80023c2:	d041      	beq.n	8002448 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 80023c4:	f7ff f8b0 	bl	8001528 <HAL_GetTick>
 80023c8:	4602      	mov	r2, r0
 80023ca:	683b      	ldr	r3, [r7, #0]
 80023cc:	1ad3      	subs	r3, r2, r3
 80023ce:	687a      	ldr	r2, [r7, #4]
 80023d0:	429a      	cmp	r2, r3
 80023d2:	d302      	bcc.n	80023da <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 80023d4:	687b      	ldr	r3, [r7, #4]
 80023d6:	2b00      	cmp	r3, #0
 80023d8:	d136      	bne.n	8002448 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 80023da:	68bb      	ldr	r3, [r7, #8]
 80023dc:	0c1b      	lsrs	r3, r3, #16
 80023de:	b2db      	uxtb	r3, r3
 80023e0:	2b01      	cmp	r3, #1
 80023e2:	d10c      	bne.n	80023fe <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 80023e4:	68fb      	ldr	r3, [r7, #12]
 80023e6:	681b      	ldr	r3, [r3, #0]
 80023e8:	695b      	ldr	r3, [r3, #20]
 80023ea:	43da      	mvns	r2, r3
 80023ec:	68bb      	ldr	r3, [r7, #8]
 80023ee:	4013      	ands	r3, r2
 80023f0:	b29b      	uxth	r3, r3
 80023f2:	2b00      	cmp	r3, #0
 80023f4:	bf14      	ite	ne
 80023f6:	2301      	movne	r3, #1
 80023f8:	2300      	moveq	r3, #0
 80023fa:	b2db      	uxtb	r3, r3
 80023fc:	e00b      	b.n	8002416 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 80023fe:	68fb      	ldr	r3, [r7, #12]
 8002400:	681b      	ldr	r3, [r3, #0]
 8002402:	699b      	ldr	r3, [r3, #24]
 8002404:	43da      	mvns	r2, r3
 8002406:	68bb      	ldr	r3, [r7, #8]
 8002408:	4013      	ands	r3, r2
 800240a:	b29b      	uxth	r3, r3
 800240c:	2b00      	cmp	r3, #0
 800240e:	bf14      	ite	ne
 8002410:	2301      	movne	r3, #1
 8002412:	2300      	moveq	r3, #0
 8002414:	b2db      	uxtb	r3, r3
 8002416:	2b00      	cmp	r3, #0
 8002418:	d016      	beq.n	8002448 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 800241a:	68fb      	ldr	r3, [r7, #12]
 800241c:	2200      	movs	r2, #0
 800241e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002420:	68fb      	ldr	r3, [r7, #12]
 8002422:	2220      	movs	r2, #32
 8002424:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002428:	68fb      	ldr	r3, [r7, #12]
 800242a:	2200      	movs	r2, #0
 800242c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002430:	68fb      	ldr	r3, [r7, #12]
 8002432:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002434:	f043 0220 	orr.w	r2, r3, #32
 8002438:	68fb      	ldr	r3, [r7, #12]
 800243a:	641a      	str	r2, [r3, #64]	@ 0x40
 800243c:	68fb      	ldr	r3, [r7, #12]
 800243e:	2200      	movs	r2, #0
 8002440:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002444:	2301      	movs	r3, #1
 8002446:	e021      	b.n	800248c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8002448:	68bb      	ldr	r3, [r7, #8]
 800244a:	0c1b      	lsrs	r3, r3, #16
 800244c:	b2db      	uxtb	r3, r3
 800244e:	2b01      	cmp	r3, #1
 8002450:	d10c      	bne.n	800246c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 8002452:	68fb      	ldr	r3, [r7, #12]
 8002454:	681b      	ldr	r3, [r3, #0]
 8002456:	695b      	ldr	r3, [r3, #20]
 8002458:	43da      	mvns	r2, r3
 800245a:	68bb      	ldr	r3, [r7, #8]
 800245c:	4013      	ands	r3, r2
 800245e:	b29b      	uxth	r3, r3
 8002460:	2b00      	cmp	r3, #0
 8002462:	bf14      	ite	ne
 8002464:	2301      	movne	r3, #1
 8002466:	2300      	moveq	r3, #0
 8002468:	b2db      	uxtb	r3, r3
 800246a:	e00b      	b.n	8002484 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 800246c:	68fb      	ldr	r3, [r7, #12]
 800246e:	681b      	ldr	r3, [r3, #0]
 8002470:	699b      	ldr	r3, [r3, #24]
 8002472:	43da      	mvns	r2, r3
 8002474:	68bb      	ldr	r3, [r7, #8]
 8002476:	4013      	ands	r3, r2
 8002478:	b29b      	uxth	r3, r3
 800247a:	2b00      	cmp	r3, #0
 800247c:	bf14      	ite	ne
 800247e:	2301      	movne	r3, #1
 8002480:	2300      	moveq	r3, #0
 8002482:	b2db      	uxtb	r3, r3
 8002484:	2b00      	cmp	r3, #0
 8002486:	f47f af6d 	bne.w	8002364 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 800248a:	2300      	movs	r3, #0
 800248c:	4618      	mov	r0, r3
 800248e:	3710      	adds	r7, #16
 8002490:	46bd      	mov	sp, r7
 8002492:	bd80      	pop	{r7, pc}

08002494 <I2C_WaitOnTXEFlagUntilTimeout>:
 8002494:	b580      	push	{r7, lr}
 8002496:	b084      	sub	sp, #16
 8002498:	af00      	add	r7, sp, #0
 800249a:	60f8      	str	r0, [r7, #12]
 800249c:	60b9      	str	r1, [r7, #8]
 800249e:	607a      	str	r2, [r7, #4]
 80024a0:	e034      	b.n	800250c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80024a2:	68f8      	ldr	r0, [r7, #12]
 80024a4:	f000 f886 	bl	80025b4 <I2C_IsAcknowledgeFailed>
 80024a8:	4603      	mov	r3, r0
 80024aa:	2b00      	cmp	r3, #0
 80024ac:	d001      	beq.n	80024b2 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 80024ae:	2301      	movs	r3, #1
 80024b0:	e034      	b.n	800251c <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 80024b2:	68bb      	ldr	r3, [r7, #8]
 80024b4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80024b8:	d028      	beq.n	800250c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80024ba:	f7ff f835 	bl	8001528 <HAL_GetTick>
 80024be:	4602      	mov	r2, r0
 80024c0:	687b      	ldr	r3, [r7, #4]
 80024c2:	1ad3      	subs	r3, r2, r3
 80024c4:	68ba      	ldr	r2, [r7, #8]
 80024c6:	429a      	cmp	r2, r3
 80024c8:	d302      	bcc.n	80024d0 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 80024ca:	68bb      	ldr	r3, [r7, #8]
 80024cc:	2b00      	cmp	r3, #0
 80024ce:	d11d      	bne.n	800250c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80024d0:	68fb      	ldr	r3, [r7, #12]
 80024d2:	681b      	ldr	r3, [r3, #0]
 80024d4:	695b      	ldr	r3, [r3, #20]
 80024d6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80024da:	2b80      	cmp	r3, #128	@ 0x80
 80024dc:	d016      	beq.n	800250c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80024de:	68fb      	ldr	r3, [r7, #12]
 80024e0:	2200      	movs	r2, #0
 80024e2:	631a      	str	r2, [r3, #48]	@ 0x30
 80024e4:	68fb      	ldr	r3, [r7, #12]
 80024e6:	2220      	movs	r2, #32
 80024e8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80024ec:	68fb      	ldr	r3, [r7, #12]
 80024ee:	2200      	movs	r2, #0
 80024f0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80024f4:	68fb      	ldr	r3, [r7, #12]
 80024f6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80024f8:	f043 0220 	orr.w	r2, r3, #32
 80024fc:	68fb      	ldr	r3, [r7, #12]
 80024fe:	641a      	str	r2, [r3, #64]	@ 0x40
 8002500:	68fb      	ldr	r3, [r7, #12]
 8002502:	2200      	movs	r2, #0
 8002504:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002508:	2301      	movs	r3, #1
 800250a:	e007      	b.n	800251c <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 800250c:	68fb      	ldr	r3, [r7, #12]
 800250e:	681b      	ldr	r3, [r3, #0]
 8002510:	695b      	ldr	r3, [r3, #20]
 8002512:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002516:	2b80      	cmp	r3, #128	@ 0x80
 8002518:	d1c3      	bne.n	80024a2 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 800251a:	2300      	movs	r3, #0
 800251c:	4618      	mov	r0, r3
 800251e:	3710      	adds	r7, #16
 8002520:	46bd      	mov	sp, r7
 8002522:	bd80      	pop	{r7, pc}

08002524 <I2C_WaitOnBTFFlagUntilTimeout>:
 8002524:	b580      	push	{r7, lr}
 8002526:	b084      	sub	sp, #16
 8002528:	af00      	add	r7, sp, #0
 800252a:	60f8      	str	r0, [r7, #12]
 800252c:	60b9      	str	r1, [r7, #8]
 800252e:	607a      	str	r2, [r7, #4]
 8002530:	e034      	b.n	800259c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8002532:	68f8      	ldr	r0, [r7, #12]
 8002534:	f000 f83e 	bl	80025b4 <I2C_IsAcknowledgeFailed>
 8002538:	4603      	mov	r3, r0
 800253a:	2b00      	cmp	r3, #0
 800253c:	d001      	beq.n	8002542 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 800253e:	2301      	movs	r3, #1
 8002540:	e034      	b.n	80025ac <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8002542:	68bb      	ldr	r3, [r7, #8]
 8002544:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002548:	d028      	beq.n	800259c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800254a:	f7fe ffed 	bl	8001528 <HAL_GetTick>
 800254e:	4602      	mov	r2, r0
 8002550:	687b      	ldr	r3, [r7, #4]
 8002552:	1ad3      	subs	r3, r2, r3
 8002554:	68ba      	ldr	r2, [r7, #8]
 8002556:	429a      	cmp	r2, r3
 8002558:	d302      	bcc.n	8002560 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 800255a:	68bb      	ldr	r3, [r7, #8]
 800255c:	2b00      	cmp	r3, #0
 800255e:	d11d      	bne.n	800259c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8002560:	68fb      	ldr	r3, [r7, #12]
 8002562:	681b      	ldr	r3, [r3, #0]
 8002564:	695b      	ldr	r3, [r3, #20]
 8002566:	f003 0304 	and.w	r3, r3, #4
 800256a:	2b04      	cmp	r3, #4
 800256c:	d016      	beq.n	800259c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800256e:	68fb      	ldr	r3, [r7, #12]
 8002570:	2200      	movs	r2, #0
 8002572:	631a      	str	r2, [r3, #48]	@ 0x30
 8002574:	68fb      	ldr	r3, [r7, #12]
 8002576:	2220      	movs	r2, #32
 8002578:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800257c:	68fb      	ldr	r3, [r7, #12]
 800257e:	2200      	movs	r2, #0
 8002580:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002584:	68fb      	ldr	r3, [r7, #12]
 8002586:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002588:	f043 0220 	orr.w	r2, r3, #32
 800258c:	68fb      	ldr	r3, [r7, #12]
 800258e:	641a      	str	r2, [r3, #64]	@ 0x40
 8002590:	68fb      	ldr	r3, [r7, #12]
 8002592:	2200      	movs	r2, #0
 8002594:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002598:	2301      	movs	r3, #1
 800259a:	e007      	b.n	80025ac <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 800259c:	68fb      	ldr	r3, [r7, #12]
 800259e:	681b      	ldr	r3, [r3, #0]
 80025a0:	695b      	ldr	r3, [r3, #20]
 80025a2:	f003 0304 	and.w	r3, r3, #4
 80025a6:	2b04      	cmp	r3, #4
 80025a8:	d1c3      	bne.n	8002532 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 80025aa:	2300      	movs	r3, #0
 80025ac:	4618      	mov	r0, r3
 80025ae:	3710      	adds	r7, #16
 80025b0:	46bd      	mov	sp, r7
 80025b2:	bd80      	pop	{r7, pc}

080025b4 <I2C_IsAcknowledgeFailed>:
 80025b4:	b480      	push	{r7}
 80025b6:	b083      	sub	sp, #12
 80025b8:	af00      	add	r7, sp, #0
 80025ba:	6078      	str	r0, [r7, #4]
 80025bc:	687b      	ldr	r3, [r7, #4]
 80025be:	681b      	ldr	r3, [r3, #0]
 80025c0:	695b      	ldr	r3, [r3, #20]
 80025c2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80025c6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80025ca:	d11b      	bne.n	8002604 <I2C_IsAcknowledgeFailed+0x50>
 80025cc:	687b      	ldr	r3, [r7, #4]
 80025ce:	681b      	ldr	r3, [r3, #0]
 80025d0:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 80025d4:	615a      	str	r2, [r3, #20]
 80025d6:	687b      	ldr	r3, [r7, #4]
 80025d8:	2200      	movs	r2, #0
 80025da:	631a      	str	r2, [r3, #48]	@ 0x30
 80025dc:	687b      	ldr	r3, [r7, #4]
 80025de:	2220      	movs	r2, #32
 80025e0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80025e4:	687b      	ldr	r3, [r7, #4]
 80025e6:	2200      	movs	r2, #0
 80025e8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80025ec:	687b      	ldr	r3, [r7, #4]
 80025ee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80025f0:	f043 0204 	orr.w	r2, r3, #4
 80025f4:	687b      	ldr	r3, [r7, #4]
 80025f6:	641a      	str	r2, [r3, #64]	@ 0x40
 80025f8:	687b      	ldr	r3, [r7, #4]
 80025fa:	2200      	movs	r2, #0
 80025fc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002600:	2301      	movs	r3, #1
 8002602:	e000      	b.n	8002606 <I2C_IsAcknowledgeFailed+0x52>
 8002604:	2300      	movs	r3, #0
 8002606:	4618      	mov	r0, r3
 8002608:	370c      	adds	r7, #12
 800260a:	46bd      	mov	sp, r7
 800260c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002610:	4770      	bx	lr
	...

08002614 <HAL_RCC_ClockConfig>:
 8002614:	b580      	push	{r7, lr}
 8002616:	b084      	sub	sp, #16
 8002618:	af00      	add	r7, sp, #0
 800261a:	6078      	str	r0, [r7, #4]
 800261c:	6039      	str	r1, [r7, #0]
 800261e:	687b      	ldr	r3, [r7, #4]
 8002620:	2b00      	cmp	r3, #0
 8002622:	d101      	bne.n	8002628 <HAL_RCC_ClockConfig+0x14>
 8002624:	2301      	movs	r3, #1
 8002626:	e0cc      	b.n	80027c2 <HAL_RCC_ClockConfig+0x1ae>
 8002628:	4b68      	ldr	r3, [pc, #416]	@ (80027cc <HAL_RCC_ClockConfig+0x1b8>)
 800262a:	681b      	ldr	r3, [r3, #0]
 800262c:	f003 030f 	and.w	r3, r3, #15
 8002630:	683a      	ldr	r2, [r7, #0]
 8002632:	429a      	cmp	r2, r3
 8002634:	d90c      	bls.n	8002650 <HAL_RCC_ClockConfig+0x3c>
 8002636:	4b65      	ldr	r3, [pc, #404]	@ (80027cc <HAL_RCC_ClockConfig+0x1b8>)
 8002638:	683a      	ldr	r2, [r7, #0]
 800263a:	b2d2      	uxtb	r2, r2
 800263c:	701a      	strb	r2, [r3, #0]
 800263e:	4b63      	ldr	r3, [pc, #396]	@ (80027cc <HAL_RCC_ClockConfig+0x1b8>)
 8002640:	681b      	ldr	r3, [r3, #0]
 8002642:	f003 030f 	and.w	r3, r3, #15
 8002646:	683a      	ldr	r2, [r7, #0]
 8002648:	429a      	cmp	r2, r3
 800264a:	d001      	beq.n	8002650 <HAL_RCC_ClockConfig+0x3c>
 800264c:	2301      	movs	r3, #1
 800264e:	e0b8      	b.n	80027c2 <HAL_RCC_ClockConfig+0x1ae>
 8002650:	687b      	ldr	r3, [r7, #4]
 8002652:	681b      	ldr	r3, [r3, #0]
 8002654:	f003 0302 	and.w	r3, r3, #2
 8002658:	2b00      	cmp	r3, #0
 800265a:	d020      	beq.n	800269e <HAL_RCC_ClockConfig+0x8a>
 800265c:	687b      	ldr	r3, [r7, #4]
 800265e:	681b      	ldr	r3, [r3, #0]
 8002660:	f003 0304 	and.w	r3, r3, #4
 8002664:	2b00      	cmp	r3, #0
 8002666:	d005      	beq.n	8002674 <HAL_RCC_ClockConfig+0x60>
 8002668:	4b59      	ldr	r3, [pc, #356]	@ (80027d0 <HAL_RCC_ClockConfig+0x1bc>)
 800266a:	689b      	ldr	r3, [r3, #8]
 800266c:	4a58      	ldr	r2, [pc, #352]	@ (80027d0 <HAL_RCC_ClockConfig+0x1bc>)
 800266e:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8002672:	6093      	str	r3, [r2, #8]
 8002674:	687b      	ldr	r3, [r7, #4]
 8002676:	681b      	ldr	r3, [r3, #0]
 8002678:	f003 0308 	and.w	r3, r3, #8
 800267c:	2b00      	cmp	r3, #0
 800267e:	d005      	beq.n	800268c <HAL_RCC_ClockConfig+0x78>
 8002680:	4b53      	ldr	r3, [pc, #332]	@ (80027d0 <HAL_RCC_ClockConfig+0x1bc>)
 8002682:	689b      	ldr	r3, [r3, #8]
 8002684:	4a52      	ldr	r2, [pc, #328]	@ (80027d0 <HAL_RCC_ClockConfig+0x1bc>)
 8002686:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 800268a:	6093      	str	r3, [r2, #8]
 800268c:	4b50      	ldr	r3, [pc, #320]	@ (80027d0 <HAL_RCC_ClockConfig+0x1bc>)
 800268e:	689b      	ldr	r3, [r3, #8]
 8002690:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8002694:	687b      	ldr	r3, [r7, #4]
 8002696:	689b      	ldr	r3, [r3, #8]
 8002698:	494d      	ldr	r1, [pc, #308]	@ (80027d0 <HAL_RCC_ClockConfig+0x1bc>)
 800269a:	4313      	orrs	r3, r2
 800269c:	608b      	str	r3, [r1, #8]
 800269e:	687b      	ldr	r3, [r7, #4]
 80026a0:	681b      	ldr	r3, [r3, #0]
 80026a2:	f003 0301 	and.w	r3, r3, #1
 80026a6:	2b00      	cmp	r3, #0
 80026a8:	d044      	beq.n	8002734 <HAL_RCC_ClockConfig+0x120>
 80026aa:	687b      	ldr	r3, [r7, #4]
 80026ac:	685b      	ldr	r3, [r3, #4]
 80026ae:	2b01      	cmp	r3, #1
 80026b0:	d107      	bne.n	80026c2 <HAL_RCC_ClockConfig+0xae>
 80026b2:	4b47      	ldr	r3, [pc, #284]	@ (80027d0 <HAL_RCC_ClockConfig+0x1bc>)
 80026b4:	681b      	ldr	r3, [r3, #0]
 80026b6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80026ba:	2b00      	cmp	r3, #0
 80026bc:	d119      	bne.n	80026f2 <HAL_RCC_ClockConfig+0xde>
 80026be:	2301      	movs	r3, #1
 80026c0:	e07f      	b.n	80027c2 <HAL_RCC_ClockConfig+0x1ae>
 80026c2:	687b      	ldr	r3, [r7, #4]
 80026c4:	685b      	ldr	r3, [r3, #4]
 80026c6:	2b02      	cmp	r3, #2
 80026c8:	d003      	beq.n	80026d2 <HAL_RCC_ClockConfig+0xbe>
 80026ca:	687b      	ldr	r3, [r7, #4]
 80026cc:	685b      	ldr	r3, [r3, #4]
 80026ce:	2b03      	cmp	r3, #3
 80026d0:	d107      	bne.n	80026e2 <HAL_RCC_ClockConfig+0xce>
 80026d2:	4b3f      	ldr	r3, [pc, #252]	@ (80027d0 <HAL_RCC_ClockConfig+0x1bc>)
 80026d4:	681b      	ldr	r3, [r3, #0]
 80026d6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80026da:	2b00      	cmp	r3, #0
 80026dc:	d109      	bne.n	80026f2 <HAL_RCC_ClockConfig+0xde>
 80026de:	2301      	movs	r3, #1
 80026e0:	e06f      	b.n	80027c2 <HAL_RCC_ClockConfig+0x1ae>
 80026e2:	4b3b      	ldr	r3, [pc, #236]	@ (80027d0 <HAL_RCC_ClockConfig+0x1bc>)
 80026e4:	681b      	ldr	r3, [r3, #0]
 80026e6:	f003 0302 	and.w	r3, r3, #2
 80026ea:	2b00      	cmp	r3, #0
 80026ec:	d101      	bne.n	80026f2 <HAL_RCC_ClockConfig+0xde>
 80026ee:	2301      	movs	r3, #1
 80026f0:	e067      	b.n	80027c2 <HAL_RCC_ClockConfig+0x1ae>
 80026f2:	4b37      	ldr	r3, [pc, #220]	@ (80027d0 <HAL_RCC_ClockConfig+0x1bc>)
 80026f4:	689b      	ldr	r3, [r3, #8]
 80026f6:	f023 0203 	bic.w	r2, r3, #3
 80026fa:	687b      	ldr	r3, [r7, #4]
 80026fc:	685b      	ldr	r3, [r3, #4]
 80026fe:	4934      	ldr	r1, [pc, #208]	@ (80027d0 <HAL_RCC_ClockConfig+0x1bc>)
 8002700:	4313      	orrs	r3, r2
 8002702:	608b      	str	r3, [r1, #8]
 8002704:	f7fe ff10 	bl	8001528 <HAL_GetTick>
 8002708:	60f8      	str	r0, [r7, #12]
 800270a:	e00a      	b.n	8002722 <HAL_RCC_ClockConfig+0x10e>
 800270c:	f7fe ff0c 	bl	8001528 <HAL_GetTick>
 8002710:	4602      	mov	r2, r0
 8002712:	68fb      	ldr	r3, [r7, #12]
 8002714:	1ad3      	subs	r3, r2, r3
 8002716:	f241 3288 	movw	r2, #5000	@ 0x1388
 800271a:	4293      	cmp	r3, r2
 800271c:	d901      	bls.n	8002722 <HAL_RCC_ClockConfig+0x10e>
 800271e:	2303      	movs	r3, #3
 8002720:	e04f      	b.n	80027c2 <HAL_RCC_ClockConfig+0x1ae>
 8002722:	4b2b      	ldr	r3, [pc, #172]	@ (80027d0 <HAL_RCC_ClockConfig+0x1bc>)
 8002724:	689b      	ldr	r3, [r3, #8]
 8002726:	f003 020c 	and.w	r2, r3, #12
 800272a:	687b      	ldr	r3, [r7, #4]
 800272c:	685b      	ldr	r3, [r3, #4]
 800272e:	009b      	lsls	r3, r3, #2
 8002730:	429a      	cmp	r2, r3
 8002732:	d1eb      	bne.n	800270c <HAL_RCC_ClockConfig+0xf8>
 8002734:	4b25      	ldr	r3, [pc, #148]	@ (80027cc <HAL_RCC_ClockConfig+0x1b8>)
 8002736:	681b      	ldr	r3, [r3, #0]
 8002738:	f003 030f 	and.w	r3, r3, #15
 800273c:	683a      	ldr	r2, [r7, #0]
 800273e:	429a      	cmp	r2, r3
 8002740:	d20c      	bcs.n	800275c <HAL_RCC_ClockConfig+0x148>
 8002742:	4b22      	ldr	r3, [pc, #136]	@ (80027cc <HAL_RCC_ClockConfig+0x1b8>)
 8002744:	683a      	ldr	r2, [r7, #0]
 8002746:	b2d2      	uxtb	r2, r2
 8002748:	701a      	strb	r2, [r3, #0]
 800274a:	4b20      	ldr	r3, [pc, #128]	@ (80027cc <HAL_RCC_ClockConfig+0x1b8>)
 800274c:	681b      	ldr	r3, [r3, #0]
 800274e:	f003 030f 	and.w	r3, r3, #15
 8002752:	683a      	ldr	r2, [r7, #0]
 8002754:	429a      	cmp	r2, r3
 8002756:	d001      	beq.n	800275c <HAL_RCC_ClockConfig+0x148>
 8002758:	2301      	movs	r3, #1
 800275a:	e032      	b.n	80027c2 <HAL_RCC_ClockConfig+0x1ae>
 800275c:	687b      	ldr	r3, [r7, #4]
 800275e:	681b      	ldr	r3, [r3, #0]
 8002760:	f003 0304 	and.w	r3, r3, #4
 8002764:	2b00      	cmp	r3, #0
 8002766:	d008      	beq.n	800277a <HAL_RCC_ClockConfig+0x166>
 8002768:	4b19      	ldr	r3, [pc, #100]	@ (80027d0 <HAL_RCC_ClockConfig+0x1bc>)
 800276a:	689b      	ldr	r3, [r3, #8]
 800276c:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8002770:	687b      	ldr	r3, [r7, #4]
 8002772:	68db      	ldr	r3, [r3, #12]
 8002774:	4916      	ldr	r1, [pc, #88]	@ (80027d0 <HAL_RCC_ClockConfig+0x1bc>)
 8002776:	4313      	orrs	r3, r2
 8002778:	608b      	str	r3, [r1, #8]
 800277a:	687b      	ldr	r3, [r7, #4]
 800277c:	681b      	ldr	r3, [r3, #0]
 800277e:	f003 0308 	and.w	r3, r3, #8
 8002782:	2b00      	cmp	r3, #0
 8002784:	d009      	beq.n	800279a <HAL_RCC_ClockConfig+0x186>
 8002786:	4b12      	ldr	r3, [pc, #72]	@ (80027d0 <HAL_RCC_ClockConfig+0x1bc>)
 8002788:	689b      	ldr	r3, [r3, #8]
 800278a:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 800278e:	687b      	ldr	r3, [r7, #4]
 8002790:	691b      	ldr	r3, [r3, #16]
 8002792:	00db      	lsls	r3, r3, #3
 8002794:	490e      	ldr	r1, [pc, #56]	@ (80027d0 <HAL_RCC_ClockConfig+0x1bc>)
 8002796:	4313      	orrs	r3, r2
 8002798:	608b      	str	r3, [r1, #8]
 800279a:	f000 f841 	bl	8002820 <HAL_RCC_GetSysClockFreq>
 800279e:	4602      	mov	r2, r0
 80027a0:	4b0b      	ldr	r3, [pc, #44]	@ (80027d0 <HAL_RCC_ClockConfig+0x1bc>)
 80027a2:	689b      	ldr	r3, [r3, #8]
 80027a4:	091b      	lsrs	r3, r3, #4
 80027a6:	f003 030f 	and.w	r3, r3, #15
 80027aa:	490a      	ldr	r1, [pc, #40]	@ (80027d4 <HAL_RCC_ClockConfig+0x1c0>)
 80027ac:	5ccb      	ldrb	r3, [r1, r3]
 80027ae:	fa22 f303 	lsr.w	r3, r2, r3
 80027b2:	4a09      	ldr	r2, [pc, #36]	@ (80027d8 <HAL_RCC_ClockConfig+0x1c4>)
 80027b4:	6013      	str	r3, [r2, #0]
 80027b6:	4b09      	ldr	r3, [pc, #36]	@ (80027dc <HAL_RCC_ClockConfig+0x1c8>)
 80027b8:	681b      	ldr	r3, [r3, #0]
 80027ba:	4618      	mov	r0, r3
 80027bc:	f7fe fe70 	bl	80014a0 <HAL_InitTick>
 80027c0:	2300      	movs	r3, #0
 80027c2:	4618      	mov	r0, r3
 80027c4:	3710      	adds	r7, #16
 80027c6:	46bd      	mov	sp, r7
 80027c8:	bd80      	pop	{r7, pc}
 80027ca:	bf00      	nop
 80027cc:	40023c00 	.word	0x40023c00
 80027d0:	40023800 	.word	0x40023800
 80027d4:	08005298 	.word	0x08005298
 80027d8:	20000010 	.word	0x20000010
 80027dc:	20000014 	.word	0x20000014

080027e0 <HAL_RCC_GetHCLKFreq>:
 80027e0:	b480      	push	{r7}
 80027e2:	af00      	add	r7, sp, #0
 80027e4:	4b03      	ldr	r3, [pc, #12]	@ (80027f4 <HAL_RCC_GetHCLKFreq+0x14>)
 80027e6:	681b      	ldr	r3, [r3, #0]
 80027e8:	4618      	mov	r0, r3
 80027ea:	46bd      	mov	sp, r7
 80027ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027f0:	4770      	bx	lr
 80027f2:	bf00      	nop
 80027f4:	20000010 	.word	0x20000010

080027f8 <HAL_RCC_GetPCLK1Freq>:
 80027f8:	b580      	push	{r7, lr}
 80027fa:	af00      	add	r7, sp, #0
 80027fc:	f7ff fff0 	bl	80027e0 <HAL_RCC_GetHCLKFreq>
 8002800:	4602      	mov	r2, r0
 8002802:	4b05      	ldr	r3, [pc, #20]	@ (8002818 <HAL_RCC_GetPCLK1Freq+0x20>)
 8002804:	689b      	ldr	r3, [r3, #8]
 8002806:	0a9b      	lsrs	r3, r3, #10
 8002808:	f003 0307 	and.w	r3, r3, #7
 800280c:	4903      	ldr	r1, [pc, #12]	@ (800281c <HAL_RCC_GetPCLK1Freq+0x24>)
 800280e:	5ccb      	ldrb	r3, [r1, r3]
 8002810:	fa22 f303 	lsr.w	r3, r2, r3
 8002814:	4618      	mov	r0, r3
 8002816:	bd80      	pop	{r7, pc}
 8002818:	40023800 	.word	0x40023800
 800281c:	080052a8 	.word	0x080052a8

08002820 <HAL_RCC_GetSysClockFreq>:
 8002820:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002824:	b0a6      	sub	sp, #152	@ 0x98
 8002826:	af00      	add	r7, sp, #0
 8002828:	2300      	movs	r3, #0
 800282a:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800282e:	2300      	movs	r3, #0
 8002830:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8002834:	2300      	movs	r3, #0
 8002836:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800283a:	2300      	movs	r3, #0
 800283c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8002840:	2300      	movs	r3, #0
 8002842:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8002846:	4bc8      	ldr	r3, [pc, #800]	@ (8002b68 <HAL_RCC_GetSysClockFreq+0x348>)
 8002848:	689b      	ldr	r3, [r3, #8]
 800284a:	f003 030c 	and.w	r3, r3, #12
 800284e:	2b0c      	cmp	r3, #12
 8002850:	f200 817e 	bhi.w	8002b50 <HAL_RCC_GetSysClockFreq+0x330>
 8002854:	a201      	add	r2, pc, #4	@ (adr r2, 800285c <HAL_RCC_GetSysClockFreq+0x3c>)
 8002856:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800285a:	bf00      	nop
 800285c:	08002891 	.word	0x08002891
 8002860:	08002b51 	.word	0x08002b51
 8002864:	08002b51 	.word	0x08002b51
 8002868:	08002b51 	.word	0x08002b51
 800286c:	08002899 	.word	0x08002899
 8002870:	08002b51 	.word	0x08002b51
 8002874:	08002b51 	.word	0x08002b51
 8002878:	08002b51 	.word	0x08002b51
 800287c:	080028a1 	.word	0x080028a1
 8002880:	08002b51 	.word	0x08002b51
 8002884:	08002b51 	.word	0x08002b51
 8002888:	08002b51 	.word	0x08002b51
 800288c:	08002a0b 	.word	0x08002a0b
 8002890:	4bb6      	ldr	r3, [pc, #728]	@ (8002b6c <HAL_RCC_GetSysClockFreq+0x34c>)
 8002892:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8002896:	e15f      	b.n	8002b58 <HAL_RCC_GetSysClockFreq+0x338>
 8002898:	4bb5      	ldr	r3, [pc, #724]	@ (8002b70 <HAL_RCC_GetSysClockFreq+0x350>)
 800289a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800289e:	e15b      	b.n	8002b58 <HAL_RCC_GetSysClockFreq+0x338>
 80028a0:	4bb1      	ldr	r3, [pc, #708]	@ (8002b68 <HAL_RCC_GetSysClockFreq+0x348>)
 80028a2:	685b      	ldr	r3, [r3, #4]
 80028a4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80028a8:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80028ac:	4bae      	ldr	r3, [pc, #696]	@ (8002b68 <HAL_RCC_GetSysClockFreq+0x348>)
 80028ae:	685b      	ldr	r3, [r3, #4]
 80028b0:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80028b4:	2b00      	cmp	r3, #0
 80028b6:	d031      	beq.n	800291c <HAL_RCC_GetSysClockFreq+0xfc>
 80028b8:	4bab      	ldr	r3, [pc, #684]	@ (8002b68 <HAL_RCC_GetSysClockFreq+0x348>)
 80028ba:	685b      	ldr	r3, [r3, #4]
 80028bc:	099b      	lsrs	r3, r3, #6
 80028be:	2200      	movs	r2, #0
 80028c0:	66bb      	str	r3, [r7, #104]	@ 0x68
 80028c2:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80028c4:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80028c6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80028ca:	663b      	str	r3, [r7, #96]	@ 0x60
 80028cc:	2300      	movs	r3, #0
 80028ce:	667b      	str	r3, [r7, #100]	@ 0x64
 80028d0:	4ba7      	ldr	r3, [pc, #668]	@ (8002b70 <HAL_RCC_GetSysClockFreq+0x350>)
 80028d2:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 80028d6:	462a      	mov	r2, r5
 80028d8:	fb03 f202 	mul.w	r2, r3, r2
 80028dc:	2300      	movs	r3, #0
 80028de:	4621      	mov	r1, r4
 80028e0:	fb01 f303 	mul.w	r3, r1, r3
 80028e4:	4413      	add	r3, r2
 80028e6:	4aa2      	ldr	r2, [pc, #648]	@ (8002b70 <HAL_RCC_GetSysClockFreq+0x350>)
 80028e8:	4621      	mov	r1, r4
 80028ea:	fba1 1202 	umull	r1, r2, r1, r2
 80028ee:	67fa      	str	r2, [r7, #124]	@ 0x7c
 80028f0:	460a      	mov	r2, r1
 80028f2:	67ba      	str	r2, [r7, #120]	@ 0x78
 80028f4:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 80028f6:	4413      	add	r3, r2
 80028f8:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80028fa:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80028fe:	2200      	movs	r2, #0
 8002900:	65bb      	str	r3, [r7, #88]	@ 0x58
 8002902:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8002904:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8002908:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	@ 0x78
 800290c:	f7fd fc7a 	bl	8000204 <__aeabi_uldivmod>
 8002910:	4602      	mov	r2, r0
 8002912:	460b      	mov	r3, r1
 8002914:	4613      	mov	r3, r2
 8002916:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800291a:	e064      	b.n	80029e6 <HAL_RCC_GetSysClockFreq+0x1c6>
 800291c:	4b92      	ldr	r3, [pc, #584]	@ (8002b68 <HAL_RCC_GetSysClockFreq+0x348>)
 800291e:	685b      	ldr	r3, [r3, #4]
 8002920:	099b      	lsrs	r3, r3, #6
 8002922:	2200      	movs	r2, #0
 8002924:	653b      	str	r3, [r7, #80]	@ 0x50
 8002926:	657a      	str	r2, [r7, #84]	@ 0x54
 8002928:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800292a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800292e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002930:	2300      	movs	r3, #0
 8002932:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8002934:	e9d7 4512 	ldrd	r4, r5, [r7, #72]	@ 0x48
 8002938:	4622      	mov	r2, r4
 800293a:	462b      	mov	r3, r5
 800293c:	f04f 0000 	mov.w	r0, #0
 8002940:	f04f 0100 	mov.w	r1, #0
 8002944:	0159      	lsls	r1, r3, #5
 8002946:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800294a:	0150      	lsls	r0, r2, #5
 800294c:	4602      	mov	r2, r0
 800294e:	460b      	mov	r3, r1
 8002950:	4621      	mov	r1, r4
 8002952:	1a51      	subs	r1, r2, r1
 8002954:	6139      	str	r1, [r7, #16]
 8002956:	4629      	mov	r1, r5
 8002958:	eb63 0301 	sbc.w	r3, r3, r1
 800295c:	617b      	str	r3, [r7, #20]
 800295e:	f04f 0200 	mov.w	r2, #0
 8002962:	f04f 0300 	mov.w	r3, #0
 8002966:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800296a:	4659      	mov	r1, fp
 800296c:	018b      	lsls	r3, r1, #6
 800296e:	4651      	mov	r1, sl
 8002970:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8002974:	4651      	mov	r1, sl
 8002976:	018a      	lsls	r2, r1, #6
 8002978:	4651      	mov	r1, sl
 800297a:	ebb2 0801 	subs.w	r8, r2, r1
 800297e:	4659      	mov	r1, fp
 8002980:	eb63 0901 	sbc.w	r9, r3, r1
 8002984:	f04f 0200 	mov.w	r2, #0
 8002988:	f04f 0300 	mov.w	r3, #0
 800298c:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002990:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8002994:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002998:	4690      	mov	r8, r2
 800299a:	4699      	mov	r9, r3
 800299c:	4623      	mov	r3, r4
 800299e:	eb18 0303 	adds.w	r3, r8, r3
 80029a2:	60bb      	str	r3, [r7, #8]
 80029a4:	462b      	mov	r3, r5
 80029a6:	eb49 0303 	adc.w	r3, r9, r3
 80029aa:	60fb      	str	r3, [r7, #12]
 80029ac:	f04f 0200 	mov.w	r2, #0
 80029b0:	f04f 0300 	mov.w	r3, #0
 80029b4:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 80029b8:	4629      	mov	r1, r5
 80029ba:	028b      	lsls	r3, r1, #10
 80029bc:	4621      	mov	r1, r4
 80029be:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80029c2:	4621      	mov	r1, r4
 80029c4:	028a      	lsls	r2, r1, #10
 80029c6:	4610      	mov	r0, r2
 80029c8:	4619      	mov	r1, r3
 80029ca:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80029ce:	2200      	movs	r2, #0
 80029d0:	643b      	str	r3, [r7, #64]	@ 0x40
 80029d2:	647a      	str	r2, [r7, #68]	@ 0x44
 80029d4:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 80029d8:	f7fd fc14 	bl	8000204 <__aeabi_uldivmod>
 80029dc:	4602      	mov	r2, r0
 80029de:	460b      	mov	r3, r1
 80029e0:	4613      	mov	r3, r2
 80029e2:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80029e6:	4b60      	ldr	r3, [pc, #384]	@ (8002b68 <HAL_RCC_GetSysClockFreq+0x348>)
 80029e8:	685b      	ldr	r3, [r3, #4]
 80029ea:	0c1b      	lsrs	r3, r3, #16
 80029ec:	f003 0303 	and.w	r3, r3, #3
 80029f0:	3301      	adds	r3, #1
 80029f2:	005b      	lsls	r3, r3, #1
 80029f4:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80029f8:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 80029fc:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8002a00:	fbb2 f3f3 	udiv	r3, r2, r3
 8002a04:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8002a08:	e0a6      	b.n	8002b58 <HAL_RCC_GetSysClockFreq+0x338>
 8002a0a:	4b57      	ldr	r3, [pc, #348]	@ (8002b68 <HAL_RCC_GetSysClockFreq+0x348>)
 8002a0c:	685b      	ldr	r3, [r3, #4]
 8002a0e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8002a12:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8002a16:	4b54      	ldr	r3, [pc, #336]	@ (8002b68 <HAL_RCC_GetSysClockFreq+0x348>)
 8002a18:	685b      	ldr	r3, [r3, #4]
 8002a1a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002a1e:	2b00      	cmp	r3, #0
 8002a20:	d02a      	beq.n	8002a78 <HAL_RCC_GetSysClockFreq+0x258>
 8002a22:	4b51      	ldr	r3, [pc, #324]	@ (8002b68 <HAL_RCC_GetSysClockFreq+0x348>)
 8002a24:	685b      	ldr	r3, [r3, #4]
 8002a26:	099b      	lsrs	r3, r3, #6
 8002a28:	2200      	movs	r2, #0
 8002a2a:	63bb      	str	r3, [r7, #56]	@ 0x38
 8002a2c:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8002a2e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8002a30:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8002a34:	2100      	movs	r1, #0
 8002a36:	4b4e      	ldr	r3, [pc, #312]	@ (8002b70 <HAL_RCC_GetSysClockFreq+0x350>)
 8002a38:	fb03 f201 	mul.w	r2, r3, r1
 8002a3c:	2300      	movs	r3, #0
 8002a3e:	fb00 f303 	mul.w	r3, r0, r3
 8002a42:	4413      	add	r3, r2
 8002a44:	4a4a      	ldr	r2, [pc, #296]	@ (8002b70 <HAL_RCC_GetSysClockFreq+0x350>)
 8002a46:	fba0 1202 	umull	r1, r2, r0, r2
 8002a4a:	677a      	str	r2, [r7, #116]	@ 0x74
 8002a4c:	460a      	mov	r2, r1
 8002a4e:	673a      	str	r2, [r7, #112]	@ 0x70
 8002a50:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 8002a52:	4413      	add	r3, r2
 8002a54:	677b      	str	r3, [r7, #116]	@ 0x74
 8002a56:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8002a5a:	2200      	movs	r2, #0
 8002a5c:	633b      	str	r3, [r7, #48]	@ 0x30
 8002a5e:	637a      	str	r2, [r7, #52]	@ 0x34
 8002a60:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8002a64:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 8002a68:	f7fd fbcc 	bl	8000204 <__aeabi_uldivmod>
 8002a6c:	4602      	mov	r2, r0
 8002a6e:	460b      	mov	r3, r1
 8002a70:	4613      	mov	r3, r2
 8002a72:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8002a76:	e05b      	b.n	8002b30 <HAL_RCC_GetSysClockFreq+0x310>
 8002a78:	4b3b      	ldr	r3, [pc, #236]	@ (8002b68 <HAL_RCC_GetSysClockFreq+0x348>)
 8002a7a:	685b      	ldr	r3, [r3, #4]
 8002a7c:	099b      	lsrs	r3, r3, #6
 8002a7e:	2200      	movs	r2, #0
 8002a80:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002a82:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8002a84:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002a86:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002a8a:	623b      	str	r3, [r7, #32]
 8002a8c:	2300      	movs	r3, #0
 8002a8e:	627b      	str	r3, [r7, #36]	@ 0x24
 8002a90:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8002a94:	4642      	mov	r2, r8
 8002a96:	464b      	mov	r3, r9
 8002a98:	f04f 0000 	mov.w	r0, #0
 8002a9c:	f04f 0100 	mov.w	r1, #0
 8002aa0:	0159      	lsls	r1, r3, #5
 8002aa2:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002aa6:	0150      	lsls	r0, r2, #5
 8002aa8:	4602      	mov	r2, r0
 8002aaa:	460b      	mov	r3, r1
 8002aac:	4641      	mov	r1, r8
 8002aae:	ebb2 0a01 	subs.w	sl, r2, r1
 8002ab2:	4649      	mov	r1, r9
 8002ab4:	eb63 0b01 	sbc.w	fp, r3, r1
 8002ab8:	f04f 0200 	mov.w	r2, #0
 8002abc:	f04f 0300 	mov.w	r3, #0
 8002ac0:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8002ac4:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8002ac8:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8002acc:	ebb2 040a 	subs.w	r4, r2, sl
 8002ad0:	eb63 050b 	sbc.w	r5, r3, fp
 8002ad4:	f04f 0200 	mov.w	r2, #0
 8002ad8:	f04f 0300 	mov.w	r3, #0
 8002adc:	00eb      	lsls	r3, r5, #3
 8002ade:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002ae2:	00e2      	lsls	r2, r4, #3
 8002ae4:	4614      	mov	r4, r2
 8002ae6:	461d      	mov	r5, r3
 8002ae8:	4643      	mov	r3, r8
 8002aea:	18e3      	adds	r3, r4, r3
 8002aec:	603b      	str	r3, [r7, #0]
 8002aee:	464b      	mov	r3, r9
 8002af0:	eb45 0303 	adc.w	r3, r5, r3
 8002af4:	607b      	str	r3, [r7, #4]
 8002af6:	f04f 0200 	mov.w	r2, #0
 8002afa:	f04f 0300 	mov.w	r3, #0
 8002afe:	e9d7 4500 	ldrd	r4, r5, [r7]
 8002b02:	4629      	mov	r1, r5
 8002b04:	028b      	lsls	r3, r1, #10
 8002b06:	4621      	mov	r1, r4
 8002b08:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8002b0c:	4621      	mov	r1, r4
 8002b0e:	028a      	lsls	r2, r1, #10
 8002b10:	4610      	mov	r0, r2
 8002b12:	4619      	mov	r1, r3
 8002b14:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8002b18:	2200      	movs	r2, #0
 8002b1a:	61bb      	str	r3, [r7, #24]
 8002b1c:	61fa      	str	r2, [r7, #28]
 8002b1e:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8002b22:	f7fd fb6f 	bl	8000204 <__aeabi_uldivmod>
 8002b26:	4602      	mov	r2, r0
 8002b28:	460b      	mov	r3, r1
 8002b2a:	4613      	mov	r3, r2
 8002b2c:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8002b30:	4b0d      	ldr	r3, [pc, #52]	@ (8002b68 <HAL_RCC_GetSysClockFreq+0x348>)
 8002b32:	685b      	ldr	r3, [r3, #4]
 8002b34:	0f1b      	lsrs	r3, r3, #28
 8002b36:	f003 0307 	and.w	r3, r3, #7
 8002b3a:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8002b3e:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8002b42:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8002b46:	fbb2 f3f3 	udiv	r3, r2, r3
 8002b4a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8002b4e:	e003      	b.n	8002b58 <HAL_RCC_GetSysClockFreq+0x338>
 8002b50:	4b06      	ldr	r3, [pc, #24]	@ (8002b6c <HAL_RCC_GetSysClockFreq+0x34c>)
 8002b52:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8002b56:	bf00      	nop
 8002b58:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8002b5c:	4618      	mov	r0, r3
 8002b5e:	3798      	adds	r7, #152	@ 0x98
 8002b60:	46bd      	mov	sp, r7
 8002b62:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8002b66:	bf00      	nop
 8002b68:	40023800 	.word	0x40023800
 8002b6c:	00f42400 	.word	0x00f42400
 8002b70:	017d7840 	.word	0x017d7840

08002b74 <HAL_RCC_OscConfig>:
 8002b74:	b580      	push	{r7, lr}
 8002b76:	b086      	sub	sp, #24
 8002b78:	af00      	add	r7, sp, #0
 8002b7a:	6078      	str	r0, [r7, #4]
 8002b7c:	687b      	ldr	r3, [r7, #4]
 8002b7e:	2b00      	cmp	r3, #0
 8002b80:	d101      	bne.n	8002b86 <HAL_RCC_OscConfig+0x12>
 8002b82:	2301      	movs	r3, #1
 8002b84:	e28d      	b.n	80030a2 <HAL_RCC_OscConfig+0x52e>
 8002b86:	687b      	ldr	r3, [r7, #4]
 8002b88:	681b      	ldr	r3, [r3, #0]
 8002b8a:	f003 0301 	and.w	r3, r3, #1
 8002b8e:	2b00      	cmp	r3, #0
 8002b90:	f000 8083 	beq.w	8002c9a <HAL_RCC_OscConfig+0x126>
 8002b94:	4b94      	ldr	r3, [pc, #592]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002b96:	689b      	ldr	r3, [r3, #8]
 8002b98:	f003 030c 	and.w	r3, r3, #12
 8002b9c:	2b04      	cmp	r3, #4
 8002b9e:	d019      	beq.n	8002bd4 <HAL_RCC_OscConfig+0x60>
 8002ba0:	4b91      	ldr	r3, [pc, #580]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002ba2:	689b      	ldr	r3, [r3, #8]
 8002ba4:	f003 030c 	and.w	r3, r3, #12
 8002ba8:	2b08      	cmp	r3, #8
 8002baa:	d106      	bne.n	8002bba <HAL_RCC_OscConfig+0x46>
 8002bac:	4b8e      	ldr	r3, [pc, #568]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002bae:	685b      	ldr	r3, [r3, #4]
 8002bb0:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002bb4:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8002bb8:	d00c      	beq.n	8002bd4 <HAL_RCC_OscConfig+0x60>
 8002bba:	4b8b      	ldr	r3, [pc, #556]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002bbc:	689b      	ldr	r3, [r3, #8]
 8002bbe:	f003 030c 	and.w	r3, r3, #12
 8002bc2:	2b0c      	cmp	r3, #12
 8002bc4:	d112      	bne.n	8002bec <HAL_RCC_OscConfig+0x78>
 8002bc6:	4b88      	ldr	r3, [pc, #544]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002bc8:	685b      	ldr	r3, [r3, #4]
 8002bca:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002bce:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8002bd2:	d10b      	bne.n	8002bec <HAL_RCC_OscConfig+0x78>
 8002bd4:	4b84      	ldr	r3, [pc, #528]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002bd6:	681b      	ldr	r3, [r3, #0]
 8002bd8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002bdc:	2b00      	cmp	r3, #0
 8002bde:	d05b      	beq.n	8002c98 <HAL_RCC_OscConfig+0x124>
 8002be0:	687b      	ldr	r3, [r7, #4]
 8002be2:	685b      	ldr	r3, [r3, #4]
 8002be4:	2b00      	cmp	r3, #0
 8002be6:	d157      	bne.n	8002c98 <HAL_RCC_OscConfig+0x124>
 8002be8:	2301      	movs	r3, #1
 8002bea:	e25a      	b.n	80030a2 <HAL_RCC_OscConfig+0x52e>
 8002bec:	687b      	ldr	r3, [r7, #4]
 8002bee:	685b      	ldr	r3, [r3, #4]
 8002bf0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002bf4:	d106      	bne.n	8002c04 <HAL_RCC_OscConfig+0x90>
 8002bf6:	4b7c      	ldr	r3, [pc, #496]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002bf8:	681b      	ldr	r3, [r3, #0]
 8002bfa:	4a7b      	ldr	r2, [pc, #492]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002bfc:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002c00:	6013      	str	r3, [r2, #0]
 8002c02:	e01d      	b.n	8002c40 <HAL_RCC_OscConfig+0xcc>
 8002c04:	687b      	ldr	r3, [r7, #4]
 8002c06:	685b      	ldr	r3, [r3, #4]
 8002c08:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002c0c:	d10c      	bne.n	8002c28 <HAL_RCC_OscConfig+0xb4>
 8002c0e:	4b76      	ldr	r3, [pc, #472]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002c10:	681b      	ldr	r3, [r3, #0]
 8002c12:	4a75      	ldr	r2, [pc, #468]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002c14:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002c18:	6013      	str	r3, [r2, #0]
 8002c1a:	4b73      	ldr	r3, [pc, #460]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002c1c:	681b      	ldr	r3, [r3, #0]
 8002c1e:	4a72      	ldr	r2, [pc, #456]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002c20:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002c24:	6013      	str	r3, [r2, #0]
 8002c26:	e00b      	b.n	8002c40 <HAL_RCC_OscConfig+0xcc>
 8002c28:	4b6f      	ldr	r3, [pc, #444]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002c2a:	681b      	ldr	r3, [r3, #0]
 8002c2c:	4a6e      	ldr	r2, [pc, #440]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002c2e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002c32:	6013      	str	r3, [r2, #0]
 8002c34:	4b6c      	ldr	r3, [pc, #432]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002c36:	681b      	ldr	r3, [r3, #0]
 8002c38:	4a6b      	ldr	r2, [pc, #428]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002c3a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002c3e:	6013      	str	r3, [r2, #0]
 8002c40:	687b      	ldr	r3, [r7, #4]
 8002c42:	685b      	ldr	r3, [r3, #4]
 8002c44:	2b00      	cmp	r3, #0
 8002c46:	d013      	beq.n	8002c70 <HAL_RCC_OscConfig+0xfc>
 8002c48:	f7fe fc6e 	bl	8001528 <HAL_GetTick>
 8002c4c:	6138      	str	r0, [r7, #16]
 8002c4e:	e008      	b.n	8002c62 <HAL_RCC_OscConfig+0xee>
 8002c50:	f7fe fc6a 	bl	8001528 <HAL_GetTick>
 8002c54:	4602      	mov	r2, r0
 8002c56:	693b      	ldr	r3, [r7, #16]
 8002c58:	1ad3      	subs	r3, r2, r3
 8002c5a:	2b64      	cmp	r3, #100	@ 0x64
 8002c5c:	d901      	bls.n	8002c62 <HAL_RCC_OscConfig+0xee>
 8002c5e:	2303      	movs	r3, #3
 8002c60:	e21f      	b.n	80030a2 <HAL_RCC_OscConfig+0x52e>
 8002c62:	4b61      	ldr	r3, [pc, #388]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002c64:	681b      	ldr	r3, [r3, #0]
 8002c66:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002c6a:	2b00      	cmp	r3, #0
 8002c6c:	d0f0      	beq.n	8002c50 <HAL_RCC_OscConfig+0xdc>
 8002c6e:	e014      	b.n	8002c9a <HAL_RCC_OscConfig+0x126>
 8002c70:	f7fe fc5a 	bl	8001528 <HAL_GetTick>
 8002c74:	6138      	str	r0, [r7, #16]
 8002c76:	e008      	b.n	8002c8a <HAL_RCC_OscConfig+0x116>
 8002c78:	f7fe fc56 	bl	8001528 <HAL_GetTick>
 8002c7c:	4602      	mov	r2, r0
 8002c7e:	693b      	ldr	r3, [r7, #16]
 8002c80:	1ad3      	subs	r3, r2, r3
 8002c82:	2b64      	cmp	r3, #100	@ 0x64
 8002c84:	d901      	bls.n	8002c8a <HAL_RCC_OscConfig+0x116>
 8002c86:	2303      	movs	r3, #3
 8002c88:	e20b      	b.n	80030a2 <HAL_RCC_OscConfig+0x52e>
 8002c8a:	4b57      	ldr	r3, [pc, #348]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002c8c:	681b      	ldr	r3, [r3, #0]
 8002c8e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002c92:	2b00      	cmp	r3, #0
 8002c94:	d1f0      	bne.n	8002c78 <HAL_RCC_OscConfig+0x104>
 8002c96:	e000      	b.n	8002c9a <HAL_RCC_OscConfig+0x126>
 8002c98:	bf00      	nop
 8002c9a:	687b      	ldr	r3, [r7, #4]
 8002c9c:	681b      	ldr	r3, [r3, #0]
 8002c9e:	f003 0302 	and.w	r3, r3, #2
 8002ca2:	2b00      	cmp	r3, #0
 8002ca4:	d06f      	beq.n	8002d86 <HAL_RCC_OscConfig+0x212>
 8002ca6:	4b50      	ldr	r3, [pc, #320]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002ca8:	689b      	ldr	r3, [r3, #8]
 8002caa:	f003 030c 	and.w	r3, r3, #12
 8002cae:	2b00      	cmp	r3, #0
 8002cb0:	d017      	beq.n	8002ce2 <HAL_RCC_OscConfig+0x16e>
 8002cb2:	4b4d      	ldr	r3, [pc, #308]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002cb4:	689b      	ldr	r3, [r3, #8]
 8002cb6:	f003 030c 	and.w	r3, r3, #12
 8002cba:	2b08      	cmp	r3, #8
 8002cbc:	d105      	bne.n	8002cca <HAL_RCC_OscConfig+0x156>
 8002cbe:	4b4a      	ldr	r3, [pc, #296]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002cc0:	685b      	ldr	r3, [r3, #4]
 8002cc2:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002cc6:	2b00      	cmp	r3, #0
 8002cc8:	d00b      	beq.n	8002ce2 <HAL_RCC_OscConfig+0x16e>
 8002cca:	4b47      	ldr	r3, [pc, #284]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002ccc:	689b      	ldr	r3, [r3, #8]
 8002cce:	f003 030c 	and.w	r3, r3, #12
 8002cd2:	2b0c      	cmp	r3, #12
 8002cd4:	d11c      	bne.n	8002d10 <HAL_RCC_OscConfig+0x19c>
 8002cd6:	4b44      	ldr	r3, [pc, #272]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002cd8:	685b      	ldr	r3, [r3, #4]
 8002cda:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002cde:	2b00      	cmp	r3, #0
 8002ce0:	d116      	bne.n	8002d10 <HAL_RCC_OscConfig+0x19c>
 8002ce2:	4b41      	ldr	r3, [pc, #260]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002ce4:	681b      	ldr	r3, [r3, #0]
 8002ce6:	f003 0302 	and.w	r3, r3, #2
 8002cea:	2b00      	cmp	r3, #0
 8002cec:	d005      	beq.n	8002cfa <HAL_RCC_OscConfig+0x186>
 8002cee:	687b      	ldr	r3, [r7, #4]
 8002cf0:	68db      	ldr	r3, [r3, #12]
 8002cf2:	2b01      	cmp	r3, #1
 8002cf4:	d001      	beq.n	8002cfa <HAL_RCC_OscConfig+0x186>
 8002cf6:	2301      	movs	r3, #1
 8002cf8:	e1d3      	b.n	80030a2 <HAL_RCC_OscConfig+0x52e>
 8002cfa:	4b3b      	ldr	r3, [pc, #236]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002cfc:	681b      	ldr	r3, [r3, #0]
 8002cfe:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002d02:	687b      	ldr	r3, [r7, #4]
 8002d04:	691b      	ldr	r3, [r3, #16]
 8002d06:	00db      	lsls	r3, r3, #3
 8002d08:	4937      	ldr	r1, [pc, #220]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002d0a:	4313      	orrs	r3, r2
 8002d0c:	600b      	str	r3, [r1, #0]
 8002d0e:	e03a      	b.n	8002d86 <HAL_RCC_OscConfig+0x212>
 8002d10:	687b      	ldr	r3, [r7, #4]
 8002d12:	68db      	ldr	r3, [r3, #12]
 8002d14:	2b00      	cmp	r3, #0
 8002d16:	d020      	beq.n	8002d5a <HAL_RCC_OscConfig+0x1e6>
 8002d18:	4b34      	ldr	r3, [pc, #208]	@ (8002dec <HAL_RCC_OscConfig+0x278>)
 8002d1a:	2201      	movs	r2, #1
 8002d1c:	601a      	str	r2, [r3, #0]
 8002d1e:	f7fe fc03 	bl	8001528 <HAL_GetTick>
 8002d22:	6138      	str	r0, [r7, #16]
 8002d24:	e008      	b.n	8002d38 <HAL_RCC_OscConfig+0x1c4>
 8002d26:	f7fe fbff 	bl	8001528 <HAL_GetTick>
 8002d2a:	4602      	mov	r2, r0
 8002d2c:	693b      	ldr	r3, [r7, #16]
 8002d2e:	1ad3      	subs	r3, r2, r3
 8002d30:	2b02      	cmp	r3, #2
 8002d32:	d901      	bls.n	8002d38 <HAL_RCC_OscConfig+0x1c4>
 8002d34:	2303      	movs	r3, #3
 8002d36:	e1b4      	b.n	80030a2 <HAL_RCC_OscConfig+0x52e>
 8002d38:	4b2b      	ldr	r3, [pc, #172]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002d3a:	681b      	ldr	r3, [r3, #0]
 8002d3c:	f003 0302 	and.w	r3, r3, #2
 8002d40:	2b00      	cmp	r3, #0
 8002d42:	d0f0      	beq.n	8002d26 <HAL_RCC_OscConfig+0x1b2>
 8002d44:	4b28      	ldr	r3, [pc, #160]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002d46:	681b      	ldr	r3, [r3, #0]
 8002d48:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002d4c:	687b      	ldr	r3, [r7, #4]
 8002d4e:	691b      	ldr	r3, [r3, #16]
 8002d50:	00db      	lsls	r3, r3, #3
 8002d52:	4925      	ldr	r1, [pc, #148]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002d54:	4313      	orrs	r3, r2
 8002d56:	600b      	str	r3, [r1, #0]
 8002d58:	e015      	b.n	8002d86 <HAL_RCC_OscConfig+0x212>
 8002d5a:	4b24      	ldr	r3, [pc, #144]	@ (8002dec <HAL_RCC_OscConfig+0x278>)
 8002d5c:	2200      	movs	r2, #0
 8002d5e:	601a      	str	r2, [r3, #0]
 8002d60:	f7fe fbe2 	bl	8001528 <HAL_GetTick>
 8002d64:	6138      	str	r0, [r7, #16]
 8002d66:	e008      	b.n	8002d7a <HAL_RCC_OscConfig+0x206>
 8002d68:	f7fe fbde 	bl	8001528 <HAL_GetTick>
 8002d6c:	4602      	mov	r2, r0
 8002d6e:	693b      	ldr	r3, [r7, #16]
 8002d70:	1ad3      	subs	r3, r2, r3
 8002d72:	2b02      	cmp	r3, #2
 8002d74:	d901      	bls.n	8002d7a <HAL_RCC_OscConfig+0x206>
 8002d76:	2303      	movs	r3, #3
 8002d78:	e193      	b.n	80030a2 <HAL_RCC_OscConfig+0x52e>
 8002d7a:	4b1b      	ldr	r3, [pc, #108]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002d7c:	681b      	ldr	r3, [r3, #0]
 8002d7e:	f003 0302 	and.w	r3, r3, #2
 8002d82:	2b00      	cmp	r3, #0
 8002d84:	d1f0      	bne.n	8002d68 <HAL_RCC_OscConfig+0x1f4>
 8002d86:	687b      	ldr	r3, [r7, #4]
 8002d88:	681b      	ldr	r3, [r3, #0]
 8002d8a:	f003 0308 	and.w	r3, r3, #8
 8002d8e:	2b00      	cmp	r3, #0
 8002d90:	d036      	beq.n	8002e00 <HAL_RCC_OscConfig+0x28c>
 8002d92:	687b      	ldr	r3, [r7, #4]
 8002d94:	695b      	ldr	r3, [r3, #20]
 8002d96:	2b00      	cmp	r3, #0
 8002d98:	d016      	beq.n	8002dc8 <HAL_RCC_OscConfig+0x254>
 8002d9a:	4b15      	ldr	r3, [pc, #84]	@ (8002df0 <HAL_RCC_OscConfig+0x27c>)
 8002d9c:	2201      	movs	r2, #1
 8002d9e:	601a      	str	r2, [r3, #0]
 8002da0:	f7fe fbc2 	bl	8001528 <HAL_GetTick>
 8002da4:	6138      	str	r0, [r7, #16]
 8002da6:	e008      	b.n	8002dba <HAL_RCC_OscConfig+0x246>
 8002da8:	f7fe fbbe 	bl	8001528 <HAL_GetTick>
 8002dac:	4602      	mov	r2, r0
 8002dae:	693b      	ldr	r3, [r7, #16]
 8002db0:	1ad3      	subs	r3, r2, r3
 8002db2:	2b02      	cmp	r3, #2
 8002db4:	d901      	bls.n	8002dba <HAL_RCC_OscConfig+0x246>
 8002db6:	2303      	movs	r3, #3
 8002db8:	e173      	b.n	80030a2 <HAL_RCC_OscConfig+0x52e>
 8002dba:	4b0b      	ldr	r3, [pc, #44]	@ (8002de8 <HAL_RCC_OscConfig+0x274>)
 8002dbc:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002dbe:	f003 0302 	and.w	r3, r3, #2
 8002dc2:	2b00      	cmp	r3, #0
 8002dc4:	d0f0      	beq.n	8002da8 <HAL_RCC_OscConfig+0x234>
 8002dc6:	e01b      	b.n	8002e00 <HAL_RCC_OscConfig+0x28c>
 8002dc8:	4b09      	ldr	r3, [pc, #36]	@ (8002df0 <HAL_RCC_OscConfig+0x27c>)
 8002dca:	2200      	movs	r2, #0
 8002dcc:	601a      	str	r2, [r3, #0]
 8002dce:	f7fe fbab 	bl	8001528 <HAL_GetTick>
 8002dd2:	6138      	str	r0, [r7, #16]
 8002dd4:	e00e      	b.n	8002df4 <HAL_RCC_OscConfig+0x280>
 8002dd6:	f7fe fba7 	bl	8001528 <HAL_GetTick>
 8002dda:	4602      	mov	r2, r0
 8002ddc:	693b      	ldr	r3, [r7, #16]
 8002dde:	1ad3      	subs	r3, r2, r3
 8002de0:	2b02      	cmp	r3, #2
 8002de2:	d907      	bls.n	8002df4 <HAL_RCC_OscConfig+0x280>
 8002de4:	2303      	movs	r3, #3
 8002de6:	e15c      	b.n	80030a2 <HAL_RCC_OscConfig+0x52e>
 8002de8:	40023800 	.word	0x40023800
 8002dec:	42470000 	.word	0x42470000
 8002df0:	42470e80 	.word	0x42470e80
 8002df4:	4b8a      	ldr	r3, [pc, #552]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002df6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002df8:	f003 0302 	and.w	r3, r3, #2
 8002dfc:	2b00      	cmp	r3, #0
 8002dfe:	d1ea      	bne.n	8002dd6 <HAL_RCC_OscConfig+0x262>
 8002e00:	687b      	ldr	r3, [r7, #4]
 8002e02:	681b      	ldr	r3, [r3, #0]
 8002e04:	f003 0304 	and.w	r3, r3, #4
 8002e08:	2b00      	cmp	r3, #0
 8002e0a:	f000 8097 	beq.w	8002f3c <HAL_RCC_OscConfig+0x3c8>
 8002e0e:	2300      	movs	r3, #0
 8002e10:	75fb      	strb	r3, [r7, #23]
 8002e12:	4b83      	ldr	r3, [pc, #524]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002e14:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e16:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002e1a:	2b00      	cmp	r3, #0
 8002e1c:	d10f      	bne.n	8002e3e <HAL_RCC_OscConfig+0x2ca>
 8002e1e:	2300      	movs	r3, #0
 8002e20:	60bb      	str	r3, [r7, #8]
 8002e22:	4b7f      	ldr	r3, [pc, #508]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002e24:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e26:	4a7e      	ldr	r2, [pc, #504]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002e28:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002e2c:	6413      	str	r3, [r2, #64]	@ 0x40
 8002e2e:	4b7c      	ldr	r3, [pc, #496]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002e30:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e32:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002e36:	60bb      	str	r3, [r7, #8]
 8002e38:	68bb      	ldr	r3, [r7, #8]
 8002e3a:	2301      	movs	r3, #1
 8002e3c:	75fb      	strb	r3, [r7, #23]
 8002e3e:	4b79      	ldr	r3, [pc, #484]	@ (8003024 <HAL_RCC_OscConfig+0x4b0>)
 8002e40:	681b      	ldr	r3, [r3, #0]
 8002e42:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002e46:	2b00      	cmp	r3, #0
 8002e48:	d118      	bne.n	8002e7c <HAL_RCC_OscConfig+0x308>
 8002e4a:	4b76      	ldr	r3, [pc, #472]	@ (8003024 <HAL_RCC_OscConfig+0x4b0>)
 8002e4c:	681b      	ldr	r3, [r3, #0]
 8002e4e:	4a75      	ldr	r2, [pc, #468]	@ (8003024 <HAL_RCC_OscConfig+0x4b0>)
 8002e50:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002e54:	6013      	str	r3, [r2, #0]
 8002e56:	f7fe fb67 	bl	8001528 <HAL_GetTick>
 8002e5a:	6138      	str	r0, [r7, #16]
 8002e5c:	e008      	b.n	8002e70 <HAL_RCC_OscConfig+0x2fc>
 8002e5e:	f7fe fb63 	bl	8001528 <HAL_GetTick>
 8002e62:	4602      	mov	r2, r0
 8002e64:	693b      	ldr	r3, [r7, #16]
 8002e66:	1ad3      	subs	r3, r2, r3
 8002e68:	2b02      	cmp	r3, #2
 8002e6a:	d901      	bls.n	8002e70 <HAL_RCC_OscConfig+0x2fc>
 8002e6c:	2303      	movs	r3, #3
 8002e6e:	e118      	b.n	80030a2 <HAL_RCC_OscConfig+0x52e>
 8002e70:	4b6c      	ldr	r3, [pc, #432]	@ (8003024 <HAL_RCC_OscConfig+0x4b0>)
 8002e72:	681b      	ldr	r3, [r3, #0]
 8002e74:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002e78:	2b00      	cmp	r3, #0
 8002e7a:	d0f0      	beq.n	8002e5e <HAL_RCC_OscConfig+0x2ea>
 8002e7c:	687b      	ldr	r3, [r7, #4]
 8002e7e:	689b      	ldr	r3, [r3, #8]
 8002e80:	2b01      	cmp	r3, #1
 8002e82:	d106      	bne.n	8002e92 <HAL_RCC_OscConfig+0x31e>
 8002e84:	4b66      	ldr	r3, [pc, #408]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002e86:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002e88:	4a65      	ldr	r2, [pc, #404]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002e8a:	f043 0301 	orr.w	r3, r3, #1
 8002e8e:	6713      	str	r3, [r2, #112]	@ 0x70
 8002e90:	e01c      	b.n	8002ecc <HAL_RCC_OscConfig+0x358>
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	689b      	ldr	r3, [r3, #8]
 8002e96:	2b05      	cmp	r3, #5
 8002e98:	d10c      	bne.n	8002eb4 <HAL_RCC_OscConfig+0x340>
 8002e9a:	4b61      	ldr	r3, [pc, #388]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002e9c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002e9e:	4a60      	ldr	r2, [pc, #384]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002ea0:	f043 0304 	orr.w	r3, r3, #4
 8002ea4:	6713      	str	r3, [r2, #112]	@ 0x70
 8002ea6:	4b5e      	ldr	r3, [pc, #376]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002ea8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002eaa:	4a5d      	ldr	r2, [pc, #372]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002eac:	f043 0301 	orr.w	r3, r3, #1
 8002eb0:	6713      	str	r3, [r2, #112]	@ 0x70
 8002eb2:	e00b      	b.n	8002ecc <HAL_RCC_OscConfig+0x358>
 8002eb4:	4b5a      	ldr	r3, [pc, #360]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002eb6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002eb8:	4a59      	ldr	r2, [pc, #356]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002eba:	f023 0301 	bic.w	r3, r3, #1
 8002ebe:	6713      	str	r3, [r2, #112]	@ 0x70
 8002ec0:	4b57      	ldr	r3, [pc, #348]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002ec2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002ec4:	4a56      	ldr	r2, [pc, #344]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002ec6:	f023 0304 	bic.w	r3, r3, #4
 8002eca:	6713      	str	r3, [r2, #112]	@ 0x70
 8002ecc:	687b      	ldr	r3, [r7, #4]
 8002ece:	689b      	ldr	r3, [r3, #8]
 8002ed0:	2b00      	cmp	r3, #0
 8002ed2:	d015      	beq.n	8002f00 <HAL_RCC_OscConfig+0x38c>
 8002ed4:	f7fe fb28 	bl	8001528 <HAL_GetTick>
 8002ed8:	6138      	str	r0, [r7, #16]
 8002eda:	e00a      	b.n	8002ef2 <HAL_RCC_OscConfig+0x37e>
 8002edc:	f7fe fb24 	bl	8001528 <HAL_GetTick>
 8002ee0:	4602      	mov	r2, r0
 8002ee2:	693b      	ldr	r3, [r7, #16]
 8002ee4:	1ad3      	subs	r3, r2, r3
 8002ee6:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002eea:	4293      	cmp	r3, r2
 8002eec:	d901      	bls.n	8002ef2 <HAL_RCC_OscConfig+0x37e>
 8002eee:	2303      	movs	r3, #3
 8002ef0:	e0d7      	b.n	80030a2 <HAL_RCC_OscConfig+0x52e>
 8002ef2:	4b4b      	ldr	r3, [pc, #300]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002ef4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002ef6:	f003 0302 	and.w	r3, r3, #2
 8002efa:	2b00      	cmp	r3, #0
 8002efc:	d0ee      	beq.n	8002edc <HAL_RCC_OscConfig+0x368>
 8002efe:	e014      	b.n	8002f2a <HAL_RCC_OscConfig+0x3b6>
 8002f00:	f7fe fb12 	bl	8001528 <HAL_GetTick>
 8002f04:	6138      	str	r0, [r7, #16]
 8002f06:	e00a      	b.n	8002f1e <HAL_RCC_OscConfig+0x3aa>
 8002f08:	f7fe fb0e 	bl	8001528 <HAL_GetTick>
 8002f0c:	4602      	mov	r2, r0
 8002f0e:	693b      	ldr	r3, [r7, #16]
 8002f10:	1ad3      	subs	r3, r2, r3
 8002f12:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002f16:	4293      	cmp	r3, r2
 8002f18:	d901      	bls.n	8002f1e <HAL_RCC_OscConfig+0x3aa>
 8002f1a:	2303      	movs	r3, #3
 8002f1c:	e0c1      	b.n	80030a2 <HAL_RCC_OscConfig+0x52e>
 8002f1e:	4b40      	ldr	r3, [pc, #256]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002f20:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002f22:	f003 0302 	and.w	r3, r3, #2
 8002f26:	2b00      	cmp	r3, #0
 8002f28:	d1ee      	bne.n	8002f08 <HAL_RCC_OscConfig+0x394>
 8002f2a:	7dfb      	ldrb	r3, [r7, #23]
 8002f2c:	2b01      	cmp	r3, #1
 8002f2e:	d105      	bne.n	8002f3c <HAL_RCC_OscConfig+0x3c8>
 8002f30:	4b3b      	ldr	r3, [pc, #236]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002f32:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f34:	4a3a      	ldr	r2, [pc, #232]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002f36:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002f3a:	6413      	str	r3, [r2, #64]	@ 0x40
 8002f3c:	687b      	ldr	r3, [r7, #4]
 8002f3e:	699b      	ldr	r3, [r3, #24]
 8002f40:	2b00      	cmp	r3, #0
 8002f42:	f000 80ad 	beq.w	80030a0 <HAL_RCC_OscConfig+0x52c>
 8002f46:	4b36      	ldr	r3, [pc, #216]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002f48:	689b      	ldr	r3, [r3, #8]
 8002f4a:	f003 030c 	and.w	r3, r3, #12
 8002f4e:	2b08      	cmp	r3, #8
 8002f50:	d060      	beq.n	8003014 <HAL_RCC_OscConfig+0x4a0>
 8002f52:	687b      	ldr	r3, [r7, #4]
 8002f54:	699b      	ldr	r3, [r3, #24]
 8002f56:	2b02      	cmp	r3, #2
 8002f58:	d145      	bne.n	8002fe6 <HAL_RCC_OscConfig+0x472>
 8002f5a:	4b33      	ldr	r3, [pc, #204]	@ (8003028 <HAL_RCC_OscConfig+0x4b4>)
 8002f5c:	2200      	movs	r2, #0
 8002f5e:	601a      	str	r2, [r3, #0]
 8002f60:	f7fe fae2 	bl	8001528 <HAL_GetTick>
 8002f64:	6138      	str	r0, [r7, #16]
 8002f66:	e008      	b.n	8002f7a <HAL_RCC_OscConfig+0x406>
 8002f68:	f7fe fade 	bl	8001528 <HAL_GetTick>
 8002f6c:	4602      	mov	r2, r0
 8002f6e:	693b      	ldr	r3, [r7, #16]
 8002f70:	1ad3      	subs	r3, r2, r3
 8002f72:	2b02      	cmp	r3, #2
 8002f74:	d901      	bls.n	8002f7a <HAL_RCC_OscConfig+0x406>
 8002f76:	2303      	movs	r3, #3
 8002f78:	e093      	b.n	80030a2 <HAL_RCC_OscConfig+0x52e>
 8002f7a:	4b29      	ldr	r3, [pc, #164]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002f7c:	681b      	ldr	r3, [r3, #0]
 8002f7e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002f82:	2b00      	cmp	r3, #0
 8002f84:	d1f0      	bne.n	8002f68 <HAL_RCC_OscConfig+0x3f4>
 8002f86:	687b      	ldr	r3, [r7, #4]
 8002f88:	69da      	ldr	r2, [r3, #28]
 8002f8a:	687b      	ldr	r3, [r7, #4]
 8002f8c:	6a1b      	ldr	r3, [r3, #32]
 8002f8e:	431a      	orrs	r2, r3
 8002f90:	687b      	ldr	r3, [r7, #4]
 8002f92:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002f94:	019b      	lsls	r3, r3, #6
 8002f96:	431a      	orrs	r2, r3
 8002f98:	687b      	ldr	r3, [r7, #4]
 8002f9a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002f9c:	085b      	lsrs	r3, r3, #1
 8002f9e:	3b01      	subs	r3, #1
 8002fa0:	041b      	lsls	r3, r3, #16
 8002fa2:	431a      	orrs	r2, r3
 8002fa4:	687b      	ldr	r3, [r7, #4]
 8002fa6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002fa8:	061b      	lsls	r3, r3, #24
 8002faa:	431a      	orrs	r2, r3
 8002fac:	687b      	ldr	r3, [r7, #4]
 8002fae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002fb0:	071b      	lsls	r3, r3, #28
 8002fb2:	491b      	ldr	r1, [pc, #108]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002fb4:	4313      	orrs	r3, r2
 8002fb6:	604b      	str	r3, [r1, #4]
 8002fb8:	4b1b      	ldr	r3, [pc, #108]	@ (8003028 <HAL_RCC_OscConfig+0x4b4>)
 8002fba:	2201      	movs	r2, #1
 8002fbc:	601a      	str	r2, [r3, #0]
 8002fbe:	f7fe fab3 	bl	8001528 <HAL_GetTick>
 8002fc2:	6138      	str	r0, [r7, #16]
 8002fc4:	e008      	b.n	8002fd8 <HAL_RCC_OscConfig+0x464>
 8002fc6:	f7fe faaf 	bl	8001528 <HAL_GetTick>
 8002fca:	4602      	mov	r2, r0
 8002fcc:	693b      	ldr	r3, [r7, #16]
 8002fce:	1ad3      	subs	r3, r2, r3
 8002fd0:	2b02      	cmp	r3, #2
 8002fd2:	d901      	bls.n	8002fd8 <HAL_RCC_OscConfig+0x464>
 8002fd4:	2303      	movs	r3, #3
 8002fd6:	e064      	b.n	80030a2 <HAL_RCC_OscConfig+0x52e>
 8002fd8:	4b11      	ldr	r3, [pc, #68]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8002fda:	681b      	ldr	r3, [r3, #0]
 8002fdc:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002fe0:	2b00      	cmp	r3, #0
 8002fe2:	d0f0      	beq.n	8002fc6 <HAL_RCC_OscConfig+0x452>
 8002fe4:	e05c      	b.n	80030a0 <HAL_RCC_OscConfig+0x52c>
 8002fe6:	4b10      	ldr	r3, [pc, #64]	@ (8003028 <HAL_RCC_OscConfig+0x4b4>)
 8002fe8:	2200      	movs	r2, #0
 8002fea:	601a      	str	r2, [r3, #0]
 8002fec:	f7fe fa9c 	bl	8001528 <HAL_GetTick>
 8002ff0:	6138      	str	r0, [r7, #16]
 8002ff2:	e008      	b.n	8003006 <HAL_RCC_OscConfig+0x492>
 8002ff4:	f7fe fa98 	bl	8001528 <HAL_GetTick>
 8002ff8:	4602      	mov	r2, r0
 8002ffa:	693b      	ldr	r3, [r7, #16]
 8002ffc:	1ad3      	subs	r3, r2, r3
 8002ffe:	2b02      	cmp	r3, #2
 8003000:	d901      	bls.n	8003006 <HAL_RCC_OscConfig+0x492>
 8003002:	2303      	movs	r3, #3
 8003004:	e04d      	b.n	80030a2 <HAL_RCC_OscConfig+0x52e>
 8003006:	4b06      	ldr	r3, [pc, #24]	@ (8003020 <HAL_RCC_OscConfig+0x4ac>)
 8003008:	681b      	ldr	r3, [r3, #0]
 800300a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800300e:	2b00      	cmp	r3, #0
 8003010:	d1f0      	bne.n	8002ff4 <HAL_RCC_OscConfig+0x480>
 8003012:	e045      	b.n	80030a0 <HAL_RCC_OscConfig+0x52c>
 8003014:	687b      	ldr	r3, [r7, #4]
 8003016:	699b      	ldr	r3, [r3, #24]
 8003018:	2b01      	cmp	r3, #1
 800301a:	d107      	bne.n	800302c <HAL_RCC_OscConfig+0x4b8>
 800301c:	2301      	movs	r3, #1
 800301e:	e040      	b.n	80030a2 <HAL_RCC_OscConfig+0x52e>
 8003020:	40023800 	.word	0x40023800
 8003024:	40007000 	.word	0x40007000
 8003028:	42470060 	.word	0x42470060
 800302c:	4b1f      	ldr	r3, [pc, #124]	@ (80030ac <HAL_RCC_OscConfig+0x538>)
 800302e:	685b      	ldr	r3, [r3, #4]
 8003030:	60fb      	str	r3, [r7, #12]
 8003032:	687b      	ldr	r3, [r7, #4]
 8003034:	699b      	ldr	r3, [r3, #24]
 8003036:	2b01      	cmp	r3, #1
 8003038:	d030      	beq.n	800309c <HAL_RCC_OscConfig+0x528>
 800303a:	68fb      	ldr	r3, [r7, #12]
 800303c:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8003040:	687b      	ldr	r3, [r7, #4]
 8003042:	69db      	ldr	r3, [r3, #28]
 8003044:	429a      	cmp	r2, r3
 8003046:	d129      	bne.n	800309c <HAL_RCC_OscConfig+0x528>
 8003048:	68fb      	ldr	r3, [r7, #12]
 800304a:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	6a1b      	ldr	r3, [r3, #32]
 8003052:	429a      	cmp	r2, r3
 8003054:	d122      	bne.n	800309c <HAL_RCC_OscConfig+0x528>
 8003056:	68fa      	ldr	r2, [r7, #12]
 8003058:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 800305c:	4013      	ands	r3, r2
 800305e:	687a      	ldr	r2, [r7, #4]
 8003060:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8003062:	0192      	lsls	r2, r2, #6
 8003064:	4293      	cmp	r3, r2
 8003066:	d119      	bne.n	800309c <HAL_RCC_OscConfig+0x528>
 8003068:	68fb      	ldr	r3, [r7, #12]
 800306a:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 800306e:	687b      	ldr	r3, [r7, #4]
 8003070:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003072:	085b      	lsrs	r3, r3, #1
 8003074:	3b01      	subs	r3, #1
 8003076:	041b      	lsls	r3, r3, #16
 8003078:	429a      	cmp	r2, r3
 800307a:	d10f      	bne.n	800309c <HAL_RCC_OscConfig+0x528>
 800307c:	68fb      	ldr	r3, [r7, #12]
 800307e:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8003082:	687b      	ldr	r3, [r7, #4]
 8003084:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003086:	061b      	lsls	r3, r3, #24
 8003088:	429a      	cmp	r2, r3
 800308a:	d107      	bne.n	800309c <HAL_RCC_OscConfig+0x528>
 800308c:	68fb      	ldr	r3, [r7, #12]
 800308e:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 8003092:	687b      	ldr	r3, [r7, #4]
 8003094:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003096:	071b      	lsls	r3, r3, #28
 8003098:	429a      	cmp	r2, r3
 800309a:	d001      	beq.n	80030a0 <HAL_RCC_OscConfig+0x52c>
 800309c:	2301      	movs	r3, #1
 800309e:	e000      	b.n	80030a2 <HAL_RCC_OscConfig+0x52e>
 80030a0:	2300      	movs	r3, #0
 80030a2:	4618      	mov	r0, r3
 80030a4:	3718      	adds	r7, #24
 80030a6:	46bd      	mov	sp, r7
 80030a8:	bd80      	pop	{r7, pc}
 80030aa:	bf00      	nop
 80030ac:	40023800 	.word	0x40023800

080030b0 <__itoa>:
 80030b0:	1e93      	subs	r3, r2, #2
 80030b2:	2b22      	cmp	r3, #34	@ 0x22
 80030b4:	b510      	push	{r4, lr}
 80030b6:	460c      	mov	r4, r1
 80030b8:	d904      	bls.n	80030c4 <__itoa+0x14>
 80030ba:	2300      	movs	r3, #0
 80030bc:	700b      	strb	r3, [r1, #0]
 80030be:	461c      	mov	r4, r3
 80030c0:	4620      	mov	r0, r4
 80030c2:	bd10      	pop	{r4, pc}
 80030c4:	2a0a      	cmp	r2, #10
 80030c6:	d109      	bne.n	80030dc <__itoa+0x2c>
 80030c8:	2800      	cmp	r0, #0
 80030ca:	da07      	bge.n	80030dc <__itoa+0x2c>
 80030cc:	232d      	movs	r3, #45	@ 0x2d
 80030ce:	700b      	strb	r3, [r1, #0]
 80030d0:	4240      	negs	r0, r0
 80030d2:	2101      	movs	r1, #1
 80030d4:	4421      	add	r1, r4
 80030d6:	f000 f805 	bl	80030e4 <__utoa>
 80030da:	e7f1      	b.n	80030c0 <__itoa+0x10>
 80030dc:	2100      	movs	r1, #0
 80030de:	e7f9      	b.n	80030d4 <__itoa+0x24>

080030e0 <itoa>:
 80030e0:	f7ff bfe6 	b.w	80030b0 <__itoa>

080030e4 <__utoa>:
 80030e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80030e6:	4c1f      	ldr	r4, [pc, #124]	@ (8003164 <__utoa+0x80>)
 80030e8:	b08b      	sub	sp, #44	@ 0x2c
 80030ea:	4605      	mov	r5, r0
 80030ec:	460b      	mov	r3, r1
 80030ee:	466e      	mov	r6, sp
 80030f0:	f104 0c20 	add.w	ip, r4, #32
 80030f4:	6820      	ldr	r0, [r4, #0]
 80030f6:	6861      	ldr	r1, [r4, #4]
 80030f8:	4637      	mov	r7, r6
 80030fa:	c703      	stmia	r7!, {r0, r1}
 80030fc:	3408      	adds	r4, #8
 80030fe:	4564      	cmp	r4, ip
 8003100:	463e      	mov	r6, r7
 8003102:	d1f7      	bne.n	80030f4 <__utoa+0x10>
 8003104:	7921      	ldrb	r1, [r4, #4]
 8003106:	7139      	strb	r1, [r7, #4]
 8003108:	1e91      	subs	r1, r2, #2
 800310a:	6820      	ldr	r0, [r4, #0]
 800310c:	6038      	str	r0, [r7, #0]
 800310e:	2922      	cmp	r1, #34	@ 0x22
 8003110:	f04f 0100 	mov.w	r1, #0
 8003114:	d904      	bls.n	8003120 <__utoa+0x3c>
 8003116:	7019      	strb	r1, [r3, #0]
 8003118:	460b      	mov	r3, r1
 800311a:	4618      	mov	r0, r3
 800311c:	b00b      	add	sp, #44	@ 0x2c
 800311e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003120:	1e58      	subs	r0, r3, #1
 8003122:	4684      	mov	ip, r0
 8003124:	fbb5 f7f2 	udiv	r7, r5, r2
 8003128:	fb02 5617 	mls	r6, r2, r7, r5
 800312c:	3628      	adds	r6, #40	@ 0x28
 800312e:	446e      	add	r6, sp
 8003130:	460c      	mov	r4, r1
 8003132:	f816 6c28 	ldrb.w	r6, [r6, #-40]
 8003136:	f80c 6f01 	strb.w	r6, [ip, #1]!
 800313a:	462e      	mov	r6, r5
 800313c:	42b2      	cmp	r2, r6
 800313e:	f101 0101 	add.w	r1, r1, #1
 8003142:	463d      	mov	r5, r7
 8003144:	d9ee      	bls.n	8003124 <__utoa+0x40>
 8003146:	2200      	movs	r2, #0
 8003148:	545a      	strb	r2, [r3, r1]
 800314a:	1919      	adds	r1, r3, r4
 800314c:	1aa5      	subs	r5, r4, r2
 800314e:	42aa      	cmp	r2, r5
 8003150:	dae3      	bge.n	800311a <__utoa+0x36>
 8003152:	f810 5f01 	ldrb.w	r5, [r0, #1]!
 8003156:	780e      	ldrb	r6, [r1, #0]
 8003158:	7006      	strb	r6, [r0, #0]
 800315a:	3201      	adds	r2, #1
 800315c:	f801 5901 	strb.w	r5, [r1], #-1
 8003160:	e7f4      	b.n	800314c <__utoa+0x68>
 8003162:	bf00      	nop
 8003164:	080052b0 	.word	0x080052b0

08003168 <memset>:
 8003168:	4402      	add	r2, r0
 800316a:	4603      	mov	r3, r0
 800316c:	4293      	cmp	r3, r2
 800316e:	d100      	bne.n	8003172 <memset+0xa>
 8003170:	4770      	bx	lr
 8003172:	f803 1b01 	strb.w	r1, [r3], #1
 8003176:	e7f9      	b.n	800316c <memset+0x4>

08003178 <__libc_init_array>:
 8003178:	b570      	push	{r4, r5, r6, lr}
 800317a:	4d0d      	ldr	r5, [pc, #52]	@ (80031b0 <__libc_init_array+0x38>)
 800317c:	4c0d      	ldr	r4, [pc, #52]	@ (80031b4 <__libc_init_array+0x3c>)
 800317e:	1b64      	subs	r4, r4, r5
 8003180:	10a4      	asrs	r4, r4, #2
 8003182:	2600      	movs	r6, #0
 8003184:	42a6      	cmp	r6, r4
 8003186:	d109      	bne.n	800319c <__libc_init_array+0x24>
 8003188:	4d0b      	ldr	r5, [pc, #44]	@ (80031b8 <__libc_init_array+0x40>)
 800318a:	4c0c      	ldr	r4, [pc, #48]	@ (80031bc <__libc_init_array+0x44>)
 800318c:	f000 f818 	bl	80031c0 <_init>
 8003190:	1b64      	subs	r4, r4, r5
 8003192:	10a4      	asrs	r4, r4, #2
 8003194:	2600      	movs	r6, #0
 8003196:	42a6      	cmp	r6, r4
 8003198:	d105      	bne.n	80031a6 <__libc_init_array+0x2e>
 800319a:	bd70      	pop	{r4, r5, r6, pc}
 800319c:	f855 3b04 	ldr.w	r3, [r5], #4
 80031a0:	4798      	blx	r3
 80031a2:	3601      	adds	r6, #1
 80031a4:	e7ee      	b.n	8003184 <__libc_init_array+0xc>
 80031a6:	f855 3b04 	ldr.w	r3, [r5], #4
 80031aa:	4798      	blx	r3
 80031ac:	3601      	adds	r6, #1
 80031ae:	e7f2      	b.n	8003196 <__libc_init_array+0x1e>
 80031b0:	080052e0 	.word	0x080052e0
 80031b4:	080052e0 	.word	0x080052e0
 80031b8:	080052e0 	.word	0x080052e0
 80031bc:	080052e4 	.word	0x080052e4

080031c0 <_init>:
 80031c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80031c2:	bf00      	nop
 80031c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80031c6:	bc08      	pop	{r3}
 80031c8:	469e      	mov	lr, r3
 80031ca:	4770      	bx	lr

080031cc <_fini>:
 80031cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80031ce:	bf00      	nop
 80031d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80031d2:	bc08      	pop	{r3}
 80031d4:	469e      	mov	lr, r3
 80031d6:	4770      	bx	lr
